; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\iap.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\iap.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -I..\FATFS -I..\IAP -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\output\iap.crf --no_multibyte_chars ..\IAP\iap.c]
                          THUMB

                          AREA ||i.iap_load_app||, CODE, READONLY, ALIGN=2

                  iap_load_app PROC
;;;48     //appxaddr:用户代码起始地址.
;;;49     void iap_load_app(u32 appxaddr)
000000  b510              PUSH     {r4,lr}
;;;50     {
;;;51     	if(((*(vu32*)appxaddr)&0x2FFE0000)==0x20000000)	//检查栈顶地址是否合法.
000002  6801              LDR      r1,[r0,#0]
000004  4a07              LDR      r2,|L1.36|
000006  4011              ANDS     r1,r1,r2
000008  f1b15f00          CMP      r1,#0x20000000
00000c  d109              BNE      |L1.34|
;;;52     	{ 
;;;53     		jump2app=(iapfun)*(vu32*)(appxaddr+4);		//用户代码区第二个字为程序开始地址(复位地址)		
00000e  6841              LDR      r1,[r0,#4]
000010  4c05              LDR      r4,|L1.40|
000012  6021              STR      r1,[r4,#0]  ; jump2app
;;;54     		MSR_MSP(*(vu32*)appxaddr);					//初始化APP堆栈指针(用户代码区的第一个字用于存放栈顶地址)
000014  6800              LDR      r0,[r0,#0]
000016  f7fffffe          BL       MSR_MSP
;;;55     		jump2app();									//跳转到APP.
00001a  6820              LDR      r0,[r4,#0]  ; jump2app
00001c  e8bd4010          POP      {r4,lr}
000020  4700              BX       r0
                  |L1.34|
;;;56     	}
;;;57     }		 
000022  bd10              POP      {r4,pc}
;;;58     
                          ENDP

                  |L1.36|
                          DCD      0x2ffe0000
                  |L1.40|
                          DCD      ||.data||

                          AREA ||i.iap_write_appbin||, CODE, READONLY, ALIGN=2

                  iap_write_appbin PROC
;;;23     //appsize:应用程序大小(字节).
;;;24     void iap_write_appbin(u32 appxaddr,u8 *appbuf,u32 appsize)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;25     {
000004  4607              MOV      r7,r0
000006  460d              MOV      r5,r1
000008  4690              MOV      r8,r2
;;;26     	u16 t;
;;;27     	u16 i=0;
00000a  2400              MOVS     r4,#0
;;;28     	u16 temp;
;;;29     	u32 fwaddr=appxaddr;//当前写入的地址
;;;30     	u8 *dfu=appbuf;
;;;31     	for(t=0;t<appsize;t+=2)
00000c  2600              MOVS     r6,#0
;;;32     	{						    
;;;33     		temp=(u16)dfu[1]<<8;
;;;34     		temp+=(u16)dfu[0];	  
;;;35     		dfu+=2;//偏移2个字节
;;;36     		iapbuf[i++]=temp;	    
;;;37     		if(i==1024)
00000e  f44f6980          MOV      r9,#0x400
000012  f8dfa04c          LDR      r10,|L2.96|
000016  e015              B        |L2.68|
                  |L2.24|
000018  7868              LDRB     r0,[r5,#1]            ;33
00001a  0200              LSLS     r0,r0,#8              ;33
00001c  f8151b02          LDRB     r1,[r5],#2            ;34
000020  4408              ADD      r0,r0,r1              ;34
000022  4621              MOV      r1,r4                 ;36
000024  1c64              ADDS     r4,r4,#1              ;36
000026  b2a4              UXTH     r4,r4                 ;36
000028  f82a0011          STRH     r0,[r10,r1,LSL #1]    ;36
00002c  464a              MOV      r2,r9
00002e  4294              CMP      r4,r2
000030  d106              BNE      |L2.64|
;;;38     		{
;;;39     			i=0;
000032  2400              MOVS     r4,#0
;;;40     			STMFLASH_Write(fwaddr,iapbuf,1024);	
000034  490a              LDR      r1,|L2.96|
000036  4638              MOV      r0,r7
000038  f7fffffe          BL       STMFLASH_Write
;;;41     			fwaddr+=2048;//偏移2048  16=2*8.所以要乘以2.
00003c  f5076700          ADD      r7,r7,#0x800
                  |L2.64|
000040  1cb6              ADDS     r6,r6,#2              ;31
000042  b2b6              UXTH     r6,r6                 ;31
                  |L2.68|
000044  4546              CMP      r6,r8                 ;31
000046  d3e7              BCC      |L2.24|
;;;42     		}
;;;43     	}
;;;44     	if(i)STMFLASH_Write(fwaddr,iapbuf,i);//将最后的一些内容字节写进去.  
000048  2c00              CMP      r4,#0
00004a  d006              BEQ      |L2.90|
00004c  4622              MOV      r2,r4
00004e  4638              MOV      r0,r7
000050  e8bd47f0          POP      {r4-r10,lr}
000054  4902              LDR      r1,|L2.96|
000056  f7ffbffe          B.W      STMFLASH_Write
                  |L2.90|
;;;45     }
00005a  e8bd87f0          POP      {r4-r10,pc}
;;;46     
                          ENDP

00005e  0000              DCW      0x0000
                  |L2.96|
                          DCD      ||.bss||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  iapbuf
                          %        2048

                          AREA ||.data||, DATA, ALIGN=2

                  jump2app
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\IAP\\iap.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_iap_c_084511fe____REV16|
#line 129 "D:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_iap_c_084511fe____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_iap_c_084511fe____REVSH|
#line 144
|__asm___5_iap_c_084511fe____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
