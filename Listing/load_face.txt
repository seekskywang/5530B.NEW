; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\load_face.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\load_face.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -I..\FATFS -I..\IAP -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\output\load_face.crf --no_multibyte_chars ..\APP\load_Face.c]
                          THUMB

                          AREA ||i.CreateWindow2||, CODE, READONLY, ALIGN=2

                  CreateWindow2 PROC
;;;580    
;;;581    WM_HWIN CreateWindow2(void) {
000000  b57c              PUSH     {r2-r6,lr}
;;;582      if(page_sw == face_graph)
000002  4c1e              LDR      r4,|L1.124|
000004  7820              LDRB     r0,[r4,#0]  ; page_sw
000006  2800              CMP      r0,#0
000008  d001              BEQ      |L1.14|
;;;583      {      
;;;584      }else{
;;;585          IO_OFF();
00000a  f7fffffe          BL       IO_OFF
                  |L1.14|
;;;586      }
;;;587      page_sw = face_load;
00000e  2004              MOVS     r0,#4
000010  7020              STRB     r0,[r4,#0]
;;;588      track = face_load;
000012  491b              LDR      r1,|L1.128|
000014  7008              STRB     r0,[r1,#0]
;;;589      set_sw = set_24;
000016  491b              LDR      r1,|L1.132|
000018  2017              MOVS     r0,#0x17
00001a  7008              STRB     r0,[r1,#0]
;;;590      load_cutoffv = (float)set_load_cutoffv/1000;
00001c  481a              LDR      r0,|L1.136|
00001e  eddf0a1b          VLDR     s1,|L1.140|
000022  4d1b              LDR      r5,|L1.144|
000024  f9b00008          LDRSH    r0,[r0,#8]  ; InFlashSave
000028  ee000a10          VMOV     s0,r0
00002c  eeb80ac0          VCVT.F32.S32 s0,s0
000030  ee801a20          VDIV.F32 s2,s0,s1
000034  ed851a02          VSTR     s2,[r5,#8]
;;;591      SET_Current_Laod = load_c;
000038  4816              LDR      r0,|L1.148|
00003a  f8d01094          LDR      r1,[r0,#0x94]  ; Run_Control
00003e  6101              STR      r1,[r0,#0x10]  ; Run_Control
;;;592      pass = 0;  
000040  4915              LDR      r1,|L1.152|
000042  2400              MOVS     r4,#0
000044  700c              STRB     r4,[r1,#0]
;;;593      mode_sw = mode_load;
000046  4a15              LDR      r2,|L1.156|
000048  2102              MOVS     r1,#2
00004a  7011              STRB     r1,[r2,#0]
;;;594      SET_Voltage_Laod = load_v; 
00004c  f8d010a4          LDR      r1,[r0,#0xa4]  ; Run_Control
000050  60c1              STR      r1,[r0,#0xc]  ; Run_Control
;;;595    //   GPIO_SetBits(GPIOA,GPIO_Pin_15);//电子负载OFF
;;;596    //   GPIO_ResetBits(GPIOC,GPIO_Pin_1);//关闭电源输出
;;;597    //   GPIO_SetBits(GPIOC,GPIO_Pin_13);//关闭电源输出继电器
;;;598      TM1650_SET_LED(0x68,0x70);
000052  2170              MOVS     r1,#0x70
000054  2068              MOVS     r0,#0x68
000056  f7fffffe          BL       TM1650_SET_LED
;;;599      GPIO_ResetBits(GPIOD,GPIO_Pin_12);//灭灯
00005a  f44f5180          MOV      r1,#0x1000
00005e  4810              LDR      r0,|L1.160|
000060  f7fffffe          BL       GPIO_ResetBits
;;;600      load_wind = GUI_CreateDialogBox(_aDialogCreate2, GUI_COUNTOF(_aDialogCreate2), _cbDialog2, WM_HBKWIN, 0, 0);
000064  f7fffffe          BL       WM_GetDesktopWindow
000068  4603              MOV      r3,r0
00006a  9400              STR      r4,[sp,#0]
00006c  4a0d              LDR      r2,|L1.164|
00006e  2117              MOVS     r1,#0x17
000070  480d              LDR      r0,|L1.168|
000072  9401              STR      r4,[sp,#4]
000074  f7fffffe          BL       GUI_CreateDialogBox
000078  6068              STR      r0,[r5,#4]  ; load_wind
;;;601      return load_wind;
;;;602    }
00007a  bd7c              POP      {r2-r6,pc}
;;;603    
                          ENDP

                  |L1.124|
                          DCD      page_sw
                  |L1.128|
                          DCD      track
                  |L1.132|
                          DCD      set_sw
                  |L1.136|
                          DCD      InFlashSave
                  |L1.140|
00008c  447a0000          DCFS     0x447a0000 ; 1000
                  |L1.144|
                          DCD      ||.data||
                  |L1.148|
                          DCD      Run_Control
                  |L1.152|
                          DCD      pass
                  |L1.156|
                          DCD      mode_sw
                  |L1.160|
                          DCD      0x40020c00
                  |L1.164|
                          DCD      _cbDialog2
                  |L1.168|
                          DCD      ||.constdata||

                          AREA ||i.DEL_LOAD||, CODE, READONLY, ALIGN=2

                  DEL_LOAD PROC
;;;893    }
;;;894    void DEL_LOAD(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;895    {
;;;896    	switch(set_sw){
000004  482b              LDR      r0,|L2.180|
000006  7801              LDRB     r1,[r0,#0]  ; set_sw
;;;897    		case set_25:
;;;898            {
;;;899    			WM_HWIN hItem;
;;;900    //            WM_InvalidateWindow(hWinWind);
;;;901                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
000008  482b              LDR      r0,|L2.184|
;;;902    			if(bit > 1)
;;;903    			{
;;;904    				bit --;
;;;905    				set_limit[bit-1] = '\0';
00000a  4f2c              LDR      r7,|L2.188|
00000c  2400              MOVS     r4,#0                 ;901
00000e  6840              LDR      r0,[r0,#4]            ;901
000010  4d2b              LDR      r5,|L2.192|
;;;906    			}
;;;907    			if(bit == dot_flag)
000012  4e2c              LDR      r6,|L2.196|
000014  2918              CMP      r1,#0x18              ;896
000016  d01b              BEQ      |L2.80|
000018  2943              CMP      r1,#0x43              ;896
00001a  d031              BEQ      |L2.128|
00001c  2956              CMP      r1,#0x56              ;896
00001e  d147              BNE      |L2.176|
;;;908    			{
;;;909    				dot_flag = 0;
;;;910    			}
;;;911    			TEXT_SetText(hItem,set_limit);
;;;912    		}break;
;;;913    		case set_68:
;;;914            {
;;;915    			WM_HWIN hItem;
;;;916    //            WM_InvalidateWindow(hWinWind);
;;;917                hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
;;;918    			if(bit > 1)
;;;919    			{
;;;920    				bit --;
;;;921    				set_limit[bit-1] = '\0';
;;;922    			}
;;;923    			if(bit == dot_flag)
;;;924    			{
;;;925    				dot_flag = 0;
;;;926    			}
;;;927    			TEXT_SetText(hItem,set_limit);
;;;928    		}break;
;;;929    		case set_87:
;;;930            {
;;;931                WM_HWIN hItem;
;;;932    //            WM_InvalidateWindow(hWinWind);
;;;933                hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
000020  f640112d          MOV      r1,#0x92d
000024  f7fffffe          BL       WM_GetDialogItem
;;;934    			if(bit > 1)
000028  7829              LDRB     r1,[r5,#0]  ; bit
00002a  2901              CMP      r1,#1
00002c  d906              BLS      |L2.60|
;;;935    			{
;;;936    				bit --;
00002e  7829              LDRB     r1,[r5,#0]  ; bit
000030  1e49              SUBS     r1,r1,#1
000032  7029              STRB     r1,[r5,#0]
;;;937    				set_limit[bit-1] = '\0';
000034  7829              LDRB     r1,[r5,#0]  ; bit
000036  4439              ADD      r1,r1,r7
000038  f8014c01          STRB     r4,[r1,#-1]
                  |L2.60|
;;;938    			}
;;;939    			if(bit == dot_flag)
00003c  7829              LDRB     r1,[r5,#0]  ; bit
00003e  7832              LDRB     r2,[r6,#0]  ; dot_flag
000040  4291              CMP      r1,r2
000042  d100              BNE      |L2.70|
;;;940    			{
;;;941    				dot_flag = 0;
000044  7034              STRB     r4,[r6,#0]
                  |L2.70|
;;;942    			}
;;;943    			TEXT_SetText(hItem,set_limit);
000046  e8bd41f0          POP      {r4-r8,lr}
00004a  491c              LDR      r1,|L2.188|
00004c  f7ffbffe          B.W      TEXT_SetText
                  |L2.80|
000050  f640016e          MOV      r1,#0x86e             ;901
000054  f7fffffe          BL       WM_GetDialogItem
000058  7829              LDRB     r1,[r5,#0]            ;902  ; bit
00005a  2901              CMP      r1,#1                 ;902
00005c  d906              BLS      |L2.108|
00005e  7829              LDRB     r1,[r5,#0]            ;904  ; bit
000060  1e49              SUBS     r1,r1,#1              ;904
000062  7029              STRB     r1,[r5,#0]            ;904
000064  7829              LDRB     r1,[r5,#0]            ;905  ; bit
000066  4439              ADD      r1,r1,r7              ;905
000068  f8014c01          STRB     r4,[r1,#-1]           ;905
                  |L2.108|
00006c  7829              LDRB     r1,[r5,#0]            ;907  ; bit
00006e  7832              LDRB     r2,[r6,#0]            ;907  ; dot_flag
000070  4291              CMP      r1,r2                 ;907
000072  d100              BNE      |L2.118|
000074  7034              STRB     r4,[r6,#0]            ;909
                  |L2.118|
000076  e8bd41f0          POP      {r4-r8,lr}            ;911
00007a  4910              LDR      r1,|L2.188|
00007c  f7ffbffe          B.W      TEXT_SetText
                  |L2.128|
000080  f6401111          MOV      r1,#0x911             ;917
000084  f7fffffe          BL       WM_GetDialogItem
000088  7829              LDRB     r1,[r5,#0]            ;918  ; bit
00008a  2901              CMP      r1,#1                 ;918
00008c  d906              BLS      |L2.156|
00008e  7829              LDRB     r1,[r5,#0]            ;920  ; bit
000090  1e49              SUBS     r1,r1,#1              ;920
000092  7029              STRB     r1,[r5,#0]            ;920
000094  7829              LDRB     r1,[r5,#0]            ;921  ; bit
000096  4439              ADD      r1,r1,r7              ;921
000098  f8014c01          STRB     r4,[r1,#-1]           ;921
                  |L2.156|
00009c  7829              LDRB     r1,[r5,#0]            ;923  ; bit
00009e  7832              LDRB     r2,[r6,#0]            ;923  ; dot_flag
0000a0  4291              CMP      r1,r2                 ;923
0000a2  d100              BNE      |L2.166|
0000a4  7034              STRB     r4,[r6,#0]            ;925
                  |L2.166|
0000a6  e8bd41f0          POP      {r4-r8,lr}            ;927
0000aa  4904              LDR      r1,|L2.188|
0000ac  f7ffbffe          B.W      TEXT_SetText
                  |L2.176|
;;;944    		}break;
;;;945    	}
;;;946    }
0000b0  e8bd81f0          POP      {r4-r8,pc}
;;;947    
                          ENDP

                  |L2.180|
                          DCD      set_sw
                  |L2.184|
                          DCD      ||.data||
                  |L2.188|
                          DCD      set_limit
                  |L2.192|
                          DCD      bit
                  |L2.196|
                          DCD      dot_flag

                          AREA ||i.INPUT_LOAD||, CODE, READONLY, ALIGN=2

                  INPUT_LOAD PROC
;;;948    void INPUT_LOAD(char* num);            
;;;949    void INPUT_LOAD(char* num){
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
;;;950    	u8 i;    
;;;951        switch(set_sw)
000006  4840              LDR      r0,|L3.264|
000008  7802              LDRB     r2,[r0,#0]  ; set_sw
;;;952        {
;;;953            case set_25:
;;;954            {
;;;955                WM_HWIN hItem;
;;;956     //           WM_InvalidateWindow(load_wind);
;;;957                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
00000a  4840              LDR      r0,|L3.268|
;;;958    			if(bit < 6)
;;;959    			{
;;;960    				strcat(set_limit,num);
;;;961    			}
;;;962    			if(dot_flag != 0 && strcmp(num,".") == 0)
00000c  4c40              LDR      r4,|L3.272|
00000e  4d41              LDR      r5,|L3.276|
000010  6840              LDR      r0,[r0,#4]            ;957
000012  2a18              CMP      r2,#0x18              ;951
000014  d01b              BEQ      |L3.78|
000016  2a43              CMP      r2,#0x43              ;951
000018  d03e              BEQ      |L3.152|
00001a  2a56              CMP      r2,#0x56              ;951
00001c  d171              BNE      |L3.258|
;;;963    			{
;;;964    				
;;;965    			}else{			
;;;966    				
;;;967    				if(dot_flag == 0 && strcmp(num,".") == 0)
;;;968    				{
;;;969    					dot_flag = bit;
;;;970    				}
;;;971    				bit ++;
;;;972    			}
;;;973    			TEXT_SetText(hItem,set_limit);
;;;974    //            switch(bit){
;;;975    //                case 1:
;;;976    //                {
;;;977    //					for(i=0;i<6;i++)
;;;978    //					{
;;;979    //						set_limit[i] = '\0';
;;;980    //					}
;;;981    //                    load_c = atoi(num) * 1000;
;;;982    //                    strcat(set_limit,num);            
;;;983    //                    TEXT_SetText(hItem,set_limit);
;;;984    //                    
;;;985    //                    bit = 2;
;;;986    //                    break;
;;;987    //                }
;;;988    //                case 2:
;;;989    //                {
;;;990    //                    strcat(set_limit,num);            
;;;991    //                    TEXT_SetText(hItem,set_limit);
;;;992    //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;993    //                    {
;;;994    //                        dot_flag = 1;
;;;995    //                    }else{
;;;996    //                        load_c = load_c * 10 + atoi(num) * 1000;
;;;997    //                    }
;;;998    //                    bit = 3;
;;;999    //                    break;
;;;1000   //                }
;;;1001   //                case 3:
;;;1002   //                {
;;;1003   //                    strcat(set_limit,num);
;;;1004   //                    TEXT_SetText(hItem,set_limit);
;;;1005   //                    if(dot_flag == 0)
;;;1006   //                    {
;;;1007   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1008   //                        {                            
;;;1009   //                            dot_flag = 2;
;;;1010   //                        }else{
;;;1011   //                            load_c = 0;
;;;1012   //                        }
;;;1013   //                    }else{
;;;1014   //                        load_c = load_c + atoi(num) * 100;
;;;1015   //                    }                  
;;;1016   //                    bit = 4;
;;;1017   //                    break;
;;;1018   //                }
;;;1019   //                case 4:
;;;1020   //                {
;;;1021   //                    strcat(set_limit,num);
;;;1022   //                    TEXT_SetText(hItem,set_limit);
;;;1023   //                    if(dot_flag == 0)
;;;1024   //                    {
;;;1025   //                        load_c = 0;
;;;1026   //                    }else if(dot_flag == 2){
;;;1027   //                        load_c = load_c + atoi(num) * 100;
;;;1028   //                    }else{
;;;1029   //                        load_c = load_c + atoi(num) * 10;
;;;1030   //                    }                  
;;;1031   //                    bit = 5;
;;;1032   //                    break;
;;;1033   //                }
;;;1034   //                case 5:
;;;1035   //                {
;;;1036   //                    strcat(set_limit,num);
;;;1037   //                    TEXT_SetText(hItem,set_limit);
;;;1038   //                    if(dot_flag == 0)
;;;1039   //                    {
;;;1040   //                        load_c = 0;
;;;1041   //                    }else if(dot_flag == 1){
;;;1042   //                        load_c = load_c + atoi(num);
;;;1043   //                    }else{
;;;1044   //                        load_c = load_c + atoi(num) * 10;
;;;1045   //                    }                 
;;;1046   //                    bit = 6;
;;;1047   //                    break;
;;;1048   //                }
;;;1049   //                case 6:
;;;1050   //                {
;;;1051   //                    strcat(set_limit,num);
;;;1052   //                    TEXT_SetText(hItem,set_limit);
;;;1053   //                    if(dot_flag == 0)
;;;1054   //                    {
;;;1055   //                        load_c = 0;
;;;1056   //                    }else if(dot_flag == 2){
;;;1057   //                        load_c = load_c + atoi(num);
;;;1058   //                    }                 
;;;1059   //                    bit = 1;
;;;1060   //                    break;
;;;1061   //                }
;;;1062   //            }
;;;1063               break;
;;;1064               
;;;1065           }
;;;1066           case set_68:
;;;1067           {
;;;1068               WM_HWIN hItem;
;;;1069    //           WM_InvalidateWindow(load_wind);
;;;1070               hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
;;;1071   			if(bit < 6)
;;;1072   			{
;;;1073   				strcat(set_limit,num);
;;;1074   			}
;;;1075   			if(dot_flag != 0 && strcmp(num,".") == 0)
;;;1076   			{
;;;1077   				
;;;1078   			}else{			
;;;1079   				
;;;1080   				if(dot_flag == 0 && strcmp(num,".") == 0)
;;;1081   				{
;;;1082   					dot_flag = bit;
;;;1083   				}
;;;1084   				bit ++;
;;;1085   			}
;;;1086   			TEXT_SetText(hItem,set_limit);
;;;1087   //            switch(bit){
;;;1088   //                case 1:
;;;1089   //                {
;;;1090   //					for(i=0;i<6;i++)
;;;1091   //					{
;;;1092   //						set_limit[i] = '\0';
;;;1093   //					}
;;;1094   //                    load_v = atoi(num) * 1000;
;;;1095   //                    strcat(set_limit,num);            
;;;1096   //                    TEXT_SetText(hItem,set_limit);
;;;1097   //                    
;;;1098   //                    bit = 2;
;;;1099   //                    break;
;;;1100   //                }
;;;1101   //                case 2:
;;;1102   //                {
;;;1103   //                    strcat(set_limit,num);            
;;;1104   //                    TEXT_SetText(hItem,set_limit);
;;;1105   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1106   //                    {
;;;1107   //                        dot_flag = 1;
;;;1108   //                    }else{
;;;1109   //                        load_v = load_v * 10 + atoi(num) * 1000;
;;;1110   //                    }
;;;1111   //                    bit = 3;
;;;1112   //                    break;
;;;1113   //                }
;;;1114   //                case 3:
;;;1115   //                {
;;;1116   //                    strcat(set_limit,num);
;;;1117   //                    TEXT_SetText(hItem,set_limit);
;;;1118   //                    if(dot_flag == 0)
;;;1119   //                    {
;;;1120   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1121   //                        {                            
;;;1122   //                            dot_flag = 2;
;;;1123   //                        }else{
;;;1124   //                            load_v = 0;
;;;1125   //                        }
;;;1126   //                    }else{
;;;1127   //                        load_v = load_v + atoi(num) * 100;
;;;1128   //                    }                  
;;;1129   //                    bit = 4;
;;;1130   //                    break;
;;;1131   //                }
;;;1132   //                case 4:
;;;1133   //                {
;;;1134   //                    strcat(set_limit,num);
;;;1135   //                    TEXT_SetText(hItem,set_limit);
;;;1136   //                    if(dot_flag == 0)
;;;1137   //                    {
;;;1138   //                        load_v = 0;
;;;1139   //                    }else if(dot_flag == 2){
;;;1140   //                        load_v = load_v + atoi(num) * 100;
;;;1141   //                    }else{
;;;1142   //                        load_v = load_v + atoi(num) * 10;
;;;1143   //                    }                  
;;;1144   //                    bit = 5;
;;;1145   //                    break;
;;;1146   //                }
;;;1147   //                case 5:
;;;1148   //                {
;;;1149   //                    strcat(set_limit,num);
;;;1150   //                    TEXT_SetText(hItem,set_limit);
;;;1151   //                    if(dot_flag == 0)
;;;1152   //                    {
;;;1153   //                        load_v = 0;
;;;1154   //                    }else if(dot_flag == 1){
;;;1155   //                        load_v = load_v + atoi(num);
;;;1156   //                    }else{
;;;1157   //                        load_v = load_v + atoi(num) * 10;
;;;1158   //                    }                 
;;;1159   //                    bit = 6;
;;;1160   //                    break;
;;;1161   //                }
;;;1162   //                case 6:
;;;1163   //                {
;;;1164   //                    strcat(set_limit,num);
;;;1165   //                    TEXT_SetText(hItem,set_limit);
;;;1166   //                    if(dot_flag == 0)
;;;1167   //                    {
;;;1168   //                        load_v = 0;
;;;1169   //                    }else if(dot_flag == 2){
;;;1170   //                        load_v = load_v + atoi(num);
;;;1171   //                    }                 
;;;1172   //                    bit = 1;
;;;1173   //                    break;
;;;1174   //                }
;;;1175   //            }
;;;1176               break;
;;;1177               
;;;1178           }
;;;1179   		case set_87:
;;;1180           {
;;;1181               WM_HWIN hItem;
;;;1182    //           WM_InvalidateWindow(load_wind);
;;;1183               hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
00001e  f640112d          MOV      r1,#0x92d
000022  f7fffffe          BL       WM_GetDialogItem
000026  4607              MOV      r7,r0
;;;1184   			if(bit < 6)
000028  7828              LDRB     r0,[r5,#0]  ; bit
00002a  2806              CMP      r0,#6
00002c  d203              BCS      |L3.54|
;;;1185   			{
;;;1186   				strcat(set_limit,num);
00002e  4631              MOV      r1,r6
000030  4839              LDR      r0,|L3.280|
000032  f7fffffe          BL       strcat
                  |L3.54|
;;;1187   			}
;;;1188   			if(dot_flag != 0 && strcmp(num,".") == 0)
000036  7820              LDRB     r0,[r4,#0]  ; dot_flag
000038  b128              CBZ      r0,|L3.70|
00003a  a138              ADR      r1,|L3.284|
00003c  4630              MOV      r0,r6
00003e  f7fffffe          BL       strcmp
000042  2800              CMP      r0,#0
000044  d057              BEQ      |L3.246|
                  |L3.70|
;;;1189   			{
;;;1190   				
;;;1191   			}else{			
;;;1192   				
;;;1193   				if(dot_flag == 0 && strcmp(num,".") == 0)
000046  7820              LDRB     r0,[r4,#0]  ; dot_flag
000048  2800              CMP      r0,#0
00004a  d04a              BEQ      |L3.226|
00004c  e050              B        |L3.240|
                  |L3.78|
00004e  f640016e          MOV      r1,#0x86e             ;957
000052  f7fffffe          BL       WM_GetDialogItem
000056  4607              MOV      r7,r0                 ;957
000058  7828              LDRB     r0,[r5,#0]            ;958  ; bit
00005a  2806              CMP      r0,#6                 ;958
00005c  d203              BCS      |L3.102|
00005e  4631              MOV      r1,r6                 ;960
000060  482d              LDR      r0,|L3.280|
000062  f7fffffe          BL       strcat
                  |L3.102|
000066  7820              LDRB     r0,[r4,#0]            ;962  ; dot_flag
000068  b120              CBZ      r0,|L3.116|
00006a  a12c              ADR      r1,|L3.284|
00006c  4630              MOV      r0,r6                 ;962
00006e  f7fffffe          BL       strcmp
000072  b158              CBZ      r0,|L3.140|
                  |L3.116|
000074  7820              LDRB     r0,[r4,#0]            ;967  ; dot_flag
000076  b930              CBNZ     r0,|L3.134|
000078  a128              ADR      r1,|L3.284|
00007a  4630              MOV      r0,r6                 ;967
00007c  f7fffffe          BL       strcmp
000080  b908              CBNZ     r0,|L3.134|
000082  7828              LDRB     r0,[r5,#0]            ;969  ; bit
000084  7020              STRB     r0,[r4,#0]            ;969
                  |L3.134|
000086  7828              LDRB     r0,[r5,#0]            ;971  ; bit
000088  1c40              ADDS     r0,r0,#1              ;971
00008a  7028              STRB     r0,[r5,#0]            ;971
                  |L3.140|
00008c  4638              MOV      r0,r7                 ;973
00008e  e8bd41f0          POP      {r4-r8,lr}            ;973
000092  4921              LDR      r1,|L3.280|
000094  f7ffbffe          B.W      TEXT_SetText
                  |L3.152|
000098  f6401111          MOV      r1,#0x911             ;1070
00009c  f7fffffe          BL       WM_GetDialogItem
0000a0  4607              MOV      r7,r0                 ;1070
0000a2  7828              LDRB     r0,[r5,#0]            ;1071  ; bit
0000a4  2806              CMP      r0,#6                 ;1071
0000a6  d203              BCS      |L3.176|
0000a8  4631              MOV      r1,r6                 ;1073
0000aa  481b              LDR      r0,|L3.280|
0000ac  f7fffffe          BL       strcat
                  |L3.176|
0000b0  7820              LDRB     r0,[r4,#0]            ;1075  ; dot_flag
0000b2  b120              CBZ      r0,|L3.190|
0000b4  a119              ADR      r1,|L3.284|
0000b6  4630              MOV      r0,r6                 ;1075
0000b8  f7fffffe          BL       strcmp
0000bc  b158              CBZ      r0,|L3.214|
                  |L3.190|
0000be  7820              LDRB     r0,[r4,#0]            ;1080  ; dot_flag
0000c0  b930              CBNZ     r0,|L3.208|
0000c2  a116              ADR      r1,|L3.284|
0000c4  4630              MOV      r0,r6                 ;1080
0000c6  f7fffffe          BL       strcmp
0000ca  b908              CBNZ     r0,|L3.208|
0000cc  7828              LDRB     r0,[r5,#0]            ;1082  ; bit
0000ce  7020              STRB     r0,[r4,#0]            ;1082
                  |L3.208|
0000d0  7828              LDRB     r0,[r5,#0]            ;1084  ; bit
0000d2  1c40              ADDS     r0,r0,#1              ;1084
0000d4  7028              STRB     r0,[r5,#0]            ;1084
                  |L3.214|
0000d6  4638              MOV      r0,r7                 ;1086
0000d8  e8bd41f0          POP      {r4-r8,lr}            ;1086
0000dc  490e              LDR      r1,|L3.280|
0000de  f7ffbffe          B.W      TEXT_SetText
                  |L3.226|
0000e2  a10e              ADR      r1,|L3.284|
0000e4  4630              MOV      r0,r6
0000e6  f7fffffe          BL       strcmp
0000ea  b908              CBNZ     r0,|L3.240|
;;;1194   				{
;;;1195   					dot_flag = bit;
0000ec  7828              LDRB     r0,[r5,#0]  ; bit
0000ee  7020              STRB     r0,[r4,#0]
                  |L3.240|
;;;1196   				}
;;;1197   				bit ++;
0000f0  7828              LDRB     r0,[r5,#0]  ; bit
0000f2  1c40              ADDS     r0,r0,#1
0000f4  7028              STRB     r0,[r5,#0]
                  |L3.246|
;;;1198   			}
;;;1199   			TEXT_SetText(hItem,set_limit);
0000f6  4638              MOV      r0,r7
0000f8  e8bd41f0          POP      {r4-r8,lr}
0000fc  4906              LDR      r1,|L3.280|
0000fe  f7ffbffe          B.W      TEXT_SetText
                  |L3.258|
;;;1200   //            switch(bit){
;;;1201   //                case 1:
;;;1202   //                {
;;;1203   //					for(i=0;i<6;i++)
;;;1204   //					{
;;;1205   //						set_limit[i] = '\0';
;;;1206   //					}
;;;1207   //                    set_load_cutoffv = atoi(num) * 1000;
;;;1208   //                    strcat(set_limit,num);            
;;;1209   //                    TEXT_SetText(hItem,set_limit);
;;;1210   //                    
;;;1211   //                    bit = 2;
;;;1212   //                    break;
;;;1213   //                }
;;;1214   //                case 2:
;;;1215   //                {
;;;1216   //                    strcat(set_limit,num);            
;;;1217   //                    TEXT_SetText(hItem,set_limit);
;;;1218   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1219   //                    {
;;;1220   //                        dot_flag = 1;
;;;1221   //                    }else{
;;;1222   //                        set_load_cutoffv = set_load_cutoffv * 10 + atoi(num) * 1000;
;;;1223   //                    }
;;;1224   //                    bit = 3;
;;;1225   //                    break;
;;;1226   //                }
;;;1227   //                case 3:
;;;1228   //                {
;;;1229   //                    strcat(set_limit,num);
;;;1230   //                    TEXT_SetText(hItem,set_limit);
;;;1231   //                    if(dot_flag == 0)
;;;1232   //                    {
;;;1233   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1234   //                        {                            
;;;1235   //                            dot_flag = 2;
;;;1236   //                        }else{
;;;1237   //                            set_load_cutoffv = 0;
;;;1238   //                        }
;;;1239   //                    }else{
;;;1240   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 100;
;;;1241   //                    }                  
;;;1242   //                    bit = 4;
;;;1243   //                    break;
;;;1244   //                }
;;;1245   //                case 4:
;;;1246   //                {
;;;1247   //                    strcat(set_limit,num);
;;;1248   //                    TEXT_SetText(hItem,set_limit);
;;;1249   //                    if(dot_flag == 0)
;;;1250   //                    {
;;;1251   //                        set_load_cutoffv = 0;
;;;1252   //                    }else if(dot_flag == 2){
;;;1253   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 100;
;;;1254   //                    }else{
;;;1255   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 10;
;;;1256   //                    }                  
;;;1257   //                    bit = 5;
;;;1258   //                    break;
;;;1259   //                }
;;;1260   //                case 5:
;;;1261   //                {
;;;1262   //                    strcat(set_limit,num);
;;;1263   //                    TEXT_SetText(hItem,set_limit);
;;;1264   //                    if(dot_flag == 0)
;;;1265   //                    {
;;;1266   //                        set_load_cutoffv = 0;
;;;1267   //                    }else if(dot_flag == 1){
;;;1268   //                        set_load_cutoffv = set_load_cutoffv + atoi(num);
;;;1269   //                    }else{
;;;1270   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 10;
;;;1271   //                    }                 
;;;1272   //                    bit = 6;
;;;1273   //                    break;
;;;1274   //                }
;;;1275   //                case 6:
;;;1276   //                {
;;;1277   //                    strcat(set_limit,num);
;;;1278   //                    TEXT_SetText(hItem,set_limit);
;;;1279   //                    if(dot_flag == 0)
;;;1280   //                    {
;;;1281   //                        set_load_cutoffv = 0;
;;;1282   //                    }else if(dot_flag == 2){
;;;1283   //                        set_load_cutoffv = set_load_cutoffv + atoi(num);
;;;1284   //                    }                 
;;;1285   //                    bit = 1;
;;;1286   //                    break;
;;;1287   //                }
;;;1288   //            }
;;;1289               break;
;;;1290               
;;;1291           }
;;;1292           default:break;
;;;1293       }
;;;1294   }
000102  e8bd81f0          POP      {r4-r8,pc}
;;;1295   
                          ENDP

000106  0000              DCW      0x0000
                  |L3.264|
                          DCD      set_sw
                  |L3.268|
                          DCD      ||.data||
                  |L3.272|
                          DCD      dot_flag
                  |L3.276|
                          DCD      bit
                  |L3.280|
                          DCD      set_limit
                  |L3.284|
00011c  2e00              DCB      ".",0
00011e  00                DCB      0
00011f  00                DCB      0

                          AREA ||i.LOAD_OP_DOWN||, CODE, READONLY, ALIGN=2

                  LOAD_OP_DOWN PROC
;;;609    void LOAD_OP_DOWN(void);
;;;610    void LOAD_OP_DOWN(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;611    {
;;;612        switch(set_sw)
000004  4d34              LDR      r5,|L4.216|
000006  7829              LDRB     r1,[r5,#0]  ; set_sw
;;;613        {
;;;614            case set_24:
;;;615            {
;;;616                WM_HWIN hItem;
;;;617                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
000008  4c34              LDR      r4,|L4.220|
;;;618                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
00000a  f06f4670          MVN      r6,#0xf0000000
;;;619                TEXT_SetTextColor(hItem, GUI_WHITE);
00000e  1137              ASRS     r7,r6,#4
;;;620                
;;;621                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;622                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
000010  f8df90cc          LDR      r9,|L4.224|
000014  6860              LDR      r0,[r4,#4]            ;612
000016  f44f6811          MOV      r8,#0x910             ;621
00001a  2917              CMP      r1,#0x17              ;612
00001c  d023              BEQ      |L4.102|
;;;623                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;624    
;;;625                set_sw = set_66;
;;;626                break;
;;;627            }
;;;628            case set_66:
;;;629            {
;;;630                WM_HWIN hItem;
;;;631                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;632                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;633                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;634                
;;;635                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
00001e  f6401a0e          MOV      r10,#0x90e
000022  2941              CMP      r1,#0x41              ;612
000024  d03c              BEQ      |L4.160|
000026  2942              CMP      r1,#0x42              ;612
000028  d11b              BNE      |L4.98|
;;;636                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;637                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;638    
;;;639                set_sw = set_67;
;;;640                break;
;;;641            }
;;;642    		 case set_67:
;;;643            {
;;;644                WM_HWIN hItem;
;;;645                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
00002a  4651              MOV      r1,r10
00002c  f7fffffe          BL       WM_GetDialogItem
000030  4680              MOV      r8,r0
;;;646                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
000032  4631              MOV      r1,r6
000034  4640              MOV      r0,r8
000036  f7fffffe          BL       TEXT_SetBkColor
;;;647                TEXT_SetTextColor(hItem, GUI_WHITE);
00003a  4639              MOV      r1,r7
00003c  4640              MOV      r0,r8
00003e  f7fffffe          BL       TEXT_SetTextColor
;;;648                
;;;649                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
000042  f6401139          MOV      r1,#0x939
000046  6860              LDR      r0,[r4,#4]  ; load_wind
000048  f7fffffe          BL       WM_GetDialogItem
00004c  4604              MOV      r4,r0
;;;650                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00004e  4649              MOV      r1,r9
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       TEXT_SetBkColor
;;;651                TEXT_SetTextColor(hItem, GUI_BLACK);
000056  2100              MOVS     r1,#0
000058  4620              MOV      r0,r4
00005a  f7fffffe          BL       TEXT_SetTextColor
;;;652    
;;;653                set_sw = set_86;
00005e  2055              MOVS     r0,#0x55
000060  7028              STRB     r0,[r5,#0]
                  |L4.98|
;;;654                break;
;;;655            }
;;;656        }   
;;;657    }
000062  e8bd87f0          POP      {r4-r10,pc}
                  |L4.102|
000066  f640016d          MOV      r1,#0x86d             ;617
00006a  f7fffffe          BL       WM_GetDialogItem
00006e  4682              MOV      r10,r0                ;617
000070  4631              MOV      r1,r6                 ;618
000072  4650              MOV      r0,r10                ;618
000074  f7fffffe          BL       TEXT_SetBkColor
000078  4639              MOV      r1,r7                 ;619
00007a  4650              MOV      r0,r10                ;619
00007c  f7fffffe          BL       TEXT_SetTextColor
000080  4641              MOV      r1,r8                 ;621
000082  6860              LDR      r0,[r4,#4]            ;621  ; load_wind
000084  f7fffffe          BL       WM_GetDialogItem
000088  4604              MOV      r4,r0                 ;621
00008a  4649              MOV      r1,r9                 ;622
00008c  4620              MOV      r0,r4                 ;622
00008e  f7fffffe          BL       TEXT_SetBkColor
000092  2100              MOVS     r1,#0                 ;623
000094  4620              MOV      r0,r4                 ;623
000096  f7fffffe          BL       TEXT_SetTextColor
00009a  2041              MOVS     r0,#0x41              ;625
00009c  7028              STRB     r0,[r5,#0]            ;625
00009e  e7e0              B        |L4.98|
                  |L4.160|
0000a0  4641              MOV      r1,r8                 ;631
0000a2  f7fffffe          BL       WM_GetDialogItem
0000a6  4680              MOV      r8,r0                 ;631
0000a8  4631              MOV      r1,r6                 ;632
0000aa  4640              MOV      r0,r8                 ;632
0000ac  f7fffffe          BL       TEXT_SetBkColor
0000b0  4639              MOV      r1,r7                 ;633
0000b2  4640              MOV      r0,r8                 ;633
0000b4  f7fffffe          BL       TEXT_SetTextColor
0000b8  4651              MOV      r1,r10                ;635
0000ba  6860              LDR      r0,[r4,#4]            ;635  ; load_wind
0000bc  f7fffffe          BL       WM_GetDialogItem
0000c0  4604              MOV      r4,r0                 ;635
0000c2  4649              MOV      r1,r9                 ;636
0000c4  4620              MOV      r0,r4                 ;636
0000c6  f7fffffe          BL       TEXT_SetBkColor
0000ca  2100              MOVS     r1,#0                 ;637
0000cc  4620              MOV      r0,r4                 ;637
0000ce  f7fffffe          BL       TEXT_SetTextColor
0000d2  2042              MOVS     r0,#0x42              ;639
0000d4  7028              STRB     r0,[r5,#0]            ;639
0000d6  e7c4              B        |L4.98|
;;;658    
                          ENDP

                  |L4.216|
                          DCD      set_sw
                  |L4.220|
                          DCD      ||.data||
                  |L4.224|
                          DCD      0x00bfffff

                          AREA ||i.LOAD_OP_UP||, CODE, READONLY, ALIGN=2

                  LOAD_OP_UP PROC
;;;659    void LOAD_OP_UP(void);
;;;660    void LOAD_OP_UP(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;661    {
;;;662        switch(set_sw)
000004  4d34              LDR      r5,|L5.216|
000006  7829              LDRB     r1,[r5,#0]  ; set_sw
;;;663        {
;;;664            case set_66:
;;;665            {
;;;666                WM_HWIN hItem;
;;;667                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
000008  4c34              LDR      r4,|L5.220|
;;;668                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;669                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;670                
;;;671                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
;;;672                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00000a  f8dfa0d4          LDR      r10,|L5.224|
00000e  f44f6611          MOV      r6,#0x910             ;667
000012  6860              LDR      r0,[r4,#4]            ;662
000014  f06f4870          MVN      r8,#0xf0000000        ;668
000018  f06f497f          MVN      r9,#0xff000000        ;669
00001c  2941              CMP      r1,#0x41              ;662
00001e  d022              BEQ      |L5.102|
;;;673                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;674    
;;;675                set_sw = set_24;
;;;676                break;
;;;677            }
;;;678            case set_67:
;;;679            {
;;;680                WM_HWIN hItem;
;;;681                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
000020  1eb7              SUBS     r7,r6,#2
000022  2942              CMP      r1,#0x42              ;662
000024  d03c              BEQ      |L5.160|
000026  2955              CMP      r1,#0x55              ;662
000028  d11b              BNE      |L5.98|
;;;682                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;683                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;684                
;;;685                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;686                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;687                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;688    
;;;689                set_sw = set_66;
;;;690                break;
;;;691            }
;;;692    		case set_86:
;;;693            {
;;;694                WM_HWIN hItem;
;;;695                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
00002a  f6401139          MOV      r1,#0x939
00002e  f7fffffe          BL       WM_GetDialogItem
000032  4606              MOV      r6,r0
;;;696                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
000034  4641              MOV      r1,r8
000036  4630              MOV      r0,r6
000038  f7fffffe          BL       TEXT_SetBkColor
;;;697                TEXT_SetTextColor(hItem, GUI_WHITE);
00003c  4649              MOV      r1,r9
00003e  4630              MOV      r0,r6
000040  f7fffffe          BL       TEXT_SetTextColor
;;;698                
;;;699                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
000044  4639              MOV      r1,r7
000046  6860              LDR      r0,[r4,#4]  ; load_wind
000048  f7fffffe          BL       WM_GetDialogItem
00004c  4604              MOV      r4,r0
;;;700                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00004e  4651              MOV      r1,r10
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       TEXT_SetBkColor
;;;701                TEXT_SetTextColor(hItem, GUI_BLACK);
000056  2100              MOVS     r1,#0
000058  4620              MOV      r0,r4
00005a  f7fffffe          BL       TEXT_SetTextColor
;;;702    
;;;703                set_sw = set_67;
00005e  2042              MOVS     r0,#0x42
000060  7028              STRB     r0,[r5,#0]
                  |L5.98|
;;;704                break;
;;;705            }
;;;706        }   
;;;707    }
000062  e8bd87f0          POP      {r4-r10,pc}
                  |L5.102|
000066  4631              MOV      r1,r6                 ;667
000068  f7fffffe          BL       WM_GetDialogItem
00006c  4606              MOV      r6,r0                 ;667
00006e  4641              MOV      r1,r8                 ;668
000070  4630              MOV      r0,r6                 ;668
000072  f7fffffe          BL       TEXT_SetBkColor
000076  4649              MOV      r1,r9                 ;669
000078  4630              MOV      r0,r6                 ;669
00007a  f7fffffe          BL       TEXT_SetTextColor
00007e  f640016d          MOV      r1,#0x86d             ;671
000082  6860              LDR      r0,[r4,#4]            ;671  ; load_wind
000084  f7fffffe          BL       WM_GetDialogItem
000088  4604              MOV      r4,r0                 ;671
00008a  4651              MOV      r1,r10                ;672
00008c  4620              MOV      r0,r4                 ;672
00008e  f7fffffe          BL       TEXT_SetBkColor
000092  2100              MOVS     r1,#0                 ;673
000094  4620              MOV      r0,r4                 ;673
000096  f7fffffe          BL       TEXT_SetTextColor
00009a  2017              MOVS     r0,#0x17              ;675
00009c  7028              STRB     r0,[r5,#0]            ;675
00009e  e7e0              B        |L5.98|
                  |L5.160|
0000a0  4639              MOV      r1,r7                 ;681
0000a2  f7fffffe          BL       WM_GetDialogItem
0000a6  4607              MOV      r7,r0                 ;681
0000a8  4641              MOV      r1,r8                 ;682
0000aa  4638              MOV      r0,r7                 ;682
0000ac  f7fffffe          BL       TEXT_SetBkColor
0000b0  4649              MOV      r1,r9                 ;683
0000b2  4638              MOV      r0,r7                 ;683
0000b4  f7fffffe          BL       TEXT_SetTextColor
0000b8  4631              MOV      r1,r6                 ;685
0000ba  6860              LDR      r0,[r4,#4]            ;685  ; load_wind
0000bc  f7fffffe          BL       WM_GetDialogItem
0000c0  4604              MOV      r4,r0                 ;685
0000c2  4651              MOV      r1,r10                ;686
0000c4  4620              MOV      r0,r4                 ;686
0000c6  f7fffffe          BL       TEXT_SetBkColor
0000ca  2100              MOVS     r1,#0                 ;687
0000cc  4620              MOV      r0,r4                 ;687
0000ce  f7fffffe          BL       TEXT_SetTextColor
0000d2  2041              MOVS     r0,#0x41              ;689
0000d4  7028              STRB     r0,[r5,#0]            ;689
0000d6  e7c4              B        |L5.98|
;;;708    
                          ENDP

                  |L5.216|
                          DCD      set_sw
                  |L5.220|
                          DCD      ||.data||
                  |L5.224|
                          DCD      0x00bfffff

                          AREA ||i.LOAD_SET||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                  LOAD_SET PROC
;;;710    void LOAD_SET(void);
;;;711    void LOAD_SET(void) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  ed2d8b04          VPUSH    {d8-d9}
000008  b085              SUB      sp,sp,#0x14
;;;712        char    buf[6];
;;;713        float   dis_load_c;
;;;714        float   dis_load_v;
;;;715        vu8 i;
;;;716        switch(set_sw)
00000a  4df9              LDR      r5,|L6.1008|
00000c  7829              LDRB     r1,[r5,#0]  ; set_sw
;;;717        {
;;;718            case set_24:
;;;719            {
;;;720                WM_HWIN hItem;
;;;721    //            WM_InvalidateWindow(load_wind);
;;;722                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
;;;723                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;724                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;725                       
;;;726                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
;;;727                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;728                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;729                for(i=0;i<6;i++)
;;;730                {
;;;731                    set_limit[i] = '\0';
;;;732                }
;;;733                set_sw = set_25;
;;;734                break;
;;;735            }
;;;736            case set_25:
;;;737            {
;;;738                WM_HWIN hItem;
;;;739    //            WM_InvalidateWindow(lo\\JK_BTSET\../drive/AD7689.c\AD7689_Bufferad_wind);
;;;740                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
;;;741                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;742                TEXT_SetTextColor(hItem, GUI_WHITE);  
;;;743    			if(dot_flag == 0){
;;;744    				load_c = atoi(set_limit)*1000;					
;;;745    			}else if(dot_flag != 0){
;;;746    				memset(buf, '\0', sizeof(buf));
;;;747    				strncpy(buf,set_limit,dot_flag + 3);
;;;748    				load_c = atof(buf)*1000;
00000e  ed9f8bf9          VLDR     d8,|L6.1012|
000012  4afc              LDR      r2,|L6.1028|
;;;749    			}
;;;750    			if(load_c > 30000 || (float)load_c/1000 * DISS_Voltage > 200){
000014  f8dfa3e4          LDR      r10,|L6.1020|
;;;751                    load_c = 0;
;;;752                }
;;;753                SET_Current_Laod = load_c;            
;;;754                
;;;755                dis_load_c = (float)SET_Current_Laod/1000;
;;;756                sprintf(buf,"%.3f",dis_load_c);
;;;757                TEXT_SetText(hItem,buf);
;;;758                
;;;759                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
;;;760                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;761                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;762                Write_Limits();
;;;763                
;;;764                set_sw = set_24;
;;;765                bit = 1;
000018  2701              MOVS     r7,#1
00001a  f8df83e4          LDR      r8,|L6.1024|
00001e  ed9f9afa          VLDR     s18,|L6.1032|
000022  4efa              LDR      r6,|L6.1036|
000024  f8dfb3e8          LDR      r11,|L6.1040|
000028  2400              MOVS     r4,#0                 ;731
00002a  f8df93e8          LDR      r9,|L6.1044|
00002e  6850              LDR      r0,[r2,#4]            ;716
000030  2942              CMP      r1,#0x42              ;716
000032  d07d              BEQ      |L6.304|
000034  dc25              BGT      |L6.130|
000036  2917              CMP      r1,#0x17              ;716
000038  d07b              BEQ      |L6.306|
00003a  2918              CMP      r1,#0x18              ;716
00003c  d07a              BEQ      |L6.308|
00003e  2941              CMP      r1,#0x41              ;716
000040  d179              BNE      |L6.310|
;;;766                dot_flag = 0;
;;;767                break;
;;;768            }
;;;769            case set_66:
;;;770            {
;;;771                WM_HWIN hItem;
;;;772    //            WM_InvalidateWindow(load_wind);
;;;773                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
000042  f44f6111          MOV      r1,#0x910
000046  4616              MOV      r6,r2
000048  f7fffffe          BL       WM_GetDialogItem
00004c  4607              MOV      r7,r0
;;;774                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
00004e  f06f4170          MVN      r1,#0xf0000000
000052  4638              MOV      r0,r7
000054  f7fffffe          BL       TEXT_SetBkColor
;;;775                TEXT_SetTextColor(hItem, GUI_WHITE);
000058  f06f417f          MVN      r1,#0xff000000
00005c  4638              MOV      r0,r7
00005e  f7fffffe          BL       TEXT_SetTextColor
;;;776                       
;;;777                hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
000062  f6401111          MOV      r1,#0x911
000066  6870              LDR      r0,[r6,#4]  ; load_wind
000068  f7fffffe          BL       WM_GetDialogItem
00006c  4606              MOV      r6,r0
;;;778                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00006e  49ea              LDR      r1,|L6.1048|
000070  4630              MOV      r0,r6
000072  f7fffffe          BL       TEXT_SetBkColor
;;;779                TEXT_SetTextColor(hItem, GUI_BLACK);
000076  2100              MOVS     r1,#0
000078  4630              MOV      r0,r6
00007a  f7fffffe          BL       TEXT_SetTextColor
;;;780                for(i=0;i<6;i++)
00007e  9402              STR      r4,[sp,#8]
000080  e12e              B        |L6.736|
                  |L6.130|
000082  2943              CMP      r1,#0x43              ;716
000084  d070              BEQ      |L6.360|
;;;781                {
;;;782                    set_limit[i] = '\0';
;;;783                }
;;;784                set_sw = set_68;
;;;785                break;
;;;786            }
;;;787            case set_68:
;;;788            {
;;;789                WM_HWIN hItem;
;;;790                hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
;;;791                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;792                TEXT_SetTextColor(hItem, GUI_WHITE); 
;;;793    			if(dot_flag == 0){
;;;794    				load_v = atoi(set_limit)*1000;					
;;;795    			}else if(dot_flag != 0){
;;;796    				memset(buf, '\0', sizeof(buf));
;;;797    				strncpy(buf,set_limit,dot_flag + 3);
;;;798    				load_v = atof(buf)*1000;
;;;799    			}
;;;800    			if(load_v > 80000 || (float)load_v/1000 * DISS_Current > 200){
;;;801                    load_v = 0;
;;;802                }
;;;803                SET_Voltage_Laod = load_v;          
;;;804                
;;;805                dis_load_v = (float)SET_Voltage_Laod/1000;
;;;806                sprintf(buf,"%.3f",dis_load_v);
;;;807                TEXT_SetText(hItem,buf);
;;;808                
;;;809                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;810                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;811                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;812                Write_Limits();
;;;813                
;;;814                set_sw = set_66;
;;;815                bit = 1;
;;;816                dot_flag = 0;
;;;817                break;
;;;818            }
;;;819            case set_67:
;;;820            {
;;;821                switch(flag_Load_CC)
;;;822                {
;;;823                    case 1:
;;;824                    {
;;;825                        WM_HWIN hItem;
;;;826                        hItem = WM_GetDialogItem(load_wind, ID_TEXT_121);
;;;827                        TEXT_SetText(hItem,"CV");
;;;828                        GPIO_SetBits(GPIOC,GPIO_Pin_12);//CV
;;;829                        flag_Load_CC = 0;
;;;830                        load_mode = 0;
;;;831                        Write_LOAD();
;;;832                        break;
;;;833                    }
;;;834                    case 0:
;;;835                    {
;;;836                         WM_HWIN hItem;
;;;837                         hItem = WM_GetDialogItem(load_wind, ID_TEXT_121);
;;;838                         TEXT_SetText(hItem,"CC");
;;;839                         GPIO_ResetBits(GPIOC,GPIO_Pin_12);//CC
;;;840                         flag_Load_CC = 1;
;;;841                         load_mode =1;
;;;842                         Write_LOAD();
;;;843                         break;
;;;844                    }
;;;845                }   
;;;846            }break;
;;;847    		case set_86:
;;;848            {
;;;849                WM_HWIN hItem;
;;;850    //            WM_InvalidateWindow(load_wind);
;;;851                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
000086  f6401a39          MOV      r10,#0x939
;;;852                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;853                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;854                       
;;;855                hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
00008a  f640162d          MOV      r6,#0x92d
00008e  2955              CMP      r1,#0x55              ;716
000090  d06b              BEQ      |L6.362|
000092  2956              CMP      r1,#0x56              ;716
000094  d163              BNE      |L6.350|
;;;856                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;857                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;858                for(i=0;i<6;i++)
;;;859                {
;;;860                    set_limit[i] = '\0';
;;;861                }
;;;862                set_sw = set_87;
;;;863                break;
;;;864            }
;;;865            case set_87:
;;;866            {
;;;867                WM_HWIN hItem;
;;;868                hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
000096  4631              MOV      r1,r6
000098  4693              MOV      r11,r2
00009a  f7fffffe          BL       WM_GetDialogItem
00009e  9001              STR      r0,[sp,#4]
;;;869                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
0000a0  f06f4170          MVN      r1,#0xf0000000
0000a4  9801              LDR      r0,[sp,#4]
0000a6  f7fffffe          BL       TEXT_SetBkColor
;;;870                TEXT_SetTextColor(hItem, GUI_WHITE); 
0000aa  f06f417f          MVN      r1,#0xff000000
0000ae  9801              LDR      r0,[sp,#4]
0000b0  f7fffffe          BL       TEXT_SetTextColor
;;;871    			if(dot_flag == 0){
0000b4  f8990000          LDRB     r0,[r9,#0]  ; dot_flag
;;;872    				set_load_cutoffv = atoi(set_limit)*1000;					
0000b8  4ed8              LDR      r6,|L6.1052|
0000ba  2800              CMP      r0,#0                 ;871
0000bc  d076              BEQ      |L6.428|
;;;873    			}else if(dot_flag != 0){
0000be  f8990000          LDRB     r0,[r9,#0]  ; dot_flag
0000c2  b1a0              CBZ      r0,|L6.238|
;;;874    				memset(buf, '\0', sizeof(buf));
0000c4  9403              STR      r4,[sp,#0xc]
0000c6  9404              STR      r4,[sp,#0x10]
;;;875    				strncpy(buf,set_limit,dot_flag + 3);
0000c8  f8992000          LDRB     r2,[r9,#0]  ; dot_flag
0000cc  49d0              LDR      r1,|L6.1040|
0000ce  1cd2              ADDS     r2,r2,#3
0000d0  a803              ADD      r0,sp,#0xc
0000d2  f7fffffe          BL       strncpy
;;;876    				set_load_cutoffv = atof(buf)*1000;
0000d6  a803              ADD      r0,sp,#0xc
0000d8  f7fffffe          BL       __hardfp_atof
0000dc  ec532b18          VMOV     r2,r3,d8
0000e0  ec510b10          VMOV     r0,r1,d0
0000e4  f7fffffe          BL       __aeabi_dmul
0000e8  f7fffffe          BL       __aeabi_d2iz
0000ec  8130              STRH     r0,[r6,#8]
                  |L6.238|
;;;877    			}
;;;878                load_cutoffv = (float)set_load_cutoffv/1000;
0000ee  f9b60008          LDRSH    r0,[r6,#8]  ; InFlashSave
0000f2  ee000a10          VMOV     s0,r0
0000f6  eef80ac0          VCVT.F32.S32 s1,s0
0000fa  ee800a89          VDIV.F32 s0,s1,s18
0000fe  ed8b0a02          VSTR     s0,[r11,#8]
;;;879                sprintf(buf,"%.3f",load_cutoffv);
000102  ee100a10          VMOV     r0,s0
000106  f7fffffe          BL       __aeabi_f2d
00010a  ec410b10          VMOV     d0,r0,r1
00010e  a1c4              ADR      r1,|L6.1056|
000110  ec532b10          VMOV     r2,r3,d0
000114  a803              ADD      r0,sp,#0xc
000116  f7fffffe          BL       __2sprintf
;;;880                TEXT_SetText(hItem,buf);
00011a  a903              ADD      r1,sp,#0xc
00011c  9801              LDR      r0,[sp,#4]
00011e  f7fffffe          BL       TEXT_SetText
;;;881                
;;;882                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
000122  4651              MOV      r1,r10
000124  f8db0004          LDR      r0,[r11,#4]  ; load_wind
000128  f7fffffe          BL       WM_GetDialogItem
00012c  4606              MOV      r6,r0
;;;883                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00012e  e003              B        |L6.312|
                  |L6.304|
000130  e182              B        |L6.1080|
                  |L6.306|
000132  e01b              B        |L6.364|
                  |L6.308|
000134  e04a              B        |L6.460|
                  |L6.310|
000136  e012              B        |L6.350|
                  |L6.312|
000138  49b7              LDR      r1,|L6.1048|
00013a  4630              MOV      r0,r6
00013c  f7fffffe          BL       TEXT_SetBkColor
;;;884                TEXT_SetTextColor(hItem, GUI_BLACK);
000140  2100              MOVS     r1,#0
000142  4630              MOV      r0,r6
000144  f7fffffe          BL       TEXT_SetTextColor
;;;885                Flash_Write16BitDatas(FLASH_USER_START_ADDR,20, InFlashSave);
000148  4ab4              LDR      r2,|L6.1052|
00014a  2114              MOVS     r1,#0x14
00014c  48b6              LDR      r0,|L6.1064|
00014e  f7fffffe          BL       Flash_Write16BitDatas
;;;886                
;;;887                set_sw = set_86;
000152  2055              MOVS     r0,#0x55
000154  7028              STRB     r0,[r5,#0]
;;;888                bit = 1;
000156  f8887000          STRB     r7,[r8,#0]
;;;889                dot_flag = 0;
00015a  f8894000          STRB     r4,[r9,#0]
                  |L6.350|
;;;890                break;
;;;891            }
;;;892        }
;;;893    }
00015e  b005              ADD      sp,sp,#0x14
000160  ecbd8b04          VPOP     {d8-d9}
000164  e8bd8ff0          POP      {r4-r11,pc}
                  |L6.360|
000168  e0c1              B        |L6.750|
                  |L6.362|
00016a  e196              B        |L6.1178|
                  |L6.364|
00016c  f640016d          MOV      r1,#0x86d             ;722
000170  4616              MOV      r6,r2                 ;722
000172  f7fffffe          BL       WM_GetDialogItem
000176  4607              MOV      r7,r0                 ;722
000178  f06f4170          MVN      r1,#0xf0000000        ;723
00017c  4638              MOV      r0,r7                 ;723
00017e  f7fffffe          BL       TEXT_SetBkColor
000182  f06f417f          MVN      r1,#0xff000000        ;724
000186  4638              MOV      r0,r7                 ;724
000188  f7fffffe          BL       TEXT_SetTextColor
00018c  f640016e          MOV      r1,#0x86e             ;726
000190  6870              LDR      r0,[r6,#4]            ;726  ; load_wind
000192  f7fffffe          BL       WM_GetDialogItem
000196  4606              MOV      r6,r0                 ;726
000198  499f              LDR      r1,|L6.1048|
00019a  4630              MOV      r0,r6                 ;727
00019c  f7fffffe          BL       TEXT_SetBkColor
0001a0  2100              MOVS     r1,#0                 ;728
0001a2  4630              MOV      r0,r6                 ;728
0001a4  f7fffffe          BL       TEXT_SetTextColor
0001a8  9402              STR      r4,[sp,#8]            ;729
0001aa  e008              B        |L6.446|
                  |L6.428|
0001ac  e1a2              B        |L6.1268|
                  |L6.430|
0001ae  f89d0008          LDRB     r0,[sp,#8]            ;731
0001b2  f80b4000          STRB     r4,[r11,r0]           ;731
0001b6  f89d0008          LDRB     r0,[sp,#8]            ;729
0001ba  1c40              ADDS     r0,r0,#1              ;729
0001bc  9002              STR      r0,[sp,#8]            ;729
                  |L6.446|
0001be  f89d0008          LDRB     r0,[sp,#8]            ;729
0001c2  2806              CMP      r0,#6                 ;729
0001c4  d3f3              BCC      |L6.430|
0001c6  2018              MOVS     r0,#0x18              ;733
0001c8  7028              STRB     r0,[r5,#0]            ;733
0001ca  e7c8              B        |L6.350|
                  |L6.460|
0001cc  f640016e          MOV      r1,#0x86e             ;740
0001d0  4693              MOV      r11,r2                ;740
0001d2  f7fffffe          BL       WM_GetDialogItem
0001d6  9001              STR      r0,[sp,#4]            ;740
0001d8  f06f4170          MVN      r1,#0xf0000000        ;741
0001dc  9801              LDR      r0,[sp,#4]            ;741
0001de  f7fffffe          BL       TEXT_SetBkColor
0001e2  f06f417f          MVN      r1,#0xff000000        ;742
0001e6  9801              LDR      r0,[sp,#4]            ;742
0001e8  f7fffffe          BL       TEXT_SetTextColor
0001ec  f8990000          LDRB     r0,[r9,#0]            ;743  ; dot_flag
0001f0  b3f0              CBZ      r0,|L6.624|
0001f2  f8990000          LDRB     r0,[r9,#0]            ;745  ; dot_flag
0001f6  b1a8              CBZ      r0,|L6.548|
0001f8  9403              STR      r4,[sp,#0xc]          ;746
0001fa  9404              STR      r4,[sp,#0x10]         ;746
0001fc  f8992000          LDRB     r2,[r9,#0]            ;747  ; dot_flag
000200  4983              LDR      r1,|L6.1040|
000202  1cd2              ADDS     r2,r2,#3              ;747
000204  a803              ADD      r0,sp,#0xc            ;747
000206  f7fffffe          BL       strncpy
00020a  a803              ADD      r0,sp,#0xc            ;748
00020c  f7fffffe          BL       __hardfp_atof
000210  ec532b18          VMOV     r2,r3,d8              ;748
000214  ec510b10          VMOV     r0,r1,d0              ;748
000218  f7fffffe          BL       __aeabi_dmul
00021c  f7fffffe          BL       __aeabi_d2uiz
000220  f8c60094          STR      r0,[r6,#0x94]         ;748  ; Run_Control
                  |L6.548|
000224  f8d60094          LDR      r0,[r6,#0x94]         ;750  ; Run_Control
000228  f2475130          MOV      r1,#0x7530            ;750
00022c  4288              CMP      r0,r1                 ;750
00022e  d810              BHI      |L6.594|
000230  f8d60094          LDR      r0,[r6,#0x94]         ;750  ; Run_Control
000234  ee000a10          VMOV     s0,r0                 ;750
000238  487c              LDR      r0,|L6.1068|
00023a  eef80a40          VCVT.F32.U32 s1,s0                 ;750
00023e  ee800a89          VDIV.F32 s0,s1,s18             ;750
000242  edd00a00          VLDR     s1,[r0,#0]            ;750
000246  ee200a20          VMUL.F32 s0,s0,s1              ;750
00024a  ee100a10          VMOV     r0,s0                 ;750
00024e  4550              CMP      r0,r10                ;750
000250  dd01              BLE      |L6.598|
                  |L6.594|
000252  f8c64094          STR      r4,[r6,#0x94]         ;751  ; Run_Control
                  |L6.598|
000256  f8d60094          LDR      r0,[r6,#0x94]         ;753  ; Run_Control
00025a  6130              STR      r0,[r6,#0x10]         ;753  ; Run_Control
00025c  6930              LDR      r0,[r6,#0x10]         ;755  ; Run_Control
00025e  ee000a10          VMOV     s0,r0                 ;755
000262  eef80a40          VCVT.F32.U32 s1,s0                 ;755
000266  ee800a89          VDIV.F32 s0,s1,s18             ;755
00026a  ee100a10          VMOV     r0,s0                 ;756
00026e  e000              B        |L6.626|
                  |L6.624|
000270  e025              B        |L6.702|
                  |L6.626|
000272  f7fffffe          BL       __aeabi_f2d
000276  ec410b10          VMOV     d0,r0,r1              ;756
00027a  a169              ADR      r1,|L6.1056|
00027c  ec532b10          VMOV     r2,r3,d0              ;756
000280  a803              ADD      r0,sp,#0xc            ;756
000282  f7fffffe          BL       __2sprintf
000286  a903              ADD      r1,sp,#0xc            ;757
000288  9801              LDR      r0,[sp,#4]            ;757
00028a  f7fffffe          BL       TEXT_SetText
00028e  f640016d          MOV      r1,#0x86d             ;759
000292  f8db0004          LDR      r0,[r11,#4]           ;759  ; load_wind
000296  f7fffffe          BL       WM_GetDialogItem
00029a  4606              MOV      r6,r0                 ;759
00029c  495e              LDR      r1,|L6.1048|
00029e  4630              MOV      r0,r6                 ;760
0002a0  f7fffffe          BL       TEXT_SetBkColor
0002a4  2100              MOVS     r1,#0                 ;761
0002a6  4630              MOV      r0,r6                 ;761
0002a8  f7fffffe          BL       TEXT_SetTextColor
0002ac  f7fffffe          BL       Write_Limits
0002b0  2017              MOVS     r0,#0x17              ;764
0002b2  7028              STRB     r0,[r5,#0]            ;764
0002b4  f8887000          STRB     r7,[r8,#0]            ;765
0002b8  f8894000          STRB     r4,[r9,#0]            ;766
0002bc  e74f              B        |L6.350|
                  |L6.702|
0002be  4854              LDR      r0,|L6.1040|
0002c0  f7fffffe          BL       atoi
0002c4  f44f717a          MOV      r1,#0x3e8             ;744
0002c8  4348              MULS     r0,r1,r0              ;744
0002ca  f8c60094          STR      r0,[r6,#0x94]         ;744  ; Run_Control
0002ce  e7a9              B        |L6.548|
                  |L6.720|
0002d0  f89d0008          LDRB     r0,[sp,#8]            ;782
0002d4  f80b4000          STRB     r4,[r11,r0]           ;782
0002d8  f89d0008          LDRB     r0,[sp,#8]            ;780
0002dc  1c40              ADDS     r0,r0,#1              ;780
0002de  9002              STR      r0,[sp,#8]            ;780
                  |L6.736|
0002e0  f89d0008          LDRB     r0,[sp,#8]            ;780
0002e4  2806              CMP      r0,#6                 ;780
0002e6  d3f3              BCC      |L6.720|
0002e8  2043              MOVS     r0,#0x43              ;784
0002ea  7028              STRB     r0,[r5,#0]            ;784
0002ec  e737              B        |L6.350|
                  |L6.750|
0002ee  f6401111          MOV      r1,#0x911             ;790
0002f2  4693              MOV      r11,r2                ;790
0002f4  f7fffffe          BL       WM_GetDialogItem
0002f8  9001              STR      r0,[sp,#4]            ;790
0002fa  f06f4170          MVN      r1,#0xf0000000        ;791
0002fe  9801              LDR      r0,[sp,#4]            ;791
000300  f7fffffe          BL       TEXT_SetBkColor
000304  f06f417f          MVN      r1,#0xff000000        ;792
000308  9801              LDR      r0,[sp,#4]            ;792
00030a  f7fffffe          BL       TEXT_SetTextColor
00030e  f8990000          LDRB     r0,[r9,#0]            ;793  ; dot_flag
000312  b3e8              CBZ      r0,|L6.912|
000314  f8990000          LDRB     r0,[r9,#0]            ;795  ; dot_flag
000318  b1a8              CBZ      r0,|L6.838|
00031a  9403              STR      r4,[sp,#0xc]          ;796
00031c  9404              STR      r4,[sp,#0x10]         ;796
00031e  f8992000          LDRB     r2,[r9,#0]            ;797  ; dot_flag
000322  493b              LDR      r1,|L6.1040|
000324  1cd2              ADDS     r2,r2,#3              ;797
000326  a803              ADD      r0,sp,#0xc            ;797
000328  f7fffffe          BL       strncpy
00032c  a803              ADD      r0,sp,#0xc            ;798
00032e  f7fffffe          BL       __hardfp_atof
000332  ec532b18          VMOV     r2,r3,d8              ;798
000336  ec510b10          VMOV     r0,r1,d0              ;798
00033a  f7fffffe          BL       __aeabi_dmul
00033e  f7fffffe          BL       __aeabi_d2uiz
000342  f8c600a4          STR      r0,[r6,#0xa4]         ;798  ; Run_Control
                  |L6.838|
000346  f8d600a4          LDR      r0,[r6,#0xa4]         ;800  ; Run_Control
00034a  4939              LDR      r1,|L6.1072|
00034c  4288              CMP      r0,r1                 ;800
00034e  d810              BHI      |L6.882|
000350  f8d600a4          LDR      r0,[r6,#0xa4]         ;800  ; Run_Control
000354  ee000a10          VMOV     s0,r0                 ;800
000358  4836              LDR      r0,|L6.1076|
00035a  eeb80a40          VCVT.F32.U32 s0,s0                 ;800
00035e  eec00a09          VDIV.F32 s1,s0,s18             ;800
000362  ed900a00          VLDR     s0,[r0,#0]            ;800
000366  ee200a80          VMUL.F32 s0,s1,s0              ;800
00036a  ee100a10          VMOV     r0,s0                 ;800
00036e  4550              CMP      r0,r10                ;800
000370  dd01              BLE      |L6.886|
                  |L6.882|
000372  f8c640a4          STR      r4,[r6,#0xa4]         ;801  ; Run_Control
                  |L6.886|
000376  f8d600a4          LDR      r0,[r6,#0xa4]         ;803  ; Run_Control
00037a  60f0              STR      r0,[r6,#0xc]          ;803  ; Run_Control
00037c  68f0              LDR      r0,[r6,#0xc]          ;805  ; Run_Control
00037e  ee000a10          VMOV     s0,r0                 ;805
000382  eef80a40          VCVT.F32.U32 s1,s0                 ;805
000386  ee800a89          VDIV.F32 s0,s1,s18             ;805
00038a  ee100a10          VMOV     r0,s0                 ;806
00038e  e000              B        |L6.914|
                  |L6.912|
000390  e025              B        |L6.990|
                  |L6.914|
000392  f7fffffe          BL       __aeabi_f2d
000396  ec410b10          VMOV     d0,r0,r1              ;806
00039a  a121              ADR      r1,|L6.1056|
00039c  ec532b10          VMOV     r2,r3,d0              ;806
0003a0  a803              ADD      r0,sp,#0xc            ;806
0003a2  f7fffffe          BL       __2sprintf
0003a6  a903              ADD      r1,sp,#0xc            ;807
0003a8  9801              LDR      r0,[sp,#4]            ;807
0003aa  f7fffffe          BL       TEXT_SetText
0003ae  f44f6111          MOV      r1,#0x910             ;809
0003b2  f8db0004          LDR      r0,[r11,#4]           ;809  ; load_wind
0003b6  f7fffffe          BL       WM_GetDialogItem
0003ba  4606              MOV      r6,r0                 ;809
0003bc  4916              LDR      r1,|L6.1048|
0003be  4630              MOV      r0,r6                 ;810
0003c0  f7fffffe          BL       TEXT_SetBkColor
0003c4  2100              MOVS     r1,#0                 ;811
0003c6  4630              MOV      r0,r6                 ;811
0003c8  f7fffffe          BL       TEXT_SetTextColor
0003cc  f7fffffe          BL       Write_Limits
0003d0  2041              MOVS     r0,#0x41              ;814
0003d2  7028              STRB     r0,[r5,#0]            ;814
0003d4  f8887000          STRB     r7,[r8,#0]            ;815
0003d8  f8894000          STRB     r4,[r9,#0]            ;816
                  |L6.988|
0003dc  e6bf              B        |L6.350|
                  |L6.990|
0003de  480c              LDR      r0,|L6.1040|
0003e0  f7fffffe          BL       atoi
0003e4  f44f717a          MOV      r1,#0x3e8             ;794
0003e8  4348              MULS     r0,r1,r0              ;794
0003ea  f8c600a4          STR      r0,[r6,#0xa4]         ;794  ; Run_Control
0003ee  e7aa              B        |L6.838|
                  |L6.1008|
                          DCD      set_sw
                  |L6.1012|
0003f4  00000000          DCFD     0x408f400000000000 ; 1000
0003f8  408f4000
                  |L6.1020|
                          DCD      0x43480000
                  |L6.1024|
                          DCD      bit
                  |L6.1028|
                          DCD      ||.data||
                  |L6.1032|
000408  447a0000          DCFS     0x447a0000 ; 1000
                  |L6.1036|
                          DCD      Run_Control
                  |L6.1040|
                          DCD      set_limit
                  |L6.1044|
                          DCD      dot_flag
                  |L6.1048|
                          DCD      0x00bfffff
                  |L6.1052|
                          DCD      InFlashSave
                  |L6.1056|
000420  252e3366          DCB      "%.3f",0
000424  00      
000425  00                DCB      0
000426  00                DCB      0
000427  00                DCB      0
                  |L6.1064|
                          DCD      0x080e0000
                  |L6.1068|
                          DCD      DISS_Voltage
                  |L6.1072|
                          DCD      0x00013880
                  |L6.1076|
                          DCD      DISS_Current
                  |L6.1080|
000438  4d32              LDR      r5,|L6.1284|
00043a  f8df80cc          LDR      r8,|L6.1288|
00043e  f44f5680          MOV      r6,#0x1000            ;828
000442  7829              LDRB     r1,[r5,#0]            ;821  ; flagD
000444  f3c113c0          UBFX     r3,r1,#7,#1           ;821
000448  f640110f          MOV      r1,#0x90f             ;826
00044c  b19b              CBZ      r3,|L6.1142|
00044e  2b01              CMP      r3,#1                 ;821
000450  d1c4              BNE      |L6.988|
000452  4617              MOV      r7,r2                 ;826
000454  f7fffffe          BL       WM_GetDialogItem
000458  a12c              ADR      r1,|L6.1292|
00045a  f7fffffe          BL       TEXT_SetText
00045e  4631              MOV      r1,r6                 ;828
000460  4640              MOV      r0,r8                 ;828
000462  f7fffffe          BL       GPIO_SetBits
000466  6828              LDR      r0,[r5,#0]            ;829  ; flagD
000468  f0200080          BIC      r0,r0,#0x80           ;829
00046c  6028              STR      r0,[r5,#0]            ;829  ; flagD
00046e  70bc              STRB     r4,[r7,#2]            ;830
000470  f7fffffe          BL       Write_LOAD
000474  e673              B        |L6.350|
                  |L6.1142|
000476  4614              MOV      r4,r2                 ;837
000478  f7fffffe          BL       WM_GetDialogItem
00047c  a124              ADR      r1,|L6.1296|
00047e  f7fffffe          BL       TEXT_SetText
000482  4631              MOV      r1,r6                 ;839
000484  4640              MOV      r0,r8                 ;839
000486  f7fffffe          BL       GPIO_ResetBits
00048a  6828              LDR      r0,[r5,#0]            ;840  ; flagD
00048c  f0400080          ORR      r0,r0,#0x80           ;840
000490  6028              STR      r0,[r5,#0]            ;840  ; flagD
000492  70a7              STRB     r7,[r4,#2]            ;841
000494  f7fffffe          BL       Write_LOAD
000498  e661              B        |L6.350|
                  |L6.1178|
00049a  4651              MOV      r1,r10                ;851
00049c  4617              MOV      r7,r2                 ;851
00049e  f7fffffe          BL       WM_GetDialogItem
0004a2  4680              MOV      r8,r0                 ;851
0004a4  f06f4170          MVN      r1,#0xf0000000        ;852
0004a8  4640              MOV      r0,r8                 ;852
0004aa  f7fffffe          BL       TEXT_SetBkColor
0004ae  f06f417f          MVN      r1,#0xff000000        ;853
0004b2  4640              MOV      r0,r8                 ;853
0004b4  f7fffffe          BL       TEXT_SetTextColor
0004b8  4631              MOV      r1,r6                 ;855
0004ba  6878              LDR      r0,[r7,#4]            ;855  ; load_wind
0004bc  f7fffffe          BL       WM_GetDialogItem
0004c0  4606              MOV      r6,r0                 ;855
0004c2  4914              LDR      r1,|L6.1300|
0004c4  4630              MOV      r0,r6                 ;856
0004c6  f7fffffe          BL       TEXT_SetBkColor
0004ca  2100              MOVS     r1,#0                 ;857
0004cc  4630              MOV      r0,r6                 ;857
0004ce  f7fffffe          BL       TEXT_SetTextColor
0004d2  9402              STR      r4,[sp,#8]            ;858
0004d4  e007              B        |L6.1254|
                  |L6.1238|
0004d6  f89d0008          LDRB     r0,[sp,#8]            ;860
0004da  f80b4000          STRB     r4,[r11,r0]           ;860
0004de  f89d0008          LDRB     r0,[sp,#8]            ;858
0004e2  1c40              ADDS     r0,r0,#1              ;858
0004e4  9002              STR      r0,[sp,#8]            ;858
                  |L6.1254|
0004e6  f89d0008          LDRB     r0,[sp,#8]            ;858
0004ea  2806              CMP      r0,#6                 ;858
0004ec  d3f3              BCC      |L6.1238|
0004ee  2056              MOVS     r0,#0x56              ;862
0004f0  7028              STRB     r0,[r5,#0]            ;862
0004f2  e634              B        |L6.350|
                  |L6.1268|
0004f4  4808              LDR      r0,|L6.1304|
0004f6  f7fffffe          BL       atoi
0004fa  f44f717a          MOV      r1,#0x3e8             ;872
0004fe  4348              MULS     r0,r1,r0              ;872
000500  8130              STRH     r0,[r6,#8]            ;872
000502  e5f4              B        |L6.238|
;;;894    void DEL_LOAD(void)
                          ENDP

                  |L6.1284|
                          DCD      flagD
                  |L6.1288|
                          DCD      0x40020800
                  |L6.1292|
00050c  435600            DCB      "CV",0
00050f  00                DCB      0
                  |L6.1296|
000510  434300            DCB      "CC",0
000513  00                DCB      0
                  |L6.1300|
                          DCD      0x00bfffff
                  |L6.1304|
                          DCD      set_limit

                          AREA ||i.ResetLoad||, CODE, READONLY, ALIGN=2

                  ResetLoad PROC
;;;603    
;;;604    WM_HWIN ResetLoad(void) {
000000  b51c              PUSH     {r2-r4,lr}
;;;605      load_wind = GUI_CreateDialogBox(_aDialogCreate2, GUI_COUNTOF(_aDialogCreate2), _cbDialog2, WM_HBKWIN, 0, 0);
000002  f7fffffe          BL       WM_GetDesktopWindow
000006  4603              MOV      r3,r0
000008  2000              MOVS     r0,#0
00000a  9000              STR      r0,[sp,#0]
00000c  9001              STR      r0,[sp,#4]
00000e  4a04              LDR      r2,|L7.32|
000010  2117              MOVS     r1,#0x17
000012  4804              LDR      r0,|L7.36|
000014  f7fffffe          BL       GUI_CreateDialogBox
000018  4903              LDR      r1,|L7.40|
00001a  6048              STR      r0,[r1,#4]  ; load_wind
;;;606      return load_wind;
;;;607    }
00001c  bd1c              POP      {r2-r4,pc}
;;;608    
                          ENDP

00001e  0000              DCW      0x0000
                  |L7.32|
                          DCD      _cbDialog2
                  |L7.36|
                          DCD      ||.constdata||
                  |L7.40|
                          DCD      ||.data||

                          AREA ||i._cbDialog2||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  _cbDialog2 PROC
;;;99     
;;;100    static void _cbDialog2(WM_MESSAGE * pMsg) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  ed2d8b06          VPUSH    {d8-d10}
000008  b083              SUB      sp,sp,#0xc
00000a  4604              MOV      r4,r0
;;;101      WM_HWIN hItem;
;;;102      int     NCode;
;;;103      int     Id;
;;;104      char    buf[6];
;;;105      static vu8 status_flash;
;;;106      float   dis_load_c = (float)SET_Current_Laod/1000;
00000c  4ffe              LDR      r7,|L8.1032|
00000e  6938              LDR      r0,[r7,#0x10]  ; Run_Control
000010  ee000a10          VMOV     s0,r0
000014  eeb80a40          VCVT.F32.U32 s0,s0
000018  eddf9afc          VLDR     s19,|L8.1036|
00001c  ee80aa29          VDIV.F32 s20,s0,s19
;;;107      float   dis_load_v = (float)SET_Voltage_Laod/1000;
000020  68f8              LDR      r0,[r7,#0xc]  ; Run_Control
000022  ee000a10          VMOV     s0,r0
000026  eeb80a40          VCVT.F32.U32 s0,s0
00002a  ee809a29          VDIV.F32 s18,s0,s19
;;;108      static float olvbuff,oldv;
;;;109      static float testc1,testc2,testres;
;;;110      static vu8 testflag;
;;;111      // USER START (Optionally insert additional variables)
;;;112      // USER END
;;;113    
;;;114      switch (pMsg->MsgId) {
;;;115    
;;;116    	case WM_PAINT://无效化重绘
;;;117    		GUI_SetColor(GUI_WHITE);//设置画笔颜色
;;;118            GUI_FillRect(0,25,480,26);//画一条实线
;;;119            GUI_SetColor(GUI_ORANGE);
;;;120            GUI_SetFont(&GUI_Fontsymbol);
;;;121            GUI_UC_SetEncodeUTF8();
;;;122            GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明
;;;123            GUI_DispStringAt("Jinko", 5, 1);//SET
;;;124            GUI_SetColor(GUI_WHITE);
;;;125            GUI_SetFont(&GUI_FontHZ20S);
;;;126            GUI_UC_SetEncodeUTF8();
;;;127            GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明
;;;128            GUI_DispStringAt("测量显示", 130, 3);//SET
;;;129            GUI_SetColor(GUI_WHITE);//设置前景色为白色
;;;130    //         GUI_SetFont(&GUI_FontD24x32);//
;;;131    // 		GUI_GotoXY(95,72);//设置显示坐标
;;;132    // 		GUI_DispFloatFix(DISS_Voltage,5,2);//显示电压值
;;;133    // 		GUI_GotoXY(95,140);//设置显示坐标
;;;134    // 		GUI_DispFloatFix(DISS_Current,5,2);//显示电流值
;;;135            GUI_SetFont(&GUI_Font24_1);
;;;136            GUI_DispStringAt("A",450,75);
;;;137            GUI_DispStringAt("V",450,100.);
;;;138            GUI_DispStringAt("V",450,150);
;;;139        
;;;140            GUI_SetFont(&GUI_FontEN40);
;;;141            GUI_SetColor(GUI_LIGHTGRAY);
00002e  f8df83e0          LDR      r8,|L8.1040|
;;;142            GUI_DispStringAt("C:", 28, 190);
;;;143            GUI_SetColor(GUI_LIGHTGRAY);
;;;144            GUI_DispStringAt("m", 217, 196);
;;;145            GUI_DispStringAt("AH", 238, 187);
;;;146            
;;;147            GUI_SetColor(GUI_GREEN);
;;;148            GUI_SetFont(&GUI_Fontunit);
;;;149            GUI_DispStringAt("°",342, 2);
;;;150            GUI_SetFont(&GUI_Font24_1);
;;;151            GUI_DispStringAt("C",350, 2);
;;;152            DrawLock();
;;;153    //        GUI_SetColor(GUI_WHITE);
;;;154    //        GUI_SetFont(&GUI_Fontset_font);
;;;155    //        GUI_DispStringAt("过放电压",290, 150);
;;;156    		break;
;;;157    	case WM_KEY://接受按键消息来处理按键功能
;;;158    		switch (((WM_KEY_INFO*)(pMsg->Data.p))->Key) 
;;;159    		{ 
;;;160    			case GUI_KEY_TAB:
;;;161    
;;;162    			break;
;;;163    			
;;;164    			case GUI_KEY_ENTER:
;;;165    			break;
;;;166    		}
;;;167    	break;
;;;168    		
;;;169    	case WM_TIMER://定时模块消息
;;;170    	if(WM_GetTimerId(pMsg->Data.v) == ID_TimerTime1)
;;;171    	{
;;;172            lockstat2 = lockstat1;
;;;173            lockstat1 = lock;
;;;174            
;;;175    //        if((vu32)(DISS_Current*1000) > SET_Current_Laod)
;;;176    //        {
;;;177    //            testflag = 1;
;;;178    //        }else{
;;;179    //            testflag = 0;
;;;180    //            testc1 = testc2 = 0;
;;;181    //        }
;;;182    //        if(testflag == 1)
;;;183    //        {
;;;184    //            testc2 = testc1;
;;;185    //            testc1 = DISS_Current;
;;;186    //            if(testc1 < testc2)
;;;187    //            {
;;;188    //                testres = testc2;
;;;189    //                testflag = 0;
;;;190    //                testc1 = testc2 = 0;
;;;191    //            }
;;;192    //        }
;;;193            
;;;194            
;;;195            if(lockstat1 != lockstat2)
;;;196            {
;;;197                WM_InvalidateWindow(load_wind);
;;;198            }
;;;199    //         if(clear_flag3 == 1)
;;;200    //         {
;;;201                if(DISS_Voltage < 0.3)
;;;202                {
;;;203                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;204                    sprintf(buf,"%.3f",0.000);       
;;;205                    TEXT_SetText(hItem,buf);
;;;206                }else{                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             ;;;207                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;208                    sprintf(buf,"%.3f",DISS_Voltage);       
;;;209                    TEXT_SetText(hItem,buf);
;;;210                }
;;;211    //         }else{
;;;212    //             hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;213    //             sprintf(buf,"%.3f",DISS_Voltage);       
;;;214    //             TEXT_SetText(hItem,buf);
;;;215    //         }
;;;216            if((float)SET_Current_Laod/1000 * DISS_Voltage > 200){
;;;217                SET_Current_Laod = 0;
;;;218                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
;;;219                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;220                TEXT_SetTextColor(hItem, GUI_WHITE);            
;;;221                if(SET_Current_Laod > 55000 || (float)SET_Current_Laod/1000 * DISS_Voltage > 200){
;;;222                    SET_Current_Laod = 0;
;;;223                }
;;;224                dis_load_c = (float)SET_Current_Laod/1000;
;;;225                sprintf(buf,"%.3f",dis_load_c);
;;;226                TEXT_SetText(hItem,buf);
;;;227            }
;;;228            
;;;229                
;;;230            
;;;231    //        test_load();
;;;232            
;;;233            if(load_sw == load_on)
;;;234            {
;;;235                if(/*DISS_Current >= 30*/SET_Current_Laod >= 30000)
;;;236                {
;;;237                    alert_flag = 1;
;;;238                }else{
;;;239                    alert_flag = 0;
;;;240                }
;;;241                battery_c = (int)bc_raw;
;;;242                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_116);
;;;243                sprintf(buf,"%05d",battery_c);    
;;;244                TEXT_SetText(hItem,buf);
;;;245                
;;;246                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_85);
;;;247                sprintf(buf,"%.3f",DISS_Current);        
;;;248                TEXT_SetText(hItem,buf);
;;;249                if(status_flash == 0){
;;;250                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_89);
;;;251                    TEXT_SetTextColor(hItem, GUI_RED);//设置字体颜色
;;;252                    TEXT_SetFont(hItem,&GUI_FontHZ16);//设定文本字体
;;;253                    GUI_UC_SetEncodeUTF8();        
;;;254                    TEXT_SetText(hItem,"放电中");
;;;255                    status_flash = 1;
;;;256                }else{
;;;257                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_89);
;;;258                    TEXT_SetText(hItem,"");
;;;259                    status_flash = 0;
;;;260                }
;;;261                if(load_cutoffv != 0 && DISS_Voltage < load_cutoffv)
;;;262    			{
;;;263    				Flag_Swtich_ON=0;
;;;264                    GPIO_SetBits(GPIOA,GPIO_Pin_15);
;;;265                    mode_sw = 0;
;;;266                    load_sw = load_off;
;;;267    			}
;;;268                
;;;269    //            if(olvbuff != 0 && olvbuff - DISS_Voltage > 0.3)
;;;270    //            {
;;;271    //                Flag_Swtich_ON=0;
;;;272    //                GPIO_SetBits(GPIOA,GPIO_Pin_15);
;;;273    //                mode_sw = 0;
;;;274    //                load_sw = load_off;
;;;275    //                overloadv = olvbuff;
;;;276    //                olvbuff= 0;
;;;277    //            }else{
;;;278    //                olvbuff = DISS_Voltage;
;;;279    //                overloadv = 0;
;;;280    //            }
;;;281                
;;;282            }else{
;;;283                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_89);
;;;284                TEXT_SetText(hItem,"");
;;;285                
;;;286                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_85);
;;;287                sprintf(buf,"%.3f",0.000);        
;;;288                TEXT_SetText(hItem,buf);
;;;289            }
;;;290    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_143);       
;;;291    //        sprintf(buf,"%.3f",overloadv);
;;;292    //        TEXT_SetText(hItem,buf);
;;;293            
;;;294            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_126);       
;;;295            sprintf(buf,"%.1f",temp);
000032  f8dfb3e0          LDR      r11,|L8.1044|
000036  f6400a91          MOV      r10,#0x891            ;203
00003a  ed9f8bf7          VLDR     d8,|L8.1048|
00003e  6820              LDR      r0,[r4,#0]            ;114
000040  4df7              LDR      r5,|L8.1056|
000042  f44f467f          MOV      r6,#0xff00            ;147
000046  f06f497f          MVN      r9,#0xff000000        ;117
00004a  281d              CMP      r0,#0x1d              ;114
00004c  d07e              BEQ      |L8.332|
00004e  dc04              BGT      |L8.90|
000050  280e              CMP      r0,#0xe               ;114
000052  d00b              BEQ      |L8.108|
000054  280f              CMP      r0,#0xf               ;114
000056  d106              BNE      |L8.102|
000058  e00d              B        |L8.118|
                  |L8.90|
00005a  2826              CMP      r0,#0x26              ;114
00005c  d077              BEQ      |L8.334|
00005e  f5a07080          SUB      r0,r0,#0x100          ;114
000062  3813              SUBS     r0,r0,#0x13           ;114
000064  d07d              BEQ      |L8.354|
                  |L8.102|
;;;296            TEXT_SetText(hItem,buf);
;;;297            
;;;298    		WM_RestartTimer(pMsg->Data.v, 50);
;;;299    	}
;;;300    	break;
;;;301    	
;;;302        case WM_INIT_DIALOG://重绘外观
;;;303        //
;;;304        // Initialization of 'Window'
;;;305        //
;;;306            hItem = pMsg->hWin;
;;;307            WINDOW_SetBkColor(hItem, GUI_BLACK);
;;;308    		WM_CreateTimer(hItem,ID_TimerTime1,500,0);//创建本窗口定时器
;;;309        //
;;;310        // Initialization of 'Button'
;;;311        //
;;;312    //         hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_6);
;;;313    // 		BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;314    // 		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;315    // 		GUI_UC_SetEncodeUTF8();
;;;316    // 		BUTTON_SetText(hItem,"充放电");
;;;317        //
;;;318        // Initialization of 'Button'
;;;319        //
;;;320            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_7);
;;;321    //		BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;322    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;323    		GUI_UC_SetEncodeUTF8();
;;;324            BUTTON_SetText(hItem, "内阻测试");
;;;325        //
;;;326        // Initialization of 'Button'
;;;327        //
;;;328            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_8);
;;;329            BUTTON_SetPressed(hItem,1);
;;;330    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;331    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;332    		GUI_UC_SetEncodeUTF8();
;;;333            BUTTON_SetText(hItem, "程控负载");
;;;334        //
;;;335        // Initialization of 'Button'
;;;336        //
;;;337            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_9);
;;;338    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;339    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;340    		GUI_UC_SetEncodeUTF8();
;;;341            BUTTON_SetText(hItem, "程控电源");
;;;342        //
;;;343        // Initialization of 'Button'
;;;344        //
;;;345            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_10);
;;;346    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;347    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;348    		GUI_UC_SetEncodeUTF8();
;;;349            BUTTON_SetText(hItem, "充放电");
;;;350        //
;;;351        // Initialization of 'Button'
;;;352        //
;;;353            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_11);
;;;354    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;355    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;356    		GUI_UC_SetEncodeUTF8();
;;;357            BUTTON_SetText(hItem, "曲线");
;;;358    		
;;;359    		
;;;360    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_11);
;;;361    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;362            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;363    		GUI_UC_SetEncodeUTF8();
;;;364    		TEXT_SetText(hItem,"V:");
;;;365    		
;;;366    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_12);
;;;367    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;368            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;369    		GUI_UC_SetEncodeUTF8();
;;;370    		TEXT_SetText(hItem,"I:");
;;;371            
;;;372            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_13);
;;;373    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;374            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;375    		GUI_UC_SetEncodeUTF8();
;;;376    		TEXT_SetText(hItem,"V");
;;;377    		
;;;378    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_14);
;;;379    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;380            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;381    		GUI_UC_SetEncodeUTF8();
;;;382    		TEXT_SetText(hItem,"A");
;;;383            
;;;384            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_48);
;;;385    		TEXT_SetTextColor(hItem, GUI_BLACK);//设置字体颜色
;;;386            TEXT_SetBkColor(hItem,0x00BFFFFF);
;;;387            TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;388    		GUI_UC_SetEncodeUTF8();
;;;389    		TEXT_SetText(hItem,"负载电流");
;;;390            
;;;391            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_49);
;;;392            sprintf(buf,"%.3f",dis_load_c);
;;;393    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;394            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;395    		GUI_UC_SetEncodeUTF8();     
;;;396    		TEXT_SetText(hItem,buf);
;;;397            
;;;398            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_143);
;;;399            sprintf(buf,"%.3f",load_cutoffv);
;;;400    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;401            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;402    		GUI_UC_SetEncodeUTF8();     
;;;403    		TEXT_SetText(hItem,buf);
;;;404            
;;;405            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;406            sprintf(buf,"%.3f",0.000);
;;;407    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;408            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;409    		GUI_UC_SetEncodeUTF8();        
;;;410    		TEXT_SetText(hItem,buf);
;;;411            
;;;412            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_85);
;;;413            sprintf(buf,"%.3f",0.000);
;;;414    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;415            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;416    		GUI_UC_SetEncodeUTF8();        
;;;417    		TEXT_SetText(hItem,buf);
;;;418            
;;;419            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_116);
;;;420            sprintf(buf,"%05d",0);
;;;421            TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;422            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;423            GUI_UC_SetEncodeUTF8();        
;;;424            TEXT_SetText(hItem,buf);
;;;425            
;;;426            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_120);
;;;427            TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;428            TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;429            GUI_UC_SetEncodeUTF8();        
;;;430            TEXT_SetText(hItem,"负载模式");
;;;431    		
;;;432    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_158);
;;;433            TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;434            TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;435            GUI_UC_SetEncodeUTF8();        
;;;436            TEXT_SetText(hItem,"截止电压");
;;;437            
;;;438            if(load_mode == 1)
;;;439            {
;;;440                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_121);
;;;441                TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;442                TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;443                GUI_UC_SetEncodeUTF8();
;;;444                GPIO_ResetBits(GPIOC,GPIO_Pin_10);//CC
;;;445                TEXT_SetText(hItem,"CC");
;;;446                flag_Load_CC = 1;
;;;447            }else if(load_mode == 0){
;;;448                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_121);
;;;449                TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;450                TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;451                GUI_UC_SetEncodeUTF8();  
;;;452                GPIO_SetBits(GPIOC,GPIO_Pin_10);//CV            
;;;453                TEXT_SetText(hItem,"CV");
;;;454                flag_Load_CC = 0;
;;;455            }
;;;456            
;;;457            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_122);
;;;458    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;459            TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;460    		GUI_UC_SetEncodeUTF8();
;;;461    		TEXT_SetText(hItem,"负载电压");
;;;462            
;;;463            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_123);
;;;464            sprintf(buf,"%.3f",dis_load_v);
;;;465    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;466            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;467    		GUI_UC_SetEncodeUTF8();     
;;;468    		TEXT_SetText(hItem,buf);
;;;469            
;;;470            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_126);
;;;471            TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;472            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体       
;;;473            sprintf(buf,"%.1f",temp);
;;;474            TEXT_SetText(hItem,buf);
;;;475            
;;;476    
;;;477        // USER START (Optionally insert additional code for further widget initialization)
;;;478        // USER END
;;;479        break;
;;;480      case WM_NOTIFY_PARENT:
;;;481        Id    = WM_GetId(pMsg->hWinSrc);
;;;482        NCode = pMsg->Data.v;
;;;483        switch(Id) {
;;;484        case ID_BUTTON_6: // Notifications sent by 'Button'
;;;485          switch(NCode) {
;;;486          case WM_NOTIFICATION_CLICKED:
;;;487            // USER START (Optionally insert code for reacting on notification message)
;;;488            // USER END
;;;489            break;
;;;490          case WM_NOTIFICATION_RELEASED:
;;;491            // USER START (Optionally insert code for reacting on notification message)
;;;492            // USER END
;;;493            break;
;;;494          // USER START (Optionally insert additional code for further notification handling)
;;;495          // USER END
;;;496          }
;;;497          break;
;;;498        case ID_BUTTON_7: // Notifications sent by 'Button'
;;;499          switch(NCode) {
;;;500          case WM_NOTIFICATION_CLICKED:
;;;501            // USER START (Optionally insert code for reacting on notification message)
;;;502            // USER END
;;;503            break;
;;;504          case WM_NOTIFICATION_RELEASED:
;;;505    				
;;;506            // USER START (Optionally insert code for reacting on notification message)
;;;507            // USER END
;;;508            break;
;;;509          // USER START (Optionally insert additional code for further notification handling)
;;;510          // USER END
;;;511          }
;;;512          break;
;;;513        case ID_BUTTON_8: // Notifications sent by 'Button'
;;;514          switch(NCode) {
;;;515          case WM_NOTIFICATION_CLICKED:
;;;516            // USER START (Optionally insert code for reacting on notification message)
;;;517            // USER END
;;;518            break;
;;;519          case WM_NOTIFICATION_RELEASED:
;;;520            // USER START (Optionally insert code for reacting on notification message)
;;;521            // USER END
;;;522            break;
;;;523          // USER START (Optionally insert additional code for further notification handling)
;;;524          // USER END
;;;525          }
;;;526          break;
;;;527        case ID_BUTTON_9: // Notifications sent by 'Button'
;;;528          switch(NCode) {
;;;529          case WM_NOTIFICATION_CLICKED:
;;;530            // USER START (Optionally insert code for reacting on notification message)
;;;531            // USER END
;;;532            break;
;;;533          case WM_NOTIFICATION_RELEASED:
;;;534            // USER START (Optionally insert code for reacting on notification message)
;;;535            // USER END
;;;536            break;
;;;537          // USER START (Optionally insert additional code for further notification handling)
;;;538          // USER END
;;;539          }
;;;540          break;
;;;541        case ID_BUTTON_10: // Notifications sent by 'Button'
;;;542          switch(NCode) {
;;;543          case WM_NOTIFICATION_CLICKED:
;;;544            // USER START (Optionally insert code for reacting on notification message)
;;;545            // USER END
;;;546            break;
;;;547          case WM_NOTIFICATION_RELEASED:
;;;548            // USER START (Optionally insert code for reacting on notification message)
;;;549            // USER END
;;;550            break;
;;;551          // USER START (Optionally insert additional code for further notification handling)
;;;552          // USER END
;;;553          }
;;;554          break;
;;;555        case ID_BUTTON_11: // Notifications sent by 'Button'
;;;556          switch(NCode) {
;;;557          case WM_NOTIFICATION_CLICKED:
;;;558            // USER START (Optionally insert code for reacting on notification message)
;;;559            // USER END
;;;560            break;
;;;561          case WM_NOTIFICATION_RELEASED:
;;;562            // USER START (Optionally insert code for reacting on notification message)
;;;563            // USER END
;;;564            break;
;;;565          // USER START (Optionally insert additional code for further notification handling)
;;;566          // USER END
;;;567          }
;;;568          break;
;;;569        // USER START (Optionally insert additional code for further Ids)
;;;570        // USER END
;;;571        }
;;;572        break;
;;;573      // USER START (Optionally insert additional message handling)
;;;574      // USER END
;;;575      default:
;;;576        WM_DefaultProc(pMsg);
000066  4620              MOV      r0,r4
000068  f7fffffe          BL       WM_DefaultProc
                  |L8.108|
;;;577        break;
;;;578      }
;;;579    }
00006c  b003              ADD      sp,sp,#0xc
00006e  ecbd8b06          VPOP     {d8-d10}
000072  e8bd8ff0          POP      {r4-r11,pc}
                  |L8.118|
000076  4648              MOV      r0,r9                 ;117
000078  f7fffffe          BL       GUI_SetColor
00007c  231a              MOVS     r3,#0x1a              ;118
00007e  f44f72f0          MOV      r2,#0x1e0             ;118
000082  2119              MOVS     r1,#0x19              ;118
000084  2000              MOVS     r0,#0                 ;118
000086  f7fffffe          BL       GUI_FillRect
00008a  f24a50ff          MOV      r0,#0xa5ff            ;119
00008e  f7fffffe          BL       GUI_SetColor
000092  48e4              LDR      r0,|L8.1060|
000094  f7fffffe          BL       GUI_SetFont
000098  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00009c  2002              MOVS     r0,#2                 ;122
00009e  f7fffffe          BL       GUI_SetTextMode
0000a2  2201              MOVS     r2,#1                 ;123
0000a4  2105              MOVS     r1,#5                 ;123
0000a6  a0e0              ADR      r0,|L8.1064|
0000a8  f7fffffe          BL       GUI_DispStringAt
0000ac  4648              MOV      r0,r9                 ;124
0000ae  f7fffffe          BL       GUI_SetColor
0000b2  48df              LDR      r0,|L8.1072|
0000b4  f7fffffe          BL       GUI_SetFont
0000b8  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0000bc  2002              MOVS     r0,#2                 ;127
0000be  f7fffffe          BL       GUI_SetTextMode
0000c2  2203              MOVS     r2,#3                 ;128
0000c4  2182              MOVS     r1,#0x82              ;128
0000c6  a0db              ADR      r0,|L8.1076|
0000c8  f7fffffe          BL       GUI_DispStringAt
0000cc  4648              MOV      r0,r9                 ;129
0000ce  f7fffffe          BL       GUI_SetColor
0000d2  48dc              LDR      r0,|L8.1092|
0000d4  f7fffffe          BL       GUI_SetFont
0000d8  f44f74e1          MOV      r4,#0x1c2             ;136
0000dc  224b              MOVS     r2,#0x4b              ;136
0000de  4621              MOV      r1,r4                 ;136
0000e0  a0d9              ADR      r0,|L8.1096|
0000e2  f7fffffe          BL       GUI_DispStringAt
0000e6  2264              MOVS     r2,#0x64              ;137
0000e8  4621              MOV      r1,r4                 ;137
0000ea  a0d8              ADR      r0,|L8.1100|
0000ec  f7fffffe          BL       GUI_DispStringAt
0000f0  2296              MOVS     r2,#0x96              ;138
0000f2  4621              MOV      r1,r4                 ;138
0000f4  a0d5              ADR      r0,|L8.1100|
0000f6  f7fffffe          BL       GUI_DispStringAt
0000fa  48d5              LDR      r0,|L8.1104|
0000fc  f7fffffe          BL       GUI_SetFont
000100  4640              MOV      r0,r8                 ;141
000102  f7fffffe          BL       GUI_SetColor
000106  22be              MOVS     r2,#0xbe              ;142
000108  211c              MOVS     r1,#0x1c              ;142
00010a  a0d2              ADR      r0,|L8.1108|
00010c  f7fffffe          BL       GUI_DispStringAt
000110  4640              MOV      r0,r8                 ;143
000112  f7fffffe          BL       GUI_SetColor
000116  22c4              MOVS     r2,#0xc4              ;144
000118  21d9              MOVS     r1,#0xd9              ;144
00011a  a0cf              ADR      r0,|L8.1112|
00011c  f7fffffe          BL       GUI_DispStringAt
000120  22bb              MOVS     r2,#0xbb              ;145
000122  21ee              MOVS     r1,#0xee              ;145
000124  a0cd              ADR      r0,|L8.1116|
000126  f7fffffe          BL       GUI_DispStringAt
00012a  4630              MOV      r0,r6                 ;147
00012c  f7fffffe          BL       GUI_SetColor
000130  48cb              LDR      r0,|L8.1120|
000132  f7fffffe          BL       GUI_SetFont
000136  2202              MOVS     r2,#2                 ;149
000138  f44f71ab          MOV      r1,#0x156             ;149
00013c  a0c9              ADR      r0,|L8.1124|
00013e  f7fffffe          BL       GUI_DispStringAt
000142  48c0              LDR      r0,|L8.1092|
000144  f7fffffe          BL       GUI_SetFont
000148  2202              MOVS     r2,#2                 ;151
00014a  e002              B        |L8.338|
                  |L8.332|
00014c  e142              B        |L8.980|
                  |L8.334|
00014e  e3b7              B        |L8.2240|
000150  e007              B        |L8.354|
                  |L8.338|
000152  f44f71af          MOV      r1,#0x15e             ;151
000156  a0c4              ADR      r0,|L8.1128|
000158  f7fffffe          BL       GUI_DispStringAt
00015c  f7fffffe          BL       DrawLock
                  |L8.352|
000160  e784              B        |L8.108|
                  |L8.354|
000162  68e0              LDR      r0,[r4,#0xc]          ;170
000164  f7fffffe          BL       WM_GetTimerId
000168  2802              CMP      r0,#2                 ;170
00016a  d1f9              BNE      |L8.352|
00016c  4abf              LDR      r2,|L8.1132|
00016e  49c0              LDR      r1,|L8.1136|
000170  7810              LDRB     r0,[r2,#0]            ;172  ; lockstat1
000172  7008              STRB     r0,[r1,#0]            ;172
000174  49bf              LDR      r1,|L8.1140|
000176  7809              LDRB     r1,[r1,#0]            ;173  ; lock
000178  7011              STRB     r1,[r2,#0]            ;173
00017a  4281              CMP      r1,r0                 ;195
00017c  d002              BEQ      |L8.388|
00017e  6868              LDR      r0,[r5,#4]            ;197  ; load_wind
000180  f7fffffe          BL       WM_InvalidateWindow
                  |L8.388|
000184  f8df82f0          LDR      r8,|L8.1144|
000188  49bc              LDR      r1,|L8.1148|
00018a  f8d80000          LDR      r0,[r8,#0]            ;201  ; DISS_Voltage
00018e  4288              CMP      r0,r1                 ;201
000190  da0f              BGE      |L8.434|
000192  4651              MOV      r1,r10                ;203
000194  6860              LDR      r0,[r4,#4]            ;203
000196  f7fffffe          BL       WM_GetDialogItem
00019a  4606              MOV      r6,r0                 ;203
00019c  ec532b18          VMOV     r2,r3,d8              ;204
0001a0  a1b7              ADR      r1,|L8.1152|
0001a2  4668              MOV      r0,sp                 ;204
0001a4  f7fffffe          BL       __2sprintf
0001a8  4669              MOV      r1,sp                 ;205
0001aa  4630              MOV      r0,r6                 ;205
0001ac  f7fffffe          BL       TEXT_SetText
0001b0  e014              B        |L8.476|
                  |L8.434|
0001b2  4651              MOV      r1,r10                ;207
0001b4  6860              LDR      r0,[r4,#4]            ;207
0001b6  f7fffffe          BL       WM_GetDialogItem
0001ba  4606              MOV      r6,r0                 ;207
0001bc  f8d80000          LDR      r0,[r8,#0]            ;208  ; DISS_Voltage
0001c0  f7fffffe          BL       __aeabi_f2d
0001c4  ec410b10          VMOV     d0,r0,r1              ;208
0001c8  a1ad              ADR      r1,|L8.1152|
0001ca  ec532b10          VMOV     r2,r3,d0              ;208
0001ce  4668              MOV      r0,sp                 ;208
0001d0  f7fffffe          BL       __2sprintf
0001d4  4669              MOV      r1,sp                 ;209
0001d6  4630              MOV      r0,r6                 ;209
0001d8  f7fffffe          BL       TEXT_SetText
                  |L8.476|
0001dc  6938              LDR      r0,[r7,#0x10]         ;216  ; Run_Control
0001de  f8dfa2a8          LDR      r10,|L8.1160|
0001e2  ee000a10          VMOV     s0,r0                 ;216
0001e6  2600              MOVS     r6,#0                 ;216
0001e8  eeb80a40          VCVT.F32.U32 s0,s0                 ;216
0001ec  eec00a29          VDIV.F32 s1,s0,s19             ;216
0001f0  ed980a00          VLDR     s0,[r8,#0]            ;216
0001f4  ee200a80          VMUL.F32 s0,s1,s0              ;216
0001f8  ee100a10          VMOV     r0,s0                 ;216
0001fc  4550              CMP      r0,r10                ;216
0001fe  dd3b              BLE      |L8.632|
000200  613e              STR      r6,[r7,#0x10]         ;217  ; Run_Control
000202  f640016e          MOV      r1,#0x86e             ;218
000206  6868              LDR      r0,[r5,#4]            ;218  ; load_wind
000208  f7fffffe          BL       WM_GetDialogItem
00020c  9002              STR      r0,[sp,#8]            ;218
00020e  f06f4170          MVN      r1,#0xf0000000        ;219
000212  9802              LDR      r0,[sp,#8]            ;219
000214  f7fffffe          BL       TEXT_SetBkColor
000218  4649              MOV      r1,r9                 ;220
00021a  9802              LDR      r0,[sp,#8]            ;220
00021c  f7fffffe          BL       TEXT_SetTextColor
000220  6938              LDR      r0,[r7,#0x10]         ;221  ; Run_Control
000222  f24d61d8          MOV      r1,#0xd6d8            ;221
000226  4288              CMP      r0,r1                 ;221
000228  d80e              BHI      |L8.584|
00022a  6938              LDR      r0,[r7,#0x10]         ;221  ; Run_Control
00022c  ee000a10          VMOV     s0,r0                 ;221
000230  eef80a40          VCVT.F32.U32 s1,s0                 ;221
000234  ee800aa9          VDIV.F32 s0,s1,s19             ;221
000238  edd80a00          VLDR     s1,[r8,#0]            ;221
00023c  ee200a20          VMUL.F32 s0,s0,s1              ;221
000240  ee100a10          VMOV     r0,s0                 ;221
000244  4550              CMP      r0,r10                ;221
000246  dd00              BLE      |L8.586|
                  |L8.584|
000248  613e              STR      r6,[r7,#0x10]         ;222  ; Run_Control
                  |L8.586|
00024a  6938              LDR      r0,[r7,#0x10]         ;224  ; Run_Control
00024c  ee000a10          VMOV     s0,r0                 ;224
000250  eef80a40          VCVT.F32.U32 s1,s0                 ;224
000254  ee800aa9          VDIV.F32 s0,s1,s19             ;224
000258  ee100a10          VMOV     r0,s0                 ;225
00025c  f7fffffe          BL       __aeabi_f2d
000260  ec410b10          VMOV     d0,r0,r1              ;225
000264  a186              ADR      r1,|L8.1152|
000266  ec532b10          VMOV     r2,r3,d0              ;225
00026a  4668              MOV      r0,sp                 ;225
00026c  f7fffffe          BL       __2sprintf
000270  4669              MOV      r1,sp                 ;226
000272  9802              LDR      r0,[sp,#8]            ;226
000274  f7fffffe          BL       TEXT_SetText
                  |L8.632|
000278  7828              LDRB     r0,[r5,#0]            ;233  ; load_sw
00027a  2801              CMP      r0,#1                 ;233
00027c  d032              BEQ      |L8.740|
00027e  f6400196          MOV      r1,#0x896             ;283
000282  6860              LDR      r0,[r4,#4]            ;283
000284  f7fffffe          BL       WM_GetDialogItem
000288  a16d              ADR      r1,|L8.1088|
00028a  f7fffffe          BL       TEXT_SetText
00028e  f6400192          MOV      r1,#0x892             ;286
000292  6860              LDR      r0,[r4,#4]            ;286
000294  f7fffffe          BL       WM_GetDialogItem
000298  4605              MOV      r5,r0                 ;286
00029a  ec532b18          VMOV     r2,r3,d8              ;287
00029e  a178              ADR      r1,|L8.1152|
0002a0  4668              MOV      r0,sp                 ;287
0002a2  f7fffffe          BL       __2sprintf
0002a6  4669              MOV      r1,sp                 ;288
0002a8  4628              MOV      r0,r5                 ;288
0002aa  f7fffffe          BL       TEXT_SetText
                  |L8.686|
0002ae  f6401112          MOV      r1,#0x912             ;294
0002b2  6860              LDR      r0,[r4,#4]            ;294
0002b4  f7fffffe          BL       WM_GetDialogItem
0002b8  4605              MOV      r5,r0                 ;294
0002ba  f8db0000          LDR      r0,[r11,#0]           ;295  ; temp
0002be  f7fffffe          BL       __aeabi_f2d
0002c2  ec410b10          VMOV     d0,r0,r1              ;295
0002c6  a171              ADR      r1,|L8.1164|
0002c8  ec532b10          VMOV     r2,r3,d0              ;295
0002cc  4668              MOV      r0,sp                 ;295
0002ce  f7fffffe          BL       __2sprintf
0002d2  4669              MOV      r1,sp                 ;296
0002d4  4628              MOV      r0,r5                 ;296
0002d6  f7fffffe          BL       TEXT_SetText
0002da  2132              MOVS     r1,#0x32              ;298
0002dc  68e0              LDR      r0,[r4,#0xc]          ;298
0002de  f7fffffe          BL       WM_RestartTimer
                  |L8.738|
0002e2  e6c3              B        |L8.108|
                  |L8.740|
0002e4  6939              LDR      r1,[r7,#0x10]         ;235  ; Run_Control
0002e6  f2475230          MOV      r2,#0x7530            ;235
0002ea  486a              LDR      r0,|L8.1172|
0002ec  2701              MOVS     r7,#1                 ;123
0002ee  4291              CMP      r1,r2                 ;235
0002f0  d301              BCC      |L8.758|
0002f2  7007              STRB     r7,[r0,#0]            ;237
0002f4  e000              B        |L8.760|
                  |L8.758|
0002f6  7006              STRB     r6,[r0,#0]            ;239
                  |L8.760|
0002f8  4867              LDR      r0,|L8.1176|
0002fa  f8df91a0          LDR      r9,|L8.1180|
0002fe  ed900a00          VLDR     s0,[r0,#0]            ;241
000302  eebd0ac0          VCVT.S32.F32 s0,s0                 ;241
000306  ee100a10          VMOV     r0,s0                 ;241
00030a  f8a90000          STRH     r0,[r9,#0]            ;241
00030e  f640110d          MOV      r1,#0x90d             ;242
000312  6860              LDR      r0,[r4,#4]            ;242
000314  f7fffffe          BL       WM_GetDialogItem
000318  4682              MOV      r10,r0                ;242
00031a  f8b92000          LDRH     r2,[r9,#0]            ;243  ; battery_c
00031e  a160              ADR      r1,|L8.1184|
000320  4668              MOV      r0,sp                 ;243
000322  f7fffffe          BL       __2sprintf
000326  4669              MOV      r1,sp                 ;244
000328  4650              MOV      r0,r10                ;244
00032a  f7fffffe          BL       TEXT_SetText
00032e  f6400192          MOV      r1,#0x892             ;246
000332  6860              LDR      r0,[r4,#4]            ;246
000334  f7fffffe          BL       WM_GetDialogItem
000338  4681              MOV      r9,r0                 ;246
00033a  485b              LDR      r0,|L8.1192|
00033c  6800              LDR      r0,[r0,#0]            ;247  ; DISS_Current
00033e  f7fffffe          BL       __aeabi_f2d
000342  ec410b10          VMOV     d0,r0,r1              ;247
000346  a14e              ADR      r1,|L8.1152|
000348  ec532b10          VMOV     r2,r3,d0              ;247
00034c  4668              MOV      r0,sp                 ;247
00034e  f7fffffe          BL       __2sprintf
000352  4669              MOV      r1,sp                 ;248
000354  4648              MOV      r0,r9                 ;248
000356  f7fffffe          BL       TEXT_SetText
00035a  7868              LDRB     r0,[r5,#1]            ;249  ; status_flash
00035c  b320              CBZ      r0,|L8.936|
00035e  f6400196          MOV      r1,#0x896             ;257
000362  6860              LDR      r0,[r4,#4]            ;257
000364  f7fffffe          BL       WM_GetDialogItem
000368  a135              ADR      r1,|L8.1088|
00036a  f7fffffe          BL       TEXT_SetText
00036e  706e              STRB     r6,[r5,#1]            ;259
                  |L8.880|
000370  ed950a02          VLDR     s0,[r5,#8]            ;261
000374  eeb50ac0          VCMPE.F32 s0,#0.0               ;261
000378  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;261
00037c  d097              BEQ      |L8.686|
00037e  edd80a00          VLDR     s1,[r8,#0]            ;261
000382  eef40ac0          VCMPE.F32 s1,s0                 ;261
000386  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;261
00038a  d290              BCS      |L8.686|
00038c  4847              LDR      r0,|L8.1196|
00038e  6801              LDR      r1,[r0,#0]            ;263  ; flagA
000390  f0210140          BIC      r1,r1,#0x40           ;263
000394  6001              STR      r1,[r0,#0]            ;263  ; flagA
000396  f44f4100          MOV      r1,#0x8000            ;264
00039a  4845              LDR      r0,|L8.1200|
00039c  f7fffffe          BL       GPIO_SetBits
0003a0  4844              LDR      r0,|L8.1204|
0003a2  7006              STRB     r6,[r0,#0]            ;265
0003a4  702e              STRB     r6,[r5,#0]            ;266
0003a6  e782              B        |L8.686|
                  |L8.936|
0003a8  f6400196          MOV      r1,#0x896             ;250
0003ac  6860              LDR      r0,[r4,#4]            ;250
0003ae  f7fffffe          BL       WM_GetDialogItem
0003b2  4681              MOV      r9,r0                 ;250
0003b4  21ff              MOVS     r1,#0xff              ;251
0003b6  4648              MOV      r0,r9                 ;251
0003b8  f7fffffe          BL       TEXT_SetTextColor
0003bc  493e              LDR      r1,|L8.1208|
0003be  4648              MOV      r0,r9                 ;252
0003c0  f7fffffe          BL       TEXT_SetFont
0003c4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0003c8  a13c              ADR      r1,|L8.1212|
0003ca  4648              MOV      r0,r9                 ;254
0003cc  f7fffffe          BL       TEXT_SetText
0003d0  706f              STRB     r7,[r5,#1]            ;255
0003d2  e7cd              B        |L8.880|
                  |L8.980|
0003d4  6867              LDR      r7,[r4,#4]            ;306
0003d6  2100              MOVS     r1,#0                 ;307
0003d8  4638              MOV      r0,r7                 ;307
0003da  f7fffffe          BL       WINDOW_SetBkColor
0003de  2300              MOVS     r3,#0                 ;308
0003e0  f44f72fa          MOV      r2,#0x1f4             ;308
0003e4  2102              MOVS     r1,#2                 ;308
0003e6  4638              MOV      r0,r7                 ;308
0003e8  f7fffffe          BL       WM_CreateTimer
0003ec  f640010b          MOV      r1,#0x80b             ;320
0003f0  6860              LDR      r0,[r4,#4]            ;320
0003f2  f7fffffe          BL       WM_GetDialogItem
0003f6  4607              MOV      r7,r0                 ;320
0003f8  492f              LDR      r1,|L8.1208|
0003fa  4638              MOV      r0,r7                 ;322
0003fc  f7fffffe          BL       BUTTON_SetFont
000400  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000404  e060              B        |L8.1224|
000406  0000              DCW      0x0000
                  |L8.1032|
                          DCD      Run_Control
                  |L8.1036|
00040c  447a0000          DCFS     0x447a0000 ; 1000
                  |L8.1040|
                          DCD      0x00d3d3d3
                  |L8.1044|
                          DCD      temp
                  |L8.1048|
000418  00000000          DCFD     0x0000000000000000 ; 0
00041c  00000000
                  |L8.1056|
                          DCD      ||.data||
                  |L8.1060|
                          DCD      GUI_Fontsymbol
                  |L8.1064|
000428  4a696e6b          DCB      "Jinko",0
00042c  6f00    
00042e  00                DCB      0
00042f  00                DCB      0
                  |L8.1072|
                          DCD      GUI_FontHZ20S
                  |L8.1076|
000434  e6b58be9          DCB      230,181,139,233,135,143,230,152,190,231,164,186
000438  878fe698
00043c  bee7a4ba
                  |L8.1088|
000440  00                DCB      0
000441  00                DCB      0
000442  00                DCB      0
000443  00                DCB      0
                  |L8.1092|
                          DCD      GUI_Font24_1
                  |L8.1096|
000448  4100              DCB      "A",0
00044a  00                DCB      0
00044b  00                DCB      0
                  |L8.1100|
00044c  5600              DCB      "V",0
00044e  00                DCB      0
00044f  00                DCB      0
                  |L8.1104|
                          DCD      GUI_FontEN40
                  |L8.1108|
000454  433a00            DCB      "C:",0
000457  00                DCB      0
                  |L8.1112|
000458  6d00              DCB      "m",0
00045a  00                DCB      0
00045b  00                DCB      0
                  |L8.1116|
00045c  414800            DCB      "AH",0
00045f  00                DCB      0
                  |L8.1120|
                          DCD      GUI_Fontunit
                  |L8.1124|
000464  c2b000            DCB      194,176,0
000467  00                DCB      0
                  |L8.1128|
000468  4300              DCB      "C",0
00046a  00                DCB      0
00046b  00                DCB      0
                  |L8.1132|
                          DCD      lockstat1
                  |L8.1136|
                          DCD      lockstat2
                  |L8.1140|
                          DCD      lock
                  |L8.1144|
                          DCD      DISS_Voltage
                  |L8.1148|
                          DCD      0x3e99999a
                  |L8.1152|
000480  252e3366          DCB      "%.3f",0
000484  00      
000485  00                DCB      0
000486  00                DCB      0
000487  00                DCB      0
                  |L8.1160|
                          DCD      0x43480000
                  |L8.1164|
00048c  252e3166          DCB      "%.1f",0
000490  00      
000491  00                DCB      0
000492  00                DCB      0
000493  00                DCB      0
                  |L8.1172|
                          DCD      alert_flag
                  |L8.1176|
                          DCD      bc_raw
                  |L8.1180|
                          DCD      battery_c
                  |L8.1184|
0004a0  25303564          DCB      "%05d",0
0004a4  00      
0004a5  00                DCB      0
0004a6  00                DCB      0
0004a7  00                DCB      0
                  |L8.1192|
                          DCD      DISS_Current
                  |L8.1196|
                          DCD      flagA
                  |L8.1200|
                          DCD      0x40020000
                  |L8.1204|
                          DCD      mode_sw
                  |L8.1208|
                          DCD      GUI_FontHZ16
                  |L8.1212|
0004bc  e694bee7          DCB      230,148,190,231,148,181,228,184,173,0
0004c0  94b5e4b8
0004c4  ad00    
0004c6  00                DCB      0
0004c7  00                DCB      0
                  |L8.1224|
0004c8  a1fe              ADR      r1,|L8.2244|
0004ca  4638              MOV      r0,r7                 ;324
0004cc  f7fffffe          BL       BUTTON_SetText
0004d0  f640010c          MOV      r1,#0x80c             ;328
0004d4  6860              LDR      r0,[r4,#4]            ;328
0004d6  f7fffffe          BL       WM_GetDialogItem
0004da  4607              MOV      r7,r0                 ;328
0004dc  2101              MOVS     r1,#1                 ;329
0004de  4638              MOV      r0,r7                 ;329
0004e0  f7fffffe          BL       BUTTON_SetPressed
0004e4  49fb              LDR      r1,|L8.2260|
0004e6  4638              MOV      r0,r7                 ;331
0004e8  f7fffffe          BL       BUTTON_SetFont
0004ec  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0004f0  a1f9              ADR      r1,|L8.2264|
0004f2  4638              MOV      r0,r7                 ;333
0004f4  f7fffffe          BL       BUTTON_SetText
0004f8  f640010d          MOV      r1,#0x80d             ;337
0004fc  6860              LDR      r0,[r4,#4]            ;337
0004fe  f7fffffe          BL       WM_GetDialogItem
000502  4607              MOV      r7,r0                 ;337
000504  49f3              LDR      r1,|L8.2260|
000506  4638              MOV      r0,r7                 ;339
000508  f7fffffe          BL       BUTTON_SetFont
00050c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000510  a1f5              ADR      r1,|L8.2280|
000512  4638              MOV      r0,r7                 ;341
000514  f7fffffe          BL       BUTTON_SetText
000518  f640010e          MOV      r1,#0x80e             ;345
00051c  6860              LDR      r0,[r4,#4]            ;345
00051e  f7fffffe          BL       WM_GetDialogItem
000522  4607              MOV      r7,r0                 ;345
000524  49eb              LDR      r1,|L8.2260|
000526  4638              MOV      r0,r7                 ;347
000528  f7fffffe          BL       BUTTON_SetFont
00052c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000530  a1f1              ADR      r1,|L8.2296|
000532  4638              MOV      r0,r7                 ;349
000534  f7fffffe          BL       BUTTON_SetText
000538  f640010f          MOV      r1,#0x80f             ;353
00053c  6860              LDR      r0,[r4,#4]            ;353
00053e  f7fffffe          BL       WM_GetDialogItem
000542  4607              MOV      r7,r0                 ;353
000544  49e3              LDR      r1,|L8.2260|
000546  4638              MOV      r0,r7                 ;355
000548  f7fffffe          BL       BUTTON_SetFont
00054c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000550  a1ec              ADR      r1,|L8.2308|
000552  4638              MOV      r0,r7                 ;357
000554  f7fffffe          BL       BUTTON_SetText
000558  f44f6101          MOV      r1,#0x810             ;360
00055c  6860              LDR      r0,[r4,#4]            ;360
00055e  f7fffffe          BL       WM_GetDialogItem
000562  4607              MOV      r7,r0                 ;360
000564  4641              MOV      r1,r8                 ;361
000566  4638              MOV      r0,r7                 ;361
000568  f7fffffe          BL       TEXT_SetTextColor
00056c  49e7              LDR      r1,|L8.2316|
00056e  4638              MOV      r0,r7                 ;362
000570  f7fffffe          BL       TEXT_SetFont
000574  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000578  a1e5              ADR      r1,|L8.2320|
00057a  4638              MOV      r0,r7                 ;364
00057c  f7fffffe          BL       TEXT_SetText
000580  f6400111          MOV      r1,#0x811             ;366
000584  6860              LDR      r0,[r4,#4]            ;366
000586  f7fffffe          BL       WM_GetDialogItem
00058a  4607              MOV      r7,r0                 ;366
00058c  4641              MOV      r1,r8                 ;367
00058e  4638              MOV      r0,r7                 ;367
000590  f7fffffe          BL       TEXT_SetTextColor
000594  49dd              LDR      r1,|L8.2316|
000596  4638              MOV      r0,r7                 ;368
000598  f7fffffe          BL       TEXT_SetFont
00059c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005a0  a1dc              ADR      r1,|L8.2324|
0005a2  4638              MOV      r0,r7                 ;370
0005a4  f7fffffe          BL       TEXT_SetText
0005a8  f640011e          MOV      r1,#0x81e             ;372
0005ac  6860              LDR      r0,[r4,#4]            ;372
0005ae  f7fffffe          BL       WM_GetDialogItem
0005b2  4607              MOV      r7,r0                 ;372
0005b4  4641              MOV      r1,r8                 ;373
0005b6  4638              MOV      r0,r7                 ;373
0005b8  f7fffffe          BL       TEXT_SetTextColor
0005bc  49d3              LDR      r1,|L8.2316|
0005be  4638              MOV      r0,r7                 ;374
0005c0  f7fffffe          BL       TEXT_SetFont
0005c4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005c8  f2af1180          ADR      r1,|L8.1100|
0005cc  4638              MOV      r0,r7                 ;376
0005ce  f7fffffe          BL       TEXT_SetText
0005d2  f640011f          MOV      r1,#0x81f             ;378
0005d6  6860              LDR      r0,[r4,#4]            ;378
0005d8  f7fffffe          BL       WM_GetDialogItem
0005dc  4607              MOV      r7,r0                 ;378
0005de  4641              MOV      r1,r8                 ;379
0005e0  4638              MOV      r0,r7                 ;379
0005e2  f7fffffe          BL       TEXT_SetTextColor
0005e6  49c9              LDR      r1,|L8.2316|
0005e8  4638              MOV      r0,r7                 ;380
0005ea  f7fffffe          BL       TEXT_SetFont
0005ee  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005f2  f2af11ac          ADR      r1,|L8.1096|
0005f6  4638              MOV      r0,r7                 ;382
0005f8  f7fffffe          BL       TEXT_SetText
0005fc  f640016d          MOV      r1,#0x86d             ;384
000600  6860              LDR      r0,[r4,#4]            ;384
000602  f7fffffe          BL       WM_GetDialogItem
000606  4607              MOV      r7,r0                 ;384
000608  2100              MOVS     r1,#0                 ;385
00060a  4638              MOV      r0,r7                 ;385
00060c  f7fffffe          BL       TEXT_SetTextColor
000610  49c1              LDR      r1,|L8.2328|
000612  4638              MOV      r0,r7                 ;386
000614  f7fffffe          BL       TEXT_SetBkColor
000618  49c0              LDR      r1,|L8.2332|
00061a  4638              MOV      r0,r7                 ;387
00061c  f7fffffe          BL       TEXT_SetFont
000620  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000624  a1be              ADR      r1,|L8.2336|
000626  4638              MOV      r0,r7                 ;389
000628  f7fffffe          BL       TEXT_SetText
00062c  f640016e          MOV      r1,#0x86e             ;391
000630  6860              LDR      r0,[r4,#4]            ;391
000632  f7fffffe          BL       WM_GetDialogItem
000636  4607              MOV      r7,r0                 ;391
000638  ee1a0a10          VMOV     r0,s20                ;392
00063c  f7fffffe          BL       __aeabi_f2d
000640  ec410b10          VMOV     d0,r0,r1              ;392
000644  ec532b10          VMOV     r2,r3,d0              ;392
000648  f2af11cc          ADR      r1,|L8.1152|
00064c  4668              MOV      r0,sp                 ;392
00064e  f7fffffe          BL       __2sprintf
000652  4649              MOV      r1,r9                 ;393
000654  4638              MOV      r0,r7                 ;393
000656  f7fffffe          BL       TEXT_SetTextColor
00065a  49b5              LDR      r1,|L8.2352|
00065c  4638              MOV      r0,r7                 ;394
00065e  f7fffffe          BL       TEXT_SetFont
000662  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000666  4669              MOV      r1,sp                 ;396
000668  4638              MOV      r0,r7                 ;396
00066a  f7fffffe          BL       TEXT_SetText
00066e  f640112d          MOV      r1,#0x92d             ;398
000672  6860              LDR      r0,[r4,#4]            ;398
000674  f7fffffe          BL       WM_GetDialogItem
000678  4607              MOV      r7,r0                 ;398
00067a  68a8              LDR      r0,[r5,#8]            ;399  ; load_cutoffv
00067c  f7fffffe          BL       __aeabi_f2d
000680  ec410b10          VMOV     d0,r0,r1              ;399
000684  ec532b10          VMOV     r2,r3,d0              ;399
000688  f2af210c          ADR      r1,|L8.1152|
00068c  4668              MOV      r0,sp                 ;399
00068e  f7fffffe          BL       __2sprintf
000692  4649              MOV      r1,r9                 ;400
000694  4638              MOV      r0,r7                 ;400
000696  f7fffffe          BL       TEXT_SetTextColor
00069a  49a5              LDR      r1,|L8.2352|
00069c  4638              MOV      r0,r7                 ;401
00069e  f7fffffe          BL       TEXT_SetFont
0006a2  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0006a6  4669              MOV      r1,sp                 ;403
0006a8  4638              MOV      r0,r7                 ;403
0006aa  f7fffffe          BL       TEXT_SetText
0006ae  4651              MOV      r1,r10                ;405
0006b0  6860              LDR      r0,[r4,#4]            ;405
0006b2  f7fffffe          BL       WM_GetDialogItem
0006b6  4607              MOV      r7,r0                 ;405
0006b8  ec532b18          VMOV     r2,r3,d8              ;406
0006bc  f2af2140          ADR      r1,|L8.1152|
0006c0  4668              MOV      r0,sp                 ;406
0006c2  f7fffffe          BL       __2sprintf
0006c6  4631              MOV      r1,r6                 ;407
0006c8  4638              MOV      r0,r7                 ;407
0006ca  f7fffffe          BL       TEXT_SetTextColor
0006ce  4999              LDR      r1,|L8.2356|
0006d0  4638              MOV      r0,r7                 ;408
0006d2  f7fffffe          BL       TEXT_SetFont
0006d6  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0006da  4669              MOV      r1,sp                 ;410
0006dc  4638              MOV      r0,r7                 ;410
0006de  f7fffffe          BL       TEXT_SetText
0006e2  f6400192          MOV      r1,#0x892             ;412
0006e6  6860              LDR      r0,[r4,#4]            ;412
0006e8  f7fffffe          BL       WM_GetDialogItem
0006ec  4607              MOV      r7,r0                 ;412
0006ee  ec532b18          VMOV     r2,r3,d8              ;413
0006f2  f2af2174          ADR      r1,|L8.1152|
0006f6  4668              MOV      r0,sp                 ;413
0006f8  f7fffffe          BL       __2sprintf
0006fc  4631              MOV      r1,r6                 ;414
0006fe  4638              MOV      r0,r7                 ;414
000700  f7fffffe          BL       TEXT_SetTextColor
000704  498b              LDR      r1,|L8.2356|
000706  4638              MOV      r0,r7                 ;415
000708  f7fffffe          BL       TEXT_SetFont
00070c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000710  4669              MOV      r1,sp                 ;417
000712  4638              MOV      r0,r7                 ;417
000714  f7fffffe          BL       TEXT_SetText
000718  f640110d          MOV      r1,#0x90d             ;419
00071c  6860              LDR      r0,[r4,#4]            ;419
00071e  f7fffffe          BL       WM_GetDialogItem
000722  4607              MOV      r7,r0                 ;419
000724  2200              MOVS     r2,#0                 ;420
000726  f2af2188          ADR      r1,|L8.1184|
00072a  4668              MOV      r0,sp                 ;420
00072c  f7fffffe          BL       __2sprintf
000730  4631              MOV      r1,r6                 ;421
000732  4638              MOV      r0,r7                 ;421
000734  f7fffffe          BL       TEXT_SetTextColor
000738  497e              LDR      r1,|L8.2356|
00073a  4638              MOV      r0,r7                 ;422
00073c  f7fffffe          BL       TEXT_SetFont
000740  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000744  4669              MOV      r1,sp                 ;424
000746  4638              MOV      r0,r7                 ;424
000748  f7fffffe          BL       TEXT_SetText
00074c  f640110e          MOV      r1,#0x90e             ;426
000750  6860              LDR      r0,[r4,#4]            ;426
000752  f7fffffe          BL       WM_GetDialogItem
000756  4607              MOV      r7,r0                 ;426
000758  4649              MOV      r1,r9                 ;427
00075a  4638              MOV      r0,r7                 ;427
00075c  f7fffffe          BL       TEXT_SetTextColor
000760  496e              LDR      r1,|L8.2332|
000762  4638              MOV      r0,r7                 ;428
000764  f7fffffe          BL       TEXT_SetFont
000768  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00076c  a172              ADR      r1,|L8.2360|
00076e  4638              MOV      r0,r7                 ;430
000770  f7fffffe          BL       TEXT_SetText
000774  f6401139          MOV      r1,#0x939             ;432
000778  6860              LDR      r0,[r4,#4]            ;432
00077a  f7fffffe          BL       WM_GetDialogItem
00077e  4607              MOV      r7,r0                 ;432
000780  4649              MOV      r1,r9                 ;433
000782  4638              MOV      r0,r7                 ;433
000784  f7fffffe          BL       TEXT_SetTextColor
000788  4964              LDR      r1,|L8.2332|
00078a  4638              MOV      r0,r7                 ;434
00078c  f7fffffe          BL       TEXT_SetFont
000790  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000794  a16c              ADR      r1,|L8.2376|
000796  4638              MOV      r0,r7                 ;436
000798  f7fffffe          BL       TEXT_SetText
00079c  78a8              LDRB     r0,[r5,#2]            ;438  ; load_mode
00079e  f8df81b8          LDR      r8,|L8.2392|
0007a2  4d6e              LDR      r5,|L8.2396|
0007a4  f640110f          MOV      r1,#0x90f             ;440
0007a8  f44f6780          MOV      r7,#0x400             ;444
0007ac  2801              CMP      r0,#1                 ;438
0007ae  d001              BEQ      |L8.1972|
0007b0  b1d8              CBZ      r0,|L8.2026|
0007b2  e034              B        |L8.2078|
                  |L8.1972|
0007b4  6860              LDR      r0,[r4,#4]            ;440
0007b6  f7fffffe          BL       WM_GetDialogItem
0007ba  4682              MOV      r10,r0                ;440
0007bc  4649              MOV      r1,r9                 ;441
0007be  4650              MOV      r0,r10                ;441
0007c0  f7fffffe          BL       TEXT_SetTextColor
0007c4  495a              LDR      r1,|L8.2352|
0007c6  4650              MOV      r0,r10                ;442
0007c8  f7fffffe          BL       TEXT_SetFont
0007cc  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0007d0  4639              MOV      r1,r7                 ;444
0007d2  4640              MOV      r0,r8                 ;444
0007d4  f7fffffe          BL       GPIO_ResetBits
0007d8  a161              ADR      r1,|L8.2400|
0007da  4650              MOV      r0,r10                ;445
0007dc  f7fffffe          BL       TEXT_SetText
0007e0  6828              LDR      r0,[r5,#0]            ;446  ; flagD
0007e2  f0400080          ORR      r0,r0,#0x80           ;446
0007e6  6028              STR      r0,[r5,#0]            ;446  ; flagD
0007e8  e019              B        |L8.2078|
                  |L8.2026|
0007ea  6860              LDR      r0,[r4,#4]            ;448
0007ec  f7fffffe          BL       WM_GetDialogItem
0007f0  4682              MOV      r10,r0                ;448
0007f2  4649              MOV      r1,r9                 ;449
0007f4  4650              MOV      r0,r10                ;449
0007f6  f7fffffe          BL       TEXT_SetTextColor
0007fa  494d              LDR      r1,|L8.2352|
0007fc  4650              MOV      r0,r10                ;450
0007fe  f7fffffe          BL       TEXT_SetFont
000802  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000806  4639              MOV      r1,r7                 ;452
000808  4640              MOV      r0,r8                 ;452
00080a  f7fffffe          BL       GPIO_SetBits
00080e  a155              ADR      r1,|L8.2404|
000810  4650              MOV      r0,r10                ;453
000812  f7fffffe          BL       TEXT_SetText
000816  6828              LDR      r0,[r5,#0]            ;454  ; flagD
000818  f0200080          BIC      r0,r0,#0x80           ;454
00081c  6028              STR      r0,[r5,#0]            ;454  ; flagD
                  |L8.2078|
00081e  f44f6111          MOV      r1,#0x910             ;457
000822  6860              LDR      r0,[r4,#4]            ;457
000824  f7fffffe          BL       WM_GetDialogItem
000828  4605              MOV      r5,r0                 ;457
00082a  4649              MOV      r1,r9                 ;458
00082c  4628              MOV      r0,r5                 ;458
00082e  f7fffffe          BL       TEXT_SetTextColor
000832  493a              LDR      r1,|L8.2332|
000834  4628              MOV      r0,r5                 ;459
000836  f7fffffe          BL       TEXT_SetFont
00083a  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00083e  a14a              ADR      r1,|L8.2408|
000840  4628              MOV      r0,r5                 ;461
000842  f7fffffe          BL       TEXT_SetText
000846  f6401111          MOV      r1,#0x911             ;463
00084a  6860              LDR      r0,[r4,#4]            ;463
00084c  f7fffffe          BL       WM_GetDialogItem
000850  4605              MOV      r5,r0                 ;463
000852  ee190a10          VMOV     r0,s18                ;464
000856  f7fffffe          BL       __aeabi_f2d
00085a  ec410b10          VMOV     d0,r0,r1              ;464
00085e  ec532b10          VMOV     r2,r3,d0              ;464
000862  f2af31e4          ADR      r1,|L8.1152|
000866  4668              MOV      r0,sp                 ;464
000868  f7fffffe          BL       __2sprintf
00086c  4649              MOV      r1,r9                 ;465
00086e  4628              MOV      r0,r5                 ;465
000870  f7fffffe          BL       TEXT_SetTextColor
000874  492e              LDR      r1,|L8.2352|
000876  4628              MOV      r0,r5                 ;466
000878  f7fffffe          BL       TEXT_SetFont
00087c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000880  4669              MOV      r1,sp                 ;468
000882  4628              MOV      r0,r5                 ;468
000884  f7fffffe          BL       TEXT_SetText
000888  f6401112          MOV      r1,#0x912             ;470
00088c  6860              LDR      r0,[r4,#4]            ;470
00088e  f7fffffe          BL       WM_GetDialogItem
000892  4604              MOV      r4,r0                 ;470
000894  4631              MOV      r1,r6                 ;471
000896  4620              MOV      r0,r4                 ;471
000898  f7fffffe          BL       TEXT_SetTextColor
00089c  4924              LDR      r1,|L8.2352|
00089e  4620              MOV      r0,r4                 ;472
0008a0  f7fffffe          BL       TEXT_SetFont
0008a4  f8db0000          LDR      r0,[r11,#0]           ;473  ; temp
0008a8  f7fffffe          BL       __aeabi_f2d
0008ac  ec410b10          VMOV     d0,r0,r1              ;473
0008b0  ec532b10          VMOV     r2,r3,d0              ;473
0008b4  f2af412c          ADR      r1,|L8.1164|
0008b8  4668              MOV      r0,sp                 ;473
0008ba  f7fffffe          BL       __2sprintf
0008be  e05b              B        |L8.2424|
                  |L8.2240|
0008c0  e05f              B        |L8.2434|
0008c2  0000              DCW      0x0000
                  |L8.2244|
0008c4  e58685e9          DCB      229,134,133,233,152,187,230,181,139,232,175,149,0
0008c8  98bbe6b5
0008cc  8be8af95
0008d0  00      
0008d1  00                DCB      0
0008d2  00                DCB      0
0008d3  00                DCB      0
                  |L8.2260|
                          DCD      GUI_FontHZ16
                  |L8.2264|
0008d8  e7a88be6          DCB      231,168,139,230,142,167,232,180,159,232,189,189,0
0008dc  8ea7e8b4
0008e0  9fe8bdbd
0008e4  00      
0008e5  00                DCB      0
0008e6  00                DCB      0
0008e7  00                DCB      0
                  |L8.2280|
0008e8  e7a88be6          DCB      231,168,139,230,142,167,231,148,181,230,186,144,0
0008ec  8ea7e794
0008f0  b5e6ba90
0008f4  00      
0008f5  00                DCB      0
0008f6  00                DCB      0
0008f7  00                DCB      0
                  |L8.2296|
0008f8  e58585e6          DCB      229,133,133,230,148,190,231,148,181,0
0008fc  94bee794
000900  b500    
000902  00                DCB      0
000903  00                DCB      0
                  |L8.2308|
000904  e69bb2e7          DCB      230,155,178,231,186,191,0
000908  babf00  
00090b  00                DCB      0
                  |L8.2316|
                          DCD      GUI_FontEN40
                  |L8.2320|
000910  563a00            DCB      "V:",0
000913  00                DCB      0
                  |L8.2324|
000914  493a00            DCB      "I:",0
000917  00                DCB      0
                  |L8.2328|
                          DCD      0x00bfffff
                  |L8.2332|
                          DCD      GUI_Fontset_font
                  |L8.2336|
000920  e8b49fe8          DCB      232,180,159,232,189,189,231,148,181,230,181,129,0
000924  bdbde794
000928  b5e6b581
00092c  00      
00092d  00                DCB      0
00092e  00                DCB      0
00092f  00                DCB      0
                  |L8.2352|
                          DCD      GUI_Font24_1
                  |L8.2356|
                          DCD      GUI_FontD24x32
                  |L8.2360|
000938  e8b49fe8          DCB      232,180,159,232,189,189,230,168,161,229,188,143,0
00093c  bdbde6a8
000940  a1e5bc8f
000944  00      
000945  00                DCB      0
000946  00                DCB      0
000947  00                DCB      0
                  |L8.2376|
000948  e688aae6          DCB      230,136,170,230,173,162,231,148,181,229,142,139,0
00094c  ada2e794
000950  b5e58e8b
000954  00      
000955  00                DCB      0
000956  00                DCB      0
000957  00                DCB      0
                  |L8.2392|
                          DCD      0x40020800
                  |L8.2396|
                          DCD      flagD
                  |L8.2400|
000960  434300            DCB      "CC",0
000963  00                DCB      0
                  |L8.2404|
000964  435600            DCB      "CV",0
000967  00                DCB      0
                  |L8.2408|
000968  e8b49fe8          DCB      232,180,159,232,189,189,231,148,181,229,142,139,0
00096c  bdbde794
000970  b5e58e8b
000974  00      
000975  00                DCB      0
000976  00                DCB      0
000977  00                DCB      0
                  |L8.2424|
000978  4669              MOV      r1,sp                 ;474
00097a  4620              MOV      r0,r4                 ;474
00097c  f7fffffe          BL       TEXT_SetText
000980  e4af              B        |L8.738|
                  |L8.2434|
000982  68a0              LDR      r0,[r4,#8]            ;481
000984  f7fffffe          BL       WM_GetId
000988  e4ab              B        |L8.738|
;;;580    
                          ENDP


                          AREA ||i.test_load||, CODE, READONLY, ALIGN=2

                  test_load PROC
;;;1295   
;;;1296   void test_load(void)
000000  b570              PUSH     {r4-r6,lr}
;;;1297   {
;;;1298   
;;;1299       if(load_sw == load_on && para_set1 == set_1_on)
000002  4827              LDR      r0,|L9.160|
000004  7802              LDRB     r2,[r0,#0]  ; load_sw
;;;1300       {
;;;1301           if(DISS_Voltage*100 > set_max_v || DISS_Voltage*100 < set_min_v)
;;;1302           {
;;;1303              if(para_set4 == set_4_on){
;;;1304                   BEEP_Tiggr();
;;;1305               }
;;;1306               TM1650_SET_LED(0x68,0x70);//FAIL灯
;;;1307               GPIO_SetBits(GPIOD,GPIO_Pin_12);//            
000006  4d27              LDR      r5,|L9.164|
000008  f44f5480          MOV      r4,#0x1000
00000c  2a01              CMP      r2,#1                 ;1299
00000e  d103              BNE      |L9.24|
000010  4825              LDR      r0,|L9.168|
000012  7800              LDRB     r0,[r0,#0]            ;1299  ; para_set1
000014  28ff              CMP      r0,#0xff              ;1299
000016  d009              BEQ      |L9.44|
                  |L9.24|
;;;1308           }else{
;;;1309               GPIO_ResetBits(GPIOD,GPIO_Pin_12);
;;;1310               TM1650_SET_LED(0x48,0x71);
;;;1311               TM1650_SET_LED(0x68,0xF2);//PASS灯
;;;1312           }        
;;;1313       }else
;;;1314       {
;;;1315           TM1650_SET_LED(0x68,0x70);
000018  2170              MOVS     r1,#0x70
00001a  2068              MOVS     r0,#0x68
00001c  f7fffffe          BL       TM1650_SET_LED
;;;1316           GPIO_ResetBits(GPIOD,GPIO_Pin_12);//灭灯
000020  4621              MOV      r1,r4
000022  4628              MOV      r0,r5
000024  e8bd4070          POP      {r4-r6,lr}
000028  f7ffbffe          B.W      GPIO_ResetBits
                  |L9.44|
00002c  4a1f              LDR      r2,|L9.172|
00002e  ed9f0a20          VLDR     s0,|L9.176|
000032  edd20a00          VLDR     s1,[r2,#0]            ;1301
000036  4a1f              LDR      r2,|L9.180|
000038  ee200a80          VMUL.F32 s0,s1,s0              ;1301
00003c  6b93              LDR      r3,[r2,#0x38]         ;1301  ; Run_Control
00003e  ee003a90          VMOV     s1,r3                 ;1301
000042  eef80a60          VCVT.F32.U32 s1,s1                 ;1301
000046  eeb40ae0          VCMPE.F32 s0,s1                 ;1301
00004a  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1301
00004e  dc09              BGT      |L9.100|
000050  6bd2              LDR      r2,[r2,#0x3c]         ;1301  ; Run_Control
000052  ee002a90          VMOV     s1,r2                 ;1301
000056  eef80a60          VCVT.F32.U32 s1,s1                 ;1301
00005a  eeb40ae0          VCMPE.F32 s0,s1                 ;1301
00005e  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1301
000062  d20f              BCS      |L9.132|
                  |L9.100|
000064  4814              LDR      r0,|L9.184|
000066  7800              LDRB     r0,[r0,#0]            ;1303  ; para_set4
000068  28ff              CMP      r0,#0xff              ;1303
00006a  d101              BNE      |L9.112|
00006c  f7fffffe          BL       BEEP_Tiggr
                  |L9.112|
000070  2170              MOVS     r1,#0x70              ;1306
000072  2068              MOVS     r0,#0x68              ;1306
000074  f7fffffe          BL       TM1650_SET_LED
000078  4621              MOV      r1,r4                 ;1307
00007a  4628              MOV      r0,r5                 ;1307
00007c  e8bd4070          POP      {r4-r6,lr}            ;1307
000080  f7ffbffe          B.W      GPIO_SetBits
                  |L9.132|
000084  4621              MOV      r1,r4                 ;1309
000086  4628              MOV      r0,r5                 ;1309
000088  f7fffffe          BL       GPIO_ResetBits
00008c  2171              MOVS     r1,#0x71              ;1310
00008e  2048              MOVS     r0,#0x48              ;1310
000090  f7fffffe          BL       TM1650_SET_LED
000094  e8bd4070          POP      {r4-r6,lr}            ;1311
000098  21f2              MOVS     r1,#0xf2              ;1311
00009a  2068              MOVS     r0,#0x68              ;1311
00009c  f7ffbffe          B.W      TM1650_SET_LED
;;;1317       }
;;;1318   }
                          ENDP

                  |L9.160|
                          DCD      ||.data||
                  |L9.164|
                          DCD      0x40020c00
                  |L9.168|
                          DCD      para_set1
                  |L9.172|
                          DCD      DISS_Voltage
                  |L9.176|
0000b0  42c80000          DCFS     0x42c80000 ; 100
                  |L9.180|
                          DCD      Run_Control
                  |L9.184|
                          DCD      para_set4

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _aDialogCreate2
                          DCD      WINDOW_CreateIndirect
                          DCD      ||.conststring||
000008  08090000          DCW      0x0809,0x0000
00000c  000001e0          DCW      0x0000,0x01e0
000010  01100000          DCW      0x0110,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000024  080b0053          DCW      0x080b,0x0053
000028  00e2004d          DCW      0x00e2,0x004d
00002c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000040  080c00a3          DCW      0x080c,0x00a3
000044  00e2004d          DCW      0x00e2,0x004d
000048  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
00005c  080d00f3          DCW      0x080d,0x00f3
000060  00e2004d          DCW      0x00e2,0x004d
000064  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000078  080e0143          DCW      0x080e,0x0143
00007c  00e2004d          DCW      0x00e2,0x004d
000080  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000094  080f0193          DCW      0x080f,0x0193
000098  00e2004d          DCW      0x00e2,0x004d
00009c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000b0  0810001c          DCW      0x0810,0x001c
0000b4  00320040          DCW      0x0032,0x0040
0000b8  00200000          DCW      0x0020,0x0000
                          DCD      0x00000064
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000cc  0811001c          DCW      0x0811,0x001c
0000d0  00780040          DCW      0x0078,0x0040
0000d4  00200000          DCW      0x0020,0x0000
                          DCD      0x00000064
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000e8  081e00f0          DCW      0x081e,0x00f0
0000ec  00320020          DCW      0x0032,0x0020
0000f0  001e0000          DCW      0x001e,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000104  081f00f0          DCW      0x081f,0x00f0
000108  00790020          DCW      0x0079,0x0020
00010c  001e0000          DCW      0x001e,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000120  086d0122          DCW      0x086d,0x0122
000124  004b0050          DCW      0x004b,0x0050
000128  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00013c  086e017c          DCW      0x086e,0x017c
000140  004b0041          DCW      0x004b,0x0041
000144  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000158  090e0122          DCW      0x090e,0x0122
00015c  007d0050          DCW      0x007d,0x0050
000160  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000174  09390122          DCW      0x0939,0x0122
000178  00960050          DCW      0x0096,0x0050
00017c  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000190  090f017c          DCW      0x090f,0x017c
000194  007d0041          DCW      0x007d,0x0041
000198  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001ac  09100122          DCW      0x0910,0x0122
0001b0  00640050          DCW      0x0064,0x0050
0001b4  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001c8  0911017c          DCW      0x0911,0x017c
0001cc  00640041          DCW      0x0064,0x0041
0001d0  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001e4  0891005f          DCW      0x0891,0x005f
0001e8  00300096          DCW      0x0030,0x0096
0001ec  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000200  0892005f          DCW      0x0892,0x005f
000204  00740096          DCW      0x0074,0x0096
000208  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00021c  08960190          DCW      0x0896,0x0190
000220  00040032          DCW      0x0004,0x0032
000224  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000238  090d005f          DCW      0x090d,0x005f
00023c  00b80096          DCW      0x00b8,0x0096
000240  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000254  0912012c          DCW      0x0912,0x012c
000258  00020050          DCW      0x0002,0x0050
00025c  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000270  092d017c          DCW      0x092d,0x017c
000274  00960041          DCW      0x0096,0x0041
000278  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  57696e64          DCB      "Window",0
000004  6f7700  
000007  00                DCB      0
000008  42757474          DCB      "Button",0
00000c  6f6e00  
00000f  00                DCB      0
000010  54657874          DCB      "Text",0
000014  00      

                          AREA ||.data||, DATA, ALIGN=2

                  load_sw
000000  00                DCB      0x00
                  status_flash
000001  00                DCB      0x00
                  load_mode
000002  0000              DCB      0x00,0x00
                  load_wind
                          DCD      0x00000000
                  load_cutoffv
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\APP\\load_Face.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_load_Face_c_load_sw____REV16|
#line 129 "D:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_load_Face_c_load_sw____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_load_Face_c_load_sw____REVSH|
#line 144
|__asm___11_load_Face_c_load_sw____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
