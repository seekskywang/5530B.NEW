; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\Output\tim6.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\Output\tim6.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -ID:\Keil\ARM\RV31\Inc -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\ST\STM32F4xx -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\Output\tim6.crf ..\drive\TIM6.c]
                          THUMB

                          AREA ||i.TIM3_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM3_IRQHandler PROC
;;;199    //??? 3 ??????
;;;200    void TIM3_IRQHandler(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;201    {
000004  ed2d8b02          VPUSH    {d8}
;;;202        static vu8 calert = 0;
;;;203        static vu16 resetcount;
;;;204        static vu8 read1963;
;;;205        static vu16 scancount;
;;;206        static vu32 ctime,dctime;
;;;207        
;;;208        if(TIM_GetITStatus(TIM3,TIM_IT_Update)==SET) //????
000008  2101              MOVS     r1,#1
00000a  4c92              LDR      r4,|L1.596|
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       TIM_GetITStatus
000012  2801              CMP      r0,#1
000014  d123              BNE      |L1.94|
;;;209        {
;;;210            TIM_ClearITPendingBit(TIM3,TIM_IT_Update); //??????¦Ë
000016  2101              MOVS     r1,#1
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       TIM_ClearITPendingBit
;;;211    //         if(page_sw != face_starter)
;;;212    //         {
;;;213    //              if(resetflag == 1)
;;;214    //              {
;;;215    //                  if(resetcount == 1)
;;;216    //                  {
;;;217    //                      LCD_Initializtion();
;;;218    //                      sLCD_WR_REG(0xf1);
;;;219    //                      GUI_Init();
;;;220    //                      if(page_sw == face_menu)
;;;221    //                      {
;;;222    //                          ResetPow();
;;;223    //                      }else if(page_sw == face_cdc){
;;;224    //                          ResetCDC();
;;;225    //                      }else if(page_sw == face_r){
;;;226    //                          ResetR();
;;;227    //                      }else if(page_sw == face_load){
;;;228    //                          ResetLoad();
;;;229    //                      }else if(page_sw == face_graph){
;;;230    //                          ResetG();
;;;231    //                      }else if(page_sw == face_set){
;;;232    //                          ResetSET();
;;;233    //                      }
;;;234    //                      resdone = 1;
;;;235    // //                     resetflag = 0;
;;;236    //                      resetcount = 0;
;;;237    //                  }else{
;;;238    //                      resetcount++;
;;;239    //                  }                
;;;240    //              }
;;;241    //          }
;;;242            switch(page_sw)
00001e  488e              LDR      r0,|L1.600|
000020  f890c000          LDRB     r12,[r0,#0]  ; page_sw
;;;243            {
;;;244                case face_menu:
;;;245                {
;;;246                    if(pow_sw == pow_on)
000024  4a8d              LDR      r2,|L1.604|
;;;247                    {
;;;248                        bc_raw += DISS_POW_Current * 1000 * 1/3600;
000026  4b8e              LDR      r3,|L1.608|
;;;249                    }else{
;;;250                        bc_raw = 0;
;;;251                    }
;;;252                }break;
;;;253                case face_cdc:
;;;254                {
;;;255                    if(mode_sw == mode_pow && cdc_sw == cdc_on)
;;;256                    {
;;;257                        ctime++;
;;;258                        second = ctime%60;//ç§’
;;;259                        minute = (ctime/60)%60;//åˆ†
;;;260                        hour   = ctime/3600;//æ—¶
;;;261                        cbc_raw += DISS_POW_Current * 1000 * 1/3600;
;;;262                        bc_raw = 0;
;;;263    //                    bc_raw += DISS_POW_Current * 1000 * 1/3600;
;;;264                    }else if(mode_sw == mode_load && cdc_sw == cdc_on){
;;;265                        dctime++;
;;;266                        second1 = dctime%60;//ç§’
;;;267                        minute1 = (dctime/60)%60;//åˆ†
;;;268                        hour1   = dctime/3600;//æ—¶
;;;269                        bc_raw += DISS_Current * 1000 * 1/3600;
000028  4d8e              LDR      r5,|L1.612|
;;;270    //                    c_sum += DISS_Current * 1000 * 1/3600;
;;;271                        cbc_raw = 0;
;;;272                    }else if(cdc_sw == cdc_off){
;;;273                        bc_raw = 0;
;;;274                        cbc_raw = 0;
;;;275                        c_sum = 0;
;;;276                        ctime=0;
00002a  2600              MOVS     r6,#0
;;;277                        dctime=0;
;;;278                    }
;;;279                }break;
;;;280                case face_load:
;;;281                {
;;;282                    if(load_sw == load_on)
;;;283                    {
;;;284                        if(alert_flag == 1)
00002c  488e              LDR      r0,|L1.616|
00002e  498f              LDR      r1,|L1.620|
000030  f8df823c          LDR      r8,|L1.624|
000034  4f8f              LDR      r7,|L1.628|
000036  ed9f8a90          VLDR     s16,|L1.632|
00003a  eddf8a90          VLDR     s17,|L1.636|
00003e  ed9f0a90          VLDR     s0,|L1.640|
000042  4c90              LDR      r4,|L1.644|
000044  f1bc0f05          CMP      r12,#5                ;242
000048  d209              BCS      |L1.94|
00004a  e8dff00c          TBB      [pc,r12]              ;242
00004e  af19              DCB      0xaf,0x19
000050  03f08700          DCB      0x03,0xf0,0x87,0x00
000054  7810              LDRB     r0,[r2,#0]            ;246  ; pow_sw
000056  2801              CMP      r0,#1                 ;246
000058  d005              BEQ      |L1.102|
00005a  ed840a03          VSTR     s0,[r4,#0xc]          ;250
                  |L1.94|
;;;285                        {
;;;286                            calert ++;
;;;287                            if(calert == 3)
;;;288                            {
;;;289                                t_onoff = 0;
;;;290                                GPIO_SetBits(GPIOA,GPIO_Pin_15);//????OFF
;;;291                                mode_sw = 0;
;;;292                                load_sw = load_off;
;;;293                                calert = 0;                                
;;;294                            }
;;;295                        }
;;;296                        bc_raw += DISS_Current * 1000 * 1/3600;
;;;297                    }else{
;;;298                        bc_raw = 0;
;;;299                    }
;;;300                }break;
;;;301                case face_graph:
;;;302                {
;;;303                    if(mode_sw == mode_pow)
;;;304                    {
;;;305                        if(pow_sw == pow_on)
;;;306                        {
;;;307                            bc_raw += DISS_POW_Current * 1000 * 1/3600;
;;;308                        }else if(mode_sw == mode_pow && cdc_sw == cdc_on)
;;;309                        {
;;;310                            bc_raw += DISS_POW_Current * 1000 * 1/3600;
;;;311                        }
;;;312                        else{
;;;313                            bc_raw = 0;
;;;314                        }
;;;315                    }               
;;;316                    
;;;317                    if(mode_sw == mode_load)
;;;318                    {
;;;319                        if(load_sw == load_on)
;;;320                        {
;;;321                            bc_raw += DISS_Current * 1000 * 1/3600;
;;;322                        }else{
;;;323                            bc_raw = 0;
;;;324                        }
;;;325                    }
;;;326                }break;
;;;327                case face_r:
;;;328                {
;;;329                    if(oct_sw == oct_on)
;;;330                    {
;;;331                        if(alert_flag == 1)
;;;332                        {
;;;333                            calert ++;
;;;334                            if(calert == 3)
;;;335                            {
;;;336                                ocstop = 1;
;;;337                                calert = 0;
;;;338                            }
;;;339                        }
;;;340                    }
;;;341                }break;
;;;342            }
;;;343    //         GPIO_ResetBits(GPIOD,GPIO_Pin_12);
;;;344    //         TM1650_SET_LED(0x48,0x71);
;;;345    //         TM1650_SET_LED(0x68,0xF2);//PASS?
;;;346        }    
;;;347        
;;;348    }
00005e  ecbd8b02          VPOP     {d8}
000062  e8bd87f0          POP      {r4-r10,pc}
                  |L1.102|
000066  ed930a00          VLDR     s0,[r3,#0]            ;248
00006a  ee200a08          VMUL.F32 s0,s0,s16             ;248
00006e  eec00a28          VDIV.F32 s1,s0,s17             ;248
000072  ed940a03          VLDR     s0,[r4,#0xc]          ;248
000076  ee300a80          VADD.F32 s0,s1,s0              ;248
00007a  ed840a03          VSTR     s0,[r4,#0xc]          ;248
00007e  e7ee              B        |L1.94|
000080  f897c000          LDRB     r12,[r7,#0]           ;255  ; mode_sw
000084  203c              MOVS     r0,#0x3c              ;258
000086  f44f6261          MOV      r2,#0xe10             ;260
00008a  f1bc0f03          CMP      r12,#3                ;255
00008e  d104              BNE      |L1.154|
000090  f891c000          LDRB     r12,[r1,#0]           ;255  ; cdc_sw
000094  f1bc0f01          CMP      r12,#1                ;255
000098  d003              BEQ      |L1.162|
                  |L1.154|
00009a  783b              LDRB     r3,[r7,#0]            ;264  ; mode_sw
00009c  2b02              CMP      r3,#2                 ;264
00009e  d027              BEQ      |L1.240|
0000a0  e029              B        |L1.246|
                  |L1.162|
0000a2  6861              LDR      r1,[r4,#4]            ;257  ; ctime
0000a4  1c49              ADDS     r1,r1,#1              ;257
0000a6  6061              STR      r1,[r4,#4]            ;257  ; ctime
0000a8  6861              LDR      r1,[r4,#4]            ;258  ; ctime
0000aa  fbb1f5f0          UDIV     r5,r1,r0              ;258
0000ae  fb001115          MLS      r1,r0,r5,r1           ;258
0000b2  4d75              LDR      r5,|L1.648|
0000b4  7029              STRB     r1,[r5,#0]            ;258
0000b6  6861              LDR      r1,[r4,#4]            ;259  ; ctime
0000b8  fbb1f1f0          UDIV     r1,r1,r0              ;259
0000bc  fbb1f5f0          UDIV     r5,r1,r0              ;259
0000c0  fb001015          MLS      r0,r0,r5,r1           ;259
0000c4  4971              LDR      r1,|L1.652|
0000c6  7008              STRB     r0,[r1,#0]            ;259
0000c8  6860              LDR      r0,[r4,#4]            ;260  ; ctime
0000ca  4971              LDR      r1,|L1.656|
0000cc  fbb0f0f2          UDIV     r0,r0,r2              ;260
0000d0  7008              STRB     r0,[r1,#0]            ;260
0000d2  edd30a00          VLDR     s1,[r3,#0]            ;261
0000d6  ee600a88          VMUL.F32 s1,s1,s16             ;261
0000da  ee801aa8          VDIV.F32 s2,s1,s17             ;261
0000de  edd40a04          VLDR     s1,[r4,#0x10]         ;261
0000e2  ee710a20          VADD.F32 s1,s2,s1              ;261
0000e6  edc40a04          VSTR     s1,[r4,#0x10]         ;261
0000ea  ed840a03          VSTR     s0,[r4,#0xc]          ;262
0000ee  e7b6              B        |L1.94|
                  |L1.240|
0000f0  780b              LDRB     r3,[r1,#0]            ;264  ; cdc_sw
0000f2  2b01              CMP      r3,#1                 ;264
0000f4  d00b              BEQ      |L1.270|
                  |L1.246|
0000f6  7808              LDRB     r0,[r1,#0]            ;272  ; cdc_sw
0000f8  2800              CMP      r0,#0                 ;272
0000fa  d1b0              BNE      |L1.94|
0000fc  ed840a03          VSTR     s0,[r4,#0xc]          ;273
000100  ed840a04          VSTR     s0,[r4,#0x10]         ;274
000104  ed840a05          VSTR     s0,[r4,#0x14]         ;275
000108  6066              STR      r6,[r4,#4]            ;276  ; ctime
00010a  60a6              STR      r6,[r4,#8]            ;277  ; dctime
                  |L1.268|
00010c  e7a7              B        |L1.94|
                  |L1.270|
00010e  68a1              LDR      r1,[r4,#8]            ;265  ; dctime
000110  1c49              ADDS     r1,r1,#1              ;265
000112  60a1              STR      r1,[r4,#8]            ;265  ; dctime
000114  68a1              LDR      r1,[r4,#8]            ;266  ; dctime
000116  fbb1f3f0          UDIV     r3,r1,r0              ;266
00011a  fb001113          MLS      r1,r0,r3,r1           ;266
00011e  4b5d              LDR      r3,|L1.660|
000120  7019              STRB     r1,[r3,#0]            ;266
000122  68a1              LDR      r1,[r4,#8]            ;267  ; dctime
000124  fbb1f1f0          UDIV     r1,r1,r0              ;267
000128  fbb1f3f0          UDIV     r3,r1,r0              ;267
00012c  fb001013          MLS      r0,r0,r3,r1           ;267
000130  4959              LDR      r1,|L1.664|
000132  7008              STRB     r0,[r1,#0]            ;267
000134  68a0              LDR      r0,[r4,#8]            ;268  ; dctime
000136  4959              LDR      r1,|L1.668|
000138  fbb0f0f2          UDIV     r0,r0,r2              ;268
00013c  7008              STRB     r0,[r1,#0]            ;268
00013e  edd50a00          VLDR     s1,[r5,#0]            ;269
000142  ee600a88          VMUL.F32 s1,s1,s16             ;269
000146  ee801aa8          VDIV.F32 s2,s1,s17             ;269
00014a  edd40a03          VLDR     s1,[r4,#0xc]          ;269
00014e  ee710a20          VADD.F32 s1,s2,s1              ;269
000152  edc40a03          VSTR     s1,[r4,#0xc]          ;269
000156  ed840a04          VSTR     s0,[r4,#0x10]         ;271
                  |L1.346|
00015a  e780              B        |L1.94|
00015c  f8981000          LDRB     r1,[r8,#0]            ;282  ; load_sw
000160  2901              CMP      r1,#1                 ;282
000162  d002              BEQ      |L1.362|
000164  ed840a03          VSTR     s0,[r4,#0xc]          ;298
000168  e779              B        |L1.94|
                  |L1.362|
00016a  7800              LDRB     r0,[r0,#0]            ;284  ; alert_flag
00016c  2801              CMP      r0,#1                 ;284
00016e  d110              BNE      |L1.402|
000170  7820              LDRB     r0,[r4,#0]            ;286  ; calert
000172  1c40              ADDS     r0,r0,#1              ;286
000174  7020              STRB     r0,[r4,#0]            ;286
000176  7820              LDRB     r0,[r4,#0]            ;287  ; calert
000178  2803              CMP      r0,#3                 ;287
00017a  d10a              BNE      |L1.402|
00017c  4848              LDR      r0,|L1.672|
00017e  7006              STRB     r6,[r0,#0]            ;289
000180  f44f4100          MOV      r1,#0x8000            ;290
000184  4847              LDR      r0,|L1.676|
000186  f7fffffe          BL       GPIO_SetBits
00018a  703e              STRB     r6,[r7,#0]            ;291
00018c  f8886000          STRB     r6,[r8,#0]            ;292
000190  7026              STRB     r6,[r4,#0]            ;293
                  |L1.402|
000192  ed950a00          VLDR     s0,[r5,#0]            ;296
000196  ee200a08          VMUL.F32 s0,s0,s16             ;296
00019a  eec00a28          VDIV.F32 s1,s0,s17             ;296
00019e  ed940a03          VLDR     s0,[r4,#0xc]          ;296
0001a2  ee300a80          VADD.F32 s0,s1,s0              ;296
0001a6  ed840a03          VSTR     s0,[r4,#0xc]          ;296
0001aa  e758              B        |L1.94|
0001ac  7838              LDRB     r0,[r7,#0]            ;303  ; mode_sw
0001ae  2803              CMP      r0,#3                 ;303
0001b0  d118              BNE      |L1.484|
0001b2  7810              LDRB     r0,[r2,#0]            ;305  ; pow_sw
0001b4  2801              CMP      r0,#1                 ;305
0001b6  d003              BEQ      |L1.448|
0001b8  7838              LDRB     r0,[r7,#0]            ;308  ; mode_sw
0001ba  2803              CMP      r0,#3                 ;308
0001bc  d00d              BEQ      |L1.474|
0001be  e00f              B        |L1.480|
                  |L1.448|
0001c0  edd30a00          VLDR     s1,[r3,#0]            ;307
0001c4  ee201a88          VMUL.F32 s2,s1,s16             ;307
0001c8  eec10a28          VDIV.F32 s1,s2,s17             ;307
0001cc  ed941a03          VLDR     s2,[r4,#0xc]          ;307
0001d0  ee700a81          VADD.F32 s1,s1,s2              ;307
0001d4  edc40a03          VSTR     s1,[r4,#0xc]          ;307
0001d8  e004              B        |L1.484|
                  |L1.474|
0001da  7808              LDRB     r0,[r1,#0]            ;308  ; cdc_sw
0001dc  2801              CMP      r0,#1                 ;308
0001de  d00b              BEQ      |L1.504|
                  |L1.480|
0001e0  ed840a03          VSTR     s0,[r4,#0xc]          ;313
                  |L1.484|
0001e4  7838              LDRB     r0,[r7,#0]            ;317  ; mode_sw
0001e6  2802              CMP      r0,#2                 ;317
0001e8  d190              BNE      |L1.268|
0001ea  f8980000          LDRB     r0,[r8,#0]            ;319  ; load_sw
0001ee  2801              CMP      r0,#1                 ;319
0001f0  d00f              BEQ      |L1.530|
0001f2  ed840a03          VSTR     s0,[r4,#0xc]          ;323
0001f6  e732              B        |L1.94|
                  |L1.504|
0001f8  edd30a00          VLDR     s1,[r3,#0]            ;310
0001fc  ee600a88          VMUL.F32 s1,s1,s16             ;310
000200  ee801aa8          VDIV.F32 s2,s1,s17             ;310
000204  edd40a03          VLDR     s1,[r4,#0xc]          ;310
000208  ee710a20          VADD.F32 s1,s2,s1              ;310
00020c  edc40a03          VSTR     s1,[r4,#0xc]          ;310
000210  e7e8              B        |L1.484|
                  |L1.530|
000212  ed950a00          VLDR     s0,[r5,#0]            ;321
000216  ee200a08          VMUL.F32 s0,s0,s16             ;321
00021a  eec00a28          VDIV.F32 s1,s0,s17             ;321
00021e  ed940a03          VLDR     s0,[r4,#0xc]          ;321
000222  ee300a80          VADD.F32 s0,s1,s0              ;321
000226  ed840a03          VSTR     s0,[r4,#0xc]          ;321
00022a  e718              B        |L1.94|
00022c  e7ff              B        |L1.558|
                  |L1.558|
00022e  491e              LDR      r1,|L1.680|
000230  7809              LDRB     r1,[r1,#0]            ;329  ; oct_sw
000232  2901              CMP      r1,#1                 ;329
000234  d191              BNE      |L1.346|
000236  7800              LDRB     r0,[r0,#0]            ;331  ; alert_flag
000238  2801              CMP      r0,#1                 ;331
00023a  d18e              BNE      |L1.346|
00023c  7820              LDRB     r0,[r4,#0]            ;333  ; calert
00023e  1c40              ADDS     r0,r0,#1              ;333
000240  7020              STRB     r0,[r4,#0]            ;333
000242  7820              LDRB     r0,[r4,#0]            ;334  ; calert
000244  2803              CMP      r0,#3                 ;334
000246  d188              BNE      |L1.346|
000248  4918              LDR      r1,|L1.684|
00024a  2001              MOVS     r0,#1                 ;336
00024c  7008              STRB     r0,[r1,#0]            ;336
00024e  7026              STRB     r6,[r4,#0]            ;337
000250  e705              B        |L1.94|
;;;349    
                          ENDP

000252  0000              DCW      0x0000
                  |L1.596|
                          DCD      0x40000400
                  |L1.600|
                          DCD      page_sw
                  |L1.604|
                          DCD      pow_sw
                  |L1.608|
                          DCD      DISS_POW_Current
                  |L1.612|
                          DCD      DISS_Current
                  |L1.616|
                          DCD      alert_flag
                  |L1.620|
                          DCD      cdc_sw
                  |L1.624|
                          DCD      load_sw
                  |L1.628|
                          DCD      mode_sw
                  |L1.632|
000278  447a0000          DCFS     0x447a0000 ; 1000
                  |L1.636|
00027c  45610000          DCFS     0x45610000 ; 3600
                  |L1.640|
000280  00000000          DCFS     0x00000000 ; 0
                  |L1.644|
                          DCD      ||.data||
                  |L1.648|
                          DCD      second
                  |L1.652|
                          DCD      minute
                  |L1.656|
                          DCD      hour
                  |L1.660|
                          DCD      second1
                  |L1.664|
                          DCD      minute1
                  |L1.668|
                          DCD      hour1
                  |L1.672|
                          DCD      t_onoff
                  |L1.676|
                          DCD      0x40020000
                  |L1.680|
                          DCD      oct_sw
                  |L1.684|
                          DCD      ocstop

                          AREA ||i.TIM3_Int_Init||, CODE, READONLY, ALIGN=2

                  TIM3_Int_Init PROC
;;;179    //?o???¡¦??? 3!
;;;180    void TIM3_Int_Init(u16 arr,u16 psc)
000000  b57f              PUSH     {r0-r6,lr}
;;;181    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;182        TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;
;;;183        NVIC_InitTypeDef NVIC_InitStructure;
;;;184        
;;;185        RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3,ENABLE); //¨´?? TIM3 ??
000006  2101              MOVS     r1,#1
000008  2002              MOVS     r0,#2
00000a  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;186        TIM_TimeBaseInitStructure.TIM_Period = arr; //??????
00000e  9402              STR      r4,[sp,#8]
;;;187        TIM_TimeBaseInitStructure.TIM_Prescaler=psc; //?????
000010  f8ad5004          STRH     r5,[sp,#4]
;;;188        TIM_TimeBaseInitStructure.TIM_CounterMode=TIM_CounterMode_Up; //§Ó?????
000014  2000              MOVS     r0,#0
000016  f8ad0006          STRH     r0,[sp,#6]
;;;189        TIM_TimeBaseInitStructure.TIM_ClockDivision=TIM_CKD_DIV1;
00001a  f8ad000c          STRH     r0,[sp,#0xc]
;;;190        TIM_TimeBaseInit(TIM3,&TIM_TimeBaseInitStructure);// ¨²?????? TIM3
00001e  4c0e              LDR      r4,|L2.88|
000020  a901              ADD      r1,sp,#4
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       TIM_TimeBaseInit
;;;191        TIM_ITConfig(TIM3,TIM_IT_Update,ENABLE); //?????? 3 ?§ä??
000028  2201              MOVS     r2,#1
00002a  4611              MOV      r1,r2
00002c  4620              MOV      r0,r4
00002e  f7fffffe          BL       TIM_ITConfig
;;;192        NVIC_InitStructure.NVIC_IRQChannel=TIM3_IRQn; //??? 3 ??
000032  211d              MOVS     r1,#0x1d
000034  f88d1000          STRB     r1,[sp,#0]
;;;193        NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=0x01; //????? 1
000038  2101              MOVS     r1,#1
00003a  f88d1001          STRB     r1,[sp,#1]
;;;194        NVIC_InitStructure.NVIC_IRQChannelSubPriority=0x03; //§¾???? 3
00003e  2203              MOVS     r2,#3
000040  f88d2002          STRB     r2,[sp,#2]
;;;195        NVIC_InitStructure.NVIC_IRQChannelCmd=ENABLE;
000044  f88d1003          STRB     r1,[sp,#3]
;;;196        NVIC_Init(&NVIC_InitStructure);// ¨¹??? NVIC
000048  4668              MOV      r0,sp
00004a  f7fffffe          BL       NVIC_Init
;;;197        TIM_Cmd(TIM3,ENABLE); //Y????? 3
00004e  2101              MOVS     r1,#1
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       TIM_Cmd
;;;198    }
000056  bd7f              POP      {r0-r6,pc}
;;;199    //??? 3 ??????
                          ENDP

                  |L2.88|
                          DCD      0x40000400

                          AREA ||i.TIM4_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM4_IRQHandler PROC
;;;62     //??? 3 ??????
;;;63     void TIM4_IRQHandler(void)
000000  b570              PUSH     {r4-r6,lr}
;;;64     {
;;;65         static vu16 resetcount;
;;;66         static vu8 read1963;
;;;67         static vu16 scancount;
;;;68     //     static float crec1,crec2;
;;;69         
;;;70         if(TIM_GetITStatus(TIM4,TIM_IT_Update)==SET) //????
000002  4c2f              LDR      r4,|L3.192|
000004  2101              MOVS     r1,#1
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       TIM_GetITStatus
00000c  2801              CMP      r0,#1
00000e  d155              BNE      |L3.188|
;;;71         {
;;;72             TIM_ClearITPendingBit(TIM4,TIM_IT_Update); //Çå³ýÖÐ¶Ï±êÖ¾Î»
000010  2101              MOVS     r1,#1
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       TIM_ClearITPendingBit
;;;73             
;;;74             if(page_sw != face_starter)
000018  4d2a              LDR      r5,|L3.196|
00001a  7828              LDRB     r0,[r5,#0]  ; page_sw
;;;75             {
;;;76                  if(resetflag == 1)
;;;77                  {
;;;78                      if(resetcount == 3000)
;;;79                      {
;;;80     //                     sLCD_GPIO_Config();
;;;81                          sLCD_Init();
;;;82     //                     sLCD_WR_REG(0xf1);
;;;83                          GUI_Init();
;;;84                          if(page_sw == face_menu)
;;;85                          {
;;;86                              ResetPow();
;;;87                          }else if(page_sw == face_cdc){
;;;88                              ResetCDC();
;;;89                          }else if(page_sw == face_r){
;;;90                              ResetR();
;;;91                          }else if(page_sw == face_load){
;;;92                              ResetLoad();
;;;93                          }else if(page_sw == face_graph){
;;;94                              ResetG();
;;;95                          }else if(page_sw == face_set){
;;;96                              ResetSET();
;;;97                          }
;;;98     //                     resdone = 1;
;;;99     //                     resetflag = 0;
;;;100                         resetcount = 0;
00001c  2600              MOVS     r6,#0
00001e  2806              CMP      r0,#6                 ;74
000020  d034              BEQ      |L3.140|
000022  4c29              LDR      r4,|L3.200|
000024  7860              LDRB     r0,[r4,#1]            ;76  ; resetflag
000026  2801              CMP      r0,#1                 ;76
000028  d130              BNE      |L3.140|
00002a  8860              LDRH     r0,[r4,#2]            ;78  ; resetcount
00002c  f5a06130          SUB      r1,r0,#0xb00          ;78
000030  39b8              SUBS     r1,r1,#0xb8           ;78
000032  d128              BNE      |L3.134|
000034  f7fffffe          BL       sLCD_Init
000038  f7fffffe          BL       GUI_Init
00003c  7828              LDRB     r0,[r5,#0]            ;84  ; page_sw
00003e  2802              CMP      r0,#2                 ;84
000040  d00e              BEQ      |L3.96|
000042  7828              LDRB     r0,[r5,#0]            ;87  ; page_sw
000044  2801              CMP      r0,#1                 ;87
000046  d00e              BEQ      |L3.102|
000048  7828              LDRB     r0,[r5,#0]            ;89  ; page_sw
00004a  2803              CMP      r0,#3                 ;89
00004c  d00e              BEQ      |L3.108|
00004e  7828              LDRB     r0,[r5,#0]            ;91  ; page_sw
000050  2804              CMP      r0,#4                 ;91
000052  d00e              BEQ      |L3.114|
000054  7828              LDRB     r0,[r5,#0]            ;93  ; page_sw
000056  b178              CBZ      r0,|L3.120|
000058  7828              LDRB     r0,[r5,#0]            ;95  ; page_sw
00005a  2805              CMP      r0,#5                 ;95
00005c  d00f              BEQ      |L3.126|
00005e  e010              B        |L3.130|
                  |L3.96|
000060  f7fffffe          BL       ResetPow
000064  e00d              B        |L3.130|
                  |L3.102|
000066  f7fffffe          BL       ResetCDC
00006a  e00a              B        |L3.130|
                  |L3.108|
00006c  f7fffffe          BL       ResetR
000070  e007              B        |L3.130|
                  |L3.114|
000072  f7fffffe          BL       ResetLoad
000076  e004              B        |L3.130|
                  |L3.120|
000078  f7fffffe          BL       ResetG
00007c  e001              B        |L3.130|
                  |L3.126|
00007e  f7fffffe          BL       ResetSET
                  |L3.130|
000082  8066              STRH     r6,[r4,#2]
000084  e002              B        |L3.140|
                  |L3.134|
;;;101                     }else{
;;;102                         resetcount++;
000086  8860              LDRH     r0,[r4,#2]  ; resetcount
000088  1c40              ADDS     r0,r0,#1
00008a  8060              STRH     r0,[r4,#2]
                  |L3.140|
;;;103                     }                
;;;104                 }
;;;105             }
;;;106             
;;;107            if(oct_sw == oct_on)
00008c  4c0f              LDR      r4,|L3.204|
00008e  7820              LDRB     r0,[r4,#0]  ; oct_sw
000090  2801              CMP      r0,#1
000092  d113              BNE      |L3.188|
;;;108            {
;;;109                OC_CHECK();
000094  f7fffffe          BL       OC_CHECK
;;;110                if(oct_sw == oct_on)
000098  7820              LDRB     r0,[r4,#0]  ; oct_sw
00009a  2801              CMP      r0,#1
00009c  d10e              BNE      |L3.188|
;;;111                {
;;;112                    stepcount ++;
00009e  4c0c              LDR      r4,|L3.208|
0000a0  8820              LDRH     r0,[r4,#0]  ; stepcount
0000a2  1c40              ADDS     r0,r0,#1
0000a4  8020              STRH     r0,[r4,#0]
;;;113                    if(stepcount == steptime*10)
0000a6  480b              LDR      r0,|L3.212|
0000a8  8800              LDRH     r0,[r0,#0]  ; steptime
0000aa  8821              LDRH     r1,[r4,#0]  ; stepcount
0000ac  eb000080          ADD      r0,r0,r0,LSL #2
0000b0  ebb10f40          CMP      r1,r0,LSL #1
0000b4  d102              BNE      |L3.188|
;;;114                    {
;;;115                        OC_ADD();
0000b6  f7fffffe          BL       OC_ADD
;;;116                        stepcount = 0;
0000ba  8026              STRH     r6,[r4,#0]
                  |L3.188|
;;;117                    }
;;;118                }
;;;119            }
;;;120    //         if(page_sw == face_load)
;;;121    //         {
;;;122    //             if(c_rec == 1)
;;;123    //             {
;;;124    //                 crec2 = crec1;
;;;125    //                 crec1 = DISS_Current;
;;;126    //                 if(crec2 > crec1)
;;;127    //                 {
;;;128    //                     watch = crec2;
;;;129    //                     c_rec = 0;
;;;130    //                     crec2 = crec1 = 0;
;;;131    //                 }
;;;132    //             }
;;;133    //         }
;;;134        }    
;;;135    }
0000bc  bd70              POP      {r4-r6,pc}
;;;136    
                          ENDP

0000be  0000              DCW      0x0000
                  |L3.192|
                          DCD      0x40000800
                  |L3.196|
                          DCD      page_sw
                  |L3.200|
                          DCD      ||.data||
                  |L3.204|
                          DCD      oct_sw
                  |L3.208|
                          DCD      stepcount
                  |L3.212|
                          DCD      steptime

                          AREA ||i.TIM4_Int_Init||, CODE, READONLY, ALIGN=2

                  TIM4_Int_Init PROC
;;;42     //?o???¡¦??? 3!
;;;43     void TIM4_Int_Init(u16 arr,u16 psc)
000000  b57f              PUSH     {r0-r6,lr}
;;;44     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;45         TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;
;;;46         NVIC_InitTypeDef NVIC_InitStructure;
;;;47         
;;;48         RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4,ENABLE); //¨´?? TIM3 ??
000006  2101              MOVS     r1,#1
000008  2004              MOVS     r0,#4
00000a  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;49         TIM_TimeBaseInitStructure.TIM_Period = arr; //??????
00000e  9402              STR      r4,[sp,#8]
;;;50         TIM_TimeBaseInitStructure.TIM_Prescaler=psc; //?????
000010  f8ad5004          STRH     r5,[sp,#4]
;;;51         TIM_TimeBaseInitStructure.TIM_CounterMode=TIM_CounterMode_Up; //§Ó?????
000014  2000              MOVS     r0,#0
000016  f8ad0006          STRH     r0,[sp,#6]
;;;52         TIM_TimeBaseInitStructure.TIM_ClockDivision=TIM_CKD_DIV1;
00001a  f8ad000c          STRH     r0,[sp,#0xc]
;;;53         TIM_TimeBaseInit(TIM4,&TIM_TimeBaseInitStructure);// ¨²?????? TIM3
00001e  4c0e              LDR      r4,|L4.88|
000020  a901              ADD      r1,sp,#4
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       TIM_TimeBaseInit
;;;54         TIM_ITConfig(TIM4,TIM_IT_Update,ENABLE); //?????? 3 ?§ä??
000028  2201              MOVS     r2,#1
00002a  4611              MOV      r1,r2
00002c  4620              MOV      r0,r4
00002e  f7fffffe          BL       TIM_ITConfig
;;;55         NVIC_InitStructure.NVIC_IRQChannel=TIM4_IRQn; //??? 3 ??
000032  211e              MOVS     r1,#0x1e
000034  f88d1000          STRB     r1,[sp,#0]
;;;56         NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=0x01; //????? 1
000038  2101              MOVS     r1,#1
00003a  f88d1001          STRB     r1,[sp,#1]
;;;57         NVIC_InitStructure.NVIC_IRQChannelSubPriority=0x03; //§¾???? 3
00003e  2203              MOVS     r2,#3
000040  f88d2002          STRB     r2,[sp,#2]
;;;58         NVIC_InitStructure.NVIC_IRQChannelCmd=ENABLE;
000044  f88d1003          STRB     r1,[sp,#3]
;;;59         NVIC_Init(&NVIC_InitStructure);// ¨¹??? NVIC
000048  4668              MOV      r0,sp
00004a  f7fffffe          BL       NVIC_Init
;;;60         TIM_Cmd(TIM4,ENABLE); //Y????? 3
00004e  2101              MOVS     r1,#1
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       TIM_Cmd
;;;61     }
000056  bd7f              POP      {r0-r6,pc}
;;;62     //??? 3 ??????
                          ENDP

                  |L4.88|
                          DCD      0x40000800

                          AREA ||i.TIM6_Config||, CODE, READONLY, ALIGN=2

                  TIM6_Config PROC
;;;136    
;;;137    void TIM6_Config(void)
000000  b53e              PUSH     {r1-r5,lr}
;;;138    {
;;;139    	TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;140    	/* TIM3 ??? ---------------------------------------------------
;;;141       TIM3 ????(TIM3CLK) ??? APB2 ?? (PCLK2)    
;;;142        => TIM3CLK = PCLK2 = SystemCoreClock
;;;143       TIM3CLK = SystemCoreClock, Prescaler = 0, TIM3 counter clock = SystemCoreClock
;;;144       SystemCoreClock ?48 MHz */
;;;145      /* TIM16 ???? */
;;;146      RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM6,ENABLE);
000002  2101              MOVS     r1,#1
000004  2010              MOVS     r0,#0x10
000006  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;147    	
;;;148      /* Time ??????*/
;;;149      TIM_TimeBaseStructure.TIM_Prescaler = 4800-1;//?????
00000a  f24120bf          MOV      r0,#0x12bf
00000e  f8ad0000          STRH     r0,[sp,#0]
;;;150      TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  /* Time ????????????*/
000012  2000              MOVS     r0,#0
000014  f8ad0002          STRH     r0,[sp,#2]
;;;151      TIM_TimeBaseStructure.TIM_Period = 5000;
000018  f2413188          MOV      r1,#0x1388
00001c  9101              STR      r1,[sp,#4]
;;;152      TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;
00001e  f8ad0008          STRH     r0,[sp,#8]
;;;153    //  TIM_TimeBaseStructure.TIM_RepetitionCounter = 0;
;;;154    
;;;155      TIM_TimeBaseInit(TIM6,&TIM_TimeBaseStructure);
000022  4c0a              LDR      r4,|L5.76|
000024  4669              MOV      r1,sp
000026  4620              MOV      r0,r4
000028  f7fffffe          BL       TIM_TimeBaseInit
;;;156    	TIM_ITConfig(TIM6,TIM_IT_Update,ENABLE);//??????§ä??
00002c  2201              MOVS     r2,#1
00002e  4611              MOV      r1,r2
000030  4620              MOV      r0,r4
000032  f7fffffe          BL       TIM_ITConfig
;;;157    	TIM_SetAutoreload(TIM6, 0xFF);//??PWM??¨º
000036  21ff              MOVS     r1,#0xff
000038  4620              MOV      r0,r4
00003a  f7fffffe          BL       TIM_SetAutoreload
;;;158    	TIM6_NVIC_Config();
00003e  f7fffffe          BL       TIM6_NVIC_Config
;;;159      /* TIM3 ?????*/
;;;160      TIM_Cmd(TIM6, ENABLE);
000042  2101              MOVS     r1,#1
000044  4620              MOV      r0,r4
000046  f7fffffe          BL       TIM_Cmd
;;;161    }
00004a  bd3e              POP      {r1-r5,pc}
;;;162    /***********************************************************************/
                          ENDP

                  |L5.76|
                          DCD      0x40001000

                          AREA ||i.TIM6_NVIC_Config||, CODE, READONLY, ALIGN=1

                  TIM6_NVIC_Config PROC
;;;162    /***********************************************************************/
;;;163    static void TIM6_NVIC_Config(void)
000000  b508              PUSH     {r3,lr}
;;;164    {
;;;165    	NVIC_InitTypeDef NVIC_InitStructure; 
;;;166    	
;;;167    	/* Enable the USART1 Interrupt */
;;;168    	NVIC_InitStructure.NVIC_IRQChannel = TIM6_DAC_IRQn;	 
000002  2036              MOVS     r0,#0x36
000004  f88d0000          STRB     r0,[sp,#0]
;;;169    	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x01;
000008  2001              MOVS     r0,#1
00000a  f88d0001          STRB     r0,[sp,#1]
;;;170    	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x03;
00000e  2103              MOVS     r1,#3
000010  f88d1002          STRB     r1,[sp,#2]
;;;171    	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000014  f88d0003          STRB     r0,[sp,#3]
;;;172    	NVIC_Init(&NVIC_InitStructure);
000018  4668              MOV      r0,sp
00001a  f7fffffe          BL       NVIC_Init
;;;173    }
00001e  bd08              POP      {r3,pc}
;;;174    
                          ENDP


                          AREA ||.data||, DATA, ALIGN=2

                  calert
000000  00                DCB      0x00
                  resetflag
000001  00                DCB      0x00
                  resetcount
000002  0000              DCB      0x00,0x00
                  ctime
                          DCD      0x00000000
                  dctime
                          DCD      0x00000000
                  bc_raw
                          DCD      0x00000000
                  cbc_raw
                          DCD      0x00000000
                  c_sum
                          DCD      0x00000000

                          AREA ||area_number.10||, DATA, ALIGN=1

                          EXPORTAS ||area_number.10||, ||.data||
                  battery_c
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.11||, DATA, ALIGN=0

                          EXPORTAS ||area_number.11||, ||.data||
                  resdone
000000  00                DCB      0x00

                          AREA ||area_number.12||, DATA, ALIGN=2

                          EXPORTAS ||area_number.12||, ||.data||
                  watch
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\drive\\TIM6.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_TIM6_c_3a0b03ec____REV16|
#line 114 "D:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_TIM6_c_3a0b03ec____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_TIM6_c_3a0b03ec____REVSH|
#line 128
|__asm___6_TIM6_c_3a0b03ec____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
