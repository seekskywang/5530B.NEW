; generated by ARM C/C++ Compiler, 4.1 [Build 894]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\Output\tim6.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\Output\tim6.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -ID:\Keil\ARM\RV31\Inc -ID:\Keil\ARM\CMSIS\Include -ID:\Keil\ARM\Inc\ST\STM32F4xx -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\Output\tim6.crf ..\drive\TIM6.c]
                          THUMB

                          AREA ||i.TIM3_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM3_IRQHandler PROC
;;;191    //??? 3 ??????
;;;192    void TIM3_IRQHandler(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;193    {
;;;194        static vu8 calert = 0;
;;;195        static vu16 resetcount;
;;;196        static vu8 read1963;
;;;197        static vu16 scancount;
;;;198        
;;;199        if(TIM_GetITStatus(TIM3,TIM_IT_Update)==SET) //????
000004  4c4c              LDR      r4,|L1.312|
000006  2101              MOVS     r1,#1
000008  ed2d8b02          VPUSH    {d8}                  ;193
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       TIM_GetITStatus
000012  2801              CMP      r0,#1
000014  d12c              BNE      |L1.112|
;;;200        {
;;;201            TIM_ClearITPendingBit(TIM3,TIM_IT_Update); //??????¦Ë
000016  2101              MOVS     r1,#1
000018  4620              MOV      r0,r4
00001a  f7fffffe          BL       TIM_ClearITPendingBit
;;;202    //         if(page_sw != face_starter)
;;;203    //         {
;;;204    //              if(resetflag == 1)
;;;205    //              {
;;;206    //                  if(resetcount == 1)
;;;207    //                  {
;;;208    //                      LCD_Initializtion();
;;;209    //                      sLCD_WR_REG(0xf1);
;;;210    //                      GUI_Init();
;;;211    //                      if(page_sw == face_menu)
;;;212    //                      {
;;;213    //                          ResetPow();
;;;214    //                      }else if(page_sw == face_cdc){
;;;215    //                          ResetCDC();
;;;216    //                      }else if(page_sw == face_r){
;;;217    //                          ResetR();
;;;218    //                      }else if(page_sw == face_load){
;;;219    //                          ResetLoad();
;;;220    //                      }else if(page_sw == face_graph){
;;;221    //                          ResetG();
;;;222    //                      }else if(page_sw == face_set){
;;;223    //                          ResetSET();
;;;224    //                      }
;;;225    //                      resdone = 1;
;;;226    // //                     resetflag = 0;
;;;227    //                      resetcount = 0;
;;;228    //                  }else{
;;;229    //                      resetcount++;
;;;230    //                  }                
;;;231    //              }
;;;232    //          }
;;;233            switch(page_sw)
00001e  4847              LDR      r0,|L1.316|
000020  7802              LDRB     r2,[r0,#0]  ; page_sw
;;;234            {
;;;235                case face_menu:
;;;236                {
;;;237                    if(pow_sw == pow_on)
000022  4b47              LDR      r3,|L1.320|
;;;238                    {
;;;239                        bc_raw += DISS_POW_Current * 1000 * 1/3600;
000024  4847              LDR      r0,|L1.324|
;;;240                    }else{
;;;241                        bc_raw = 0;
;;;242                    }
;;;243                }break;
;;;244                case face_cdc:
;;;245                {
;;;246                    if(mode_sw == mode_pow && cdc_sw == cdc_on)
;;;247                    {
;;;248                        bc_raw += DISS_POW_Current * 1000 * 1/3600;
;;;249                    }else if(cdc_sw == cdc_off){
;;;250                        bc_raw = 0;
;;;251                    }
;;;252                }break;
;;;253                case face_load:
;;;254                {
;;;255                    if(load_sw == load_on)
;;;256                    {
;;;257                        if(alert_flag == 1)
000026  f8dfc120          LDR      r12,|L1.328|
;;;258                        {
;;;259                            calert ++;
;;;260                            if(calert == 3)
;;;261                            {
;;;262                                t_onoff = 0;
;;;263                                GPIO_SetBits(GPIOA,GPIO_Pin_15);//????OFF
;;;264                                mode_sw = 0;
;;;265                                load_sw = load_off;
;;;266                                calert = 0;                                
;;;267                            }
;;;268                        }
;;;269                        bc_raw += DISS_Current * 1000 * 1/3600;
00002a  f8df9120          LDR      r9,|L1.332|
00002e  4948              LDR      r1,|L1.336|
000030  4e48              LDR      r6,|L1.340|
000032  4d49              LDR      r5,|L1.344|
000034  f04f0800          MOV      r8,#0                 ;262
000038  ed9f8a48          VLDR     s16,|L1.348|
00003c  eddf8a48          VLDR     s17,|L1.352|
000040  ed9f0a48          VLDR     s0,|L1.356|
000044  4c48              LDR      r4,|L1.360|
000046  2a05              CMP      r2,#5                 ;233
000048  d212              BCS      |L1.112|
00004a  e8dff002          TBB      [pc,r2]               ;233
00004e  3a09              DCB      0x3a,0x09
000050  03611500          DCB      0x03,0x61,0x15,0x00
000054  7819              LDRB     r1,[r3,#0]            ;237  ; pow_sw
000056  2901              CMP      r1,#1                 ;237
000058  d147              BNE      |L1.234|
                  |L1.90|
00005a  ed900a00          VLDR     s0,[r0,#0]            ;239
00005e  e027              B        |L1.176|
000060  782a              LDRB     r2,[r5,#0]            ;246  ; mode_sw
000062  2a03              CMP      r2,#3                 ;246
000064  d102              BNE      |L1.108|
000066  780a              LDRB     r2,[r1,#0]            ;246  ; cdc_sw
000068  2a01              CMP      r2,#1                 ;246
00006a  d0f6              BEQ      |L1.90|
                  |L1.108|
00006c  7808              LDRB     r0,[r1,#0]            ;249  ; cdc_sw
00006e  b338              CBZ      r0,|L1.192|
                  |L1.112|
;;;270                    }else{
;;;271                        bc_raw = 0;
;;;272                    }
;;;273                }break;
;;;274                case face_graph:
;;;275                {
;;;276                    if(mode_sw == mode_pow)
;;;277                    {
;;;278                        if(pow_sw == pow_on)
;;;279                        {
;;;280                            bc_raw += DISS_POW_Current * 1000 * 1/3600;
;;;281                        }else if(mode_sw == mode_pow && cdc_sw == cdc_on)
;;;282                        {
;;;283                            bc_raw += DISS_POW_Current * 1000 * 1/3600;
;;;284                        }
;;;285                        else{
;;;286                            bc_raw = 0;
;;;287                        }
;;;288                    }               
;;;289                    
;;;290                    if(mode_sw == mode_load)
;;;291                    {
;;;292                        if(load_sw == load_on)
;;;293                        {
;;;294                            bc_raw += DISS_Current * 1000 * 1/3600;
;;;295                        }else{
;;;296                            bc_raw = 0;
;;;297                        }
;;;298                    }
;;;299                }break;
;;;300                case face_r:
;;;301                {
;;;302                    if(oct_sw == oct_on)
;;;303                    {
;;;304                        if(alert_flag == 1)
;;;305                        {
;;;306                            calert ++;
;;;307                            if(calert == 3)
;;;308                            {
;;;309                                ocstop = 1;
;;;310                                calert = 0;
;;;311                            }
;;;312                        }
;;;313                    }
;;;314                }break;
;;;315            }
;;;316    //         GPIO_ResetBits(GPIOD,GPIO_Pin_12);
;;;317    //         TM1650_SET_LED(0x48,0x71);
;;;318    //         TM1650_SET_LED(0x68,0xF2);//PASS?
;;;319        }    
;;;320        
;;;321    }
000070  ecbd8b02          VPOP     {d8}
000074  e8bd87f0          POP      {r4-r10,pc}
000078  7830              LDRB     r0,[r6,#0]            ;255  ; load_sw
00007a  2801              CMP      r0,#1                 ;255
00007c  d135              BNE      |L1.234|
00007e  f89c0000          LDRB     r0,[r12,#0]           ;257  ; alert_flag
000082  2801              CMP      r0,#1                 ;257
000084  d141              BNE      |L1.266|
000086  7820              LDRB     r0,[r4,#0]            ;259  ; calert
000088  1c40              ADDS     r0,r0,#1              ;259
00008a  7020              STRB     r0,[r4,#0]            ;259
00008c  7820              LDRB     r0,[r4,#0]            ;260  ; calert
00008e  2803              CMP      r0,#3                 ;260
000090  d13b              BNE      |L1.266|
000092  4836              LDR      r0,|L1.364|
000094  f8808000          STRB     r8,[r0,#0]            ;262
000098  f44f4100          MOV      r1,#0x8000            ;263
00009c  4834              LDR      r0,|L1.368|
00009e  f7fffffe          BL       GPIO_SetBits
0000a2  f8858000          STRB     r8,[r5,#0]            ;264
0000a6  f8868000          STRB     r8,[r6,#0]            ;265
0000aa  f8848000          STRB     r8,[r4,#0]            ;266
0000ae  e02c              B        |L1.266|
                  |L1.176|
0000b0  ee200a08          VMUL.F32 s0,s0,s16             ;239
0000b4  eec00a28          VDIV.F32 s1,s0,s17             ;239
0000b8  ed940a01          VLDR     s0,[r4,#4]            ;239
0000bc  ee300a80          VADD.F32 s0,s1,s0              ;239
                  |L1.192|
0000c0  e013              B        |L1.234|
0000c2  782a              LDRB     r2,[r5,#0]            ;276  ; mode_sw
0000c4  2a03              CMP      r2,#3                 ;276
0000c6  d10a              BNE      |L1.222|
0000c8  781a              LDRB     r2,[r3,#0]            ;278  ; pow_sw
0000ca  2a01              CMP      r2,#1                 ;278
0000cc  d010              BEQ      |L1.240|
0000ce  782a              LDRB     r2,[r5,#0]            ;281  ; mode_sw
0000d0  2a03              CMP      r2,#3                 ;281
0000d2  d102              BNE      |L1.218|
0000d4  7809              LDRB     r1,[r1,#0]            ;281  ; cdc_sw
0000d6  2901              CMP      r1,#1                 ;281
0000d8  d00a              BEQ      |L1.240|
                  |L1.218|
0000da  ed840a01          VSTR     s0,[r4,#4]            ;286
                  |L1.222|
0000de  7828              LDRB     r0,[r5,#0]            ;290  ; mode_sw
0000e0  2802              CMP      r0,#2                 ;290
0000e2  d1c5              BNE      |L1.112|
0000e4  7830              LDRB     r0,[r6,#0]            ;292  ; load_sw
0000e6  2801              CMP      r0,#1                 ;292
0000e8  d00f              BEQ      |L1.266|
                  |L1.234|
0000ea  ed840a01          VSTR     s0,[r4,#4]            ;296
0000ee  e7bf              B        |L1.112|
                  |L1.240|
0000f0  edd00a00          VLDR     s1,[r0,#0]            ;283
0000f4  ee201a88          VMUL.F32 s2,s1,s16             ;283
0000f8  eec10a28          VDIV.F32 s1,s2,s17             ;283
0000fc  ed941a01          VLDR     s2,[r4,#4]            ;283
000100  ee700a81          VADD.F32 s1,s1,s2              ;283
000104  edc40a01          VSTR     s1,[r4,#4]            ;283
000108  e7e9              B        |L1.222|
                  |L1.266|
00010a  ed990a00          VLDR     s0,[r9,#0]            ;294
00010e  e7cf              B        |L1.176|
000110  4818              LDR      r0,|L1.372|
000112  7800              LDRB     r0,[r0,#0]            ;302  ; oct_sw
000114  2801              CMP      r0,#1                 ;302
000116  d1ab              BNE      |L1.112|
000118  f89c0000          LDRB     r0,[r12,#0]           ;304  ; alert_flag
00011c  2801              CMP      r0,#1                 ;304
00011e  d1a7              BNE      |L1.112|
000120  7820              LDRB     r0,[r4,#0]            ;306  ; calert
000122  1c40              ADDS     r0,r0,#1              ;306
000124  7020              STRB     r0,[r4,#0]            ;306
000126  7820              LDRB     r0,[r4,#0]            ;307  ; calert
000128  2803              CMP      r0,#3                 ;307
00012a  d1a1              BNE      |L1.112|
00012c  4912              LDR      r1,|L1.376|
00012e  2001              MOVS     r0,#1                 ;309
000130  7008              STRB     r0,[r1,#0]            ;309
000132  f8848000          STRB     r8,[r4,#0]            ;310
000136  e79b              B        |L1.112|
;;;322    
                          ENDP

                  |L1.312|
                          DCD      0x40000400
                  |L1.316|
                          DCD      page_sw
                  |L1.320|
                          DCD      pow_sw
                  |L1.324|
                          DCD      DISS_POW_Current
                  |L1.328|
                          DCD      alert_flag
                  |L1.332|
                          DCD      DISS_Current
                  |L1.336|
                          DCD      cdc_sw
                  |L1.340|
                          DCD      load_sw
                  |L1.344|
                          DCD      mode_sw
                  |L1.348|
00015c  447a0000          DCFS     0x447a0000 ; 1000
                  |L1.352|
000160  45610000          DCFS     0x45610000 ; 3600
                  |L1.356|
000164  00000000          DCFS     0x00000000 ; 0
                  |L1.360|
                          DCD      ||.data||
                  |L1.364|
                          DCD      t_onoff
                  |L1.368|
                          DCD      0x40020000
                  |L1.372|
                          DCD      oct_sw
                  |L1.376|
                          DCD      ocstop

                          AREA ||i.TIM3_Int_Init||, CODE, READONLY, ALIGN=2

                  TIM3_Int_Init PROC
;;;171    //?o???¡¦??? 3!
;;;172    void TIM3_Int_Init(u16 arr,u16 psc)
000000  b57f              PUSH     {r0-r6,lr}
;;;173    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;174        TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;
;;;175        NVIC_InitTypeDef NVIC_InitStructure;
;;;176        
;;;177        RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM3,ENABLE); //¨´?? TIM3 ??
000006  2101              MOVS     r1,#1
000008  2002              MOVS     r0,#2
00000a  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;178        TIM_TimeBaseInitStructure.TIM_Period = arr; //??????
;;;179        TIM_TimeBaseInitStructure.TIM_Prescaler=psc; //?????
00000e  9401              STR      r4,[sp,#4]
;;;180        TIM_TimeBaseInitStructure.TIM_CounterMode=TIM_CounterMode_Up; //§Ó?????
000010  2000              MOVS     r0,#0
000012  f8ad5000          STRH     r5,[sp,#0]            ;179
;;;181        TIM_TimeBaseInitStructure.TIM_ClockDivision=TIM_CKD_DIV1;
;;;182        TIM_TimeBaseInit(TIM3,&TIM_TimeBaseInitStructure);// ¨²?????? TIM3
000016  4c10              LDR      r4,|L2.88|
000018  f8ad0002          STRH     r0,[sp,#2]            ;180
00001c  f8ad0008          STRH     r0,[sp,#8]            ;181
000020  4669              MOV      r1,sp
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       TIM_TimeBaseInit
;;;183        TIM_ITConfig(TIM3,TIM_IT_Update,ENABLE); //?????? 3 ?§ä??
000028  2201              MOVS     r2,#1
00002a  4611              MOV      r1,r2
00002c  4620              MOV      r0,r4
00002e  f7fffffe          BL       TIM_ITConfig
;;;184        NVIC_InitStructure.NVIC_IRQChannel=TIM3_IRQn; //??? 3 ??
000032  201d              MOVS     r0,#0x1d
000034  f88d000c          STRB     r0,[sp,#0xc]
;;;185        NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=0x01; //????? 1
000038  2101              MOVS     r1,#1
00003a  f88d100d          STRB     r1,[sp,#0xd]
;;;186        NVIC_InitStructure.NVIC_IRQChannelSubPriority=0x03; //§¾???? 3
00003e  2203              MOVS     r2,#3
000040  f88d200e          STRB     r2,[sp,#0xe]
;;;187        NVIC_InitStructure.NVIC_IRQChannelCmd=ENABLE;
000044  f88d100f          STRB     r1,[sp,#0xf]
;;;188        NVIC_Init(&NVIC_InitStructure);// ¨¹??? NVIC
000048  a803              ADD      r0,sp,#0xc
00004a  f7fffffe          BL       NVIC_Init
;;;189        TIM_Cmd(TIM3,ENABLE); //Y????? 3
00004e  2101              MOVS     r1,#1
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       TIM_Cmd
;;;190    }
000056  bd7f              POP      {r0-r6,pc}
;;;191    //??? 3 ??????
                          ENDP

                  |L2.88|
                          DCD      0x40000400

                          AREA ||i.TIM4_IRQHandler||, CODE, READONLY, ALIGN=2

                  TIM4_IRQHandler PROC
;;;54     //??? 3 ??????
;;;55     void TIM4_IRQHandler(void)
000000  b570              PUSH     {r4-r6,lr}
;;;56     {
;;;57         static vu16 resetcount;
;;;58         static vu8 read1963;
;;;59         static vu16 scancount;
;;;60     //     static float crec1,crec2;
;;;61         
;;;62         if(TIM_GetITStatus(TIM4,TIM_IT_Update)==SET) //????
000002  4c2f              LDR      r4,|L3.192|
000004  2101              MOVS     r1,#1
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       TIM_GetITStatus
00000c  2801              CMP      r0,#1
00000e  d155              BNE      |L3.188|
;;;63         {
;;;64             TIM_ClearITPendingBit(TIM4,TIM_IT_Update); //Çå³ýÖÐ¶Ï±êÖ¾Î»
000010  2101              MOVS     r1,#1
000012  4620              MOV      r0,r4
000014  f7fffffe          BL       TIM_ClearITPendingBit
;;;65             
;;;66             if(page_sw != face_starter)
000018  4e2a              LDR      r6,|L3.196|
00001a  7830              LDRB     r0,[r6,#0]  ; page_sw
;;;67             {
;;;68                  if(resetflag == 1)
;;;69                  {
;;;70                      if(resetcount == 3000)
;;;71                      {
;;;72     //                     sLCD_GPIO_Config();
;;;73                          sLCD_Init();
;;;74     //                     sLCD_WR_REG(0xf1);
;;;75                          GUI_Init();
;;;76                          if(page_sw == face_menu)
;;;77                          {
;;;78                              ResetPow();
;;;79                          }else if(page_sw == face_cdc){
;;;80                              ResetCDC();
;;;81                          }else if(page_sw == face_r){
;;;82                              ResetR();
;;;83                          }else if(page_sw == face_load){
;;;84                              ResetLoad();
;;;85                          }else if(page_sw == face_graph){
;;;86                              ResetG();
;;;87                          }else if(page_sw == face_set){
;;;88                              ResetSET();
;;;89                          }
;;;90     //                     resdone = 1;
;;;91     //                     resetflag = 0;
;;;92                          resetcount = 0;
00001c  2500              MOVS     r5,#0
00001e  2806              CMP      r0,#6                 ;66
000020  d034              BEQ      |L3.140|
000022  4c29              LDR      r4,|L3.200|
000024  7860              LDRB     r0,[r4,#1]            ;68  ; resetflag
000026  2801              CMP      r0,#1                 ;68
000028  d130              BNE      |L3.140|
00002a  8860              LDRH     r0,[r4,#2]            ;70  ; resetcount
00002c  f5a06130          SUB      r1,r0,#0xb00          ;70
000030  39b8              SUBS     r1,r1,#0xb8           ;70
000032  d128              BNE      |L3.134|
000034  f7fffffe          BL       sLCD_Init
000038  f7fffffe          BL       GUI_Init
00003c  7830              LDRB     r0,[r6,#0]            ;76  ; page_sw
00003e  2802              CMP      r0,#2                 ;76
000040  d00e              BEQ      |L3.96|
000042  7830              LDRB     r0,[r6,#0]            ;79  ; page_sw
000044  2801              CMP      r0,#1                 ;79
000046  d00e              BEQ      |L3.102|
000048  7830              LDRB     r0,[r6,#0]            ;81  ; page_sw
00004a  2803              CMP      r0,#3                 ;81
00004c  d00e              BEQ      |L3.108|
00004e  7830              LDRB     r0,[r6,#0]            ;83  ; page_sw
000050  2804              CMP      r0,#4                 ;83
000052  d00e              BEQ      |L3.114|
000054  7830              LDRB     r0,[r6,#0]            ;85  ; page_sw
000056  b178              CBZ      r0,|L3.120|
000058  7830              LDRB     r0,[r6,#0]            ;87  ; page_sw
00005a  2805              CMP      r0,#5                 ;87
00005c  d00f              BEQ      |L3.126|
00005e  e010              B        |L3.130|
                  |L3.96|
000060  f7fffffe          BL       ResetPow
000064  e00d              B        |L3.130|
                  |L3.102|
000066  f7fffffe          BL       ResetCDC
00006a  e00a              B        |L3.130|
                  |L3.108|
00006c  f7fffffe          BL       ResetR
000070  e007              B        |L3.130|
                  |L3.114|
000072  f7fffffe          BL       ResetLoad
000076  e004              B        |L3.130|
                  |L3.120|
000078  f7fffffe          BL       ResetG
00007c  e001              B        |L3.130|
                  |L3.126|
00007e  f7fffffe          BL       ResetSET
                  |L3.130|
000082  8065              STRH     r5,[r4,#2]
000084  e002              B        |L3.140|
                  |L3.134|
;;;93                      }else{
;;;94                          resetcount++;
000086  8860              LDRH     r0,[r4,#2]  ; resetcount
000088  1c40              ADDS     r0,r0,#1
00008a  8060              STRH     r0,[r4,#2]
                  |L3.140|
;;;95                      }                
;;;96                  }
;;;97              }
;;;98              
;;;99             if(oct_sw == oct_on)
00008c  4c0f              LDR      r4,|L3.204|
00008e  7820              LDRB     r0,[r4,#0]  ; oct_sw
000090  2801              CMP      r0,#1
000092  d113              BNE      |L3.188|
;;;100            {
;;;101                OC_CHECK();
000094  f7fffffe          BL       OC_CHECK
;;;102                if(oct_sw == oct_on)
000098  7820              LDRB     r0,[r4,#0]  ; oct_sw
00009a  2801              CMP      r0,#1
00009c  d10e              BNE      |L3.188|
;;;103                {
;;;104                    stepcount ++;
00009e  4c0c              LDR      r4,|L3.208|
0000a0  8820              LDRH     r0,[r4,#0]  ; stepcount
0000a2  1c40              ADDS     r0,r0,#1
0000a4  8020              STRH     r0,[r4,#0]
;;;105                    if(stepcount == steptime*10)
0000a6  480b              LDR      r0,|L3.212|
0000a8  8800              LDRH     r0,[r0,#0]  ; steptime
0000aa  8821              LDRH     r1,[r4,#0]  ; stepcount
0000ac  eb000080          ADD      r0,r0,r0,LSL #2
0000b0  ebb10f40          CMP      r1,r0,LSL #1
0000b4  d102              BNE      |L3.188|
;;;106                    {
;;;107                        OC_ADD();
0000b6  f7fffffe          BL       OC_ADD
;;;108                        stepcount = 0;
0000ba  8025              STRH     r5,[r4,#0]
                  |L3.188|
;;;109                    }
;;;110                }
;;;111            }
;;;112    //         if(page_sw == face_load)
;;;113    //         {
;;;114    //             if(c_rec == 1)
;;;115    //             {
;;;116    //                 crec2 = crec1;
;;;117    //                 crec1 = DISS_Current;
;;;118    //                 if(crec2 > crec1)
;;;119    //                 {
;;;120    //                     watch = crec2;
;;;121    //                     c_rec = 0;
;;;122    //                     crec2 = crec1 = 0;
;;;123    //                 }
;;;124    //             }
;;;125    //         }
;;;126        }    
;;;127    }
0000bc  bd70              POP      {r4-r6,pc}
;;;128    
                          ENDP

0000be  0000              DCW      0x0000
                  |L3.192|
                          DCD      0x40000800
                  |L3.196|
                          DCD      page_sw
                  |L3.200|
                          DCD      ||.data||
                  |L3.204|
                          DCD      oct_sw
                  |L3.208|
                          DCD      stepcount
                  |L3.212|
                          DCD      steptime

                          AREA ||i.TIM4_Int_Init||, CODE, READONLY, ALIGN=2

                  TIM4_Int_Init PROC
;;;34     //?o???¡¦??? 3!
;;;35     void TIM4_Int_Init(u16 arr,u16 psc)
000000  b57f              PUSH     {r0-r6,lr}
;;;36     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;37         TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;
;;;38         NVIC_InitTypeDef NVIC_InitStructure;
;;;39         
;;;40         RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM4,ENABLE); //¨´?? TIM3 ??
000006  2101              MOVS     r1,#1
000008  2004              MOVS     r0,#4
00000a  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;41         TIM_TimeBaseInitStructure.TIM_Period = arr; //??????
;;;42         TIM_TimeBaseInitStructure.TIM_Prescaler=psc; //?????
00000e  9401              STR      r4,[sp,#4]
;;;43         TIM_TimeBaseInitStructure.TIM_CounterMode=TIM_CounterMode_Up; //§Ó?????
000010  2000              MOVS     r0,#0
000012  f8ad5000          STRH     r5,[sp,#0]            ;42
;;;44         TIM_TimeBaseInitStructure.TIM_ClockDivision=TIM_CKD_DIV1;
;;;45         TIM_TimeBaseInit(TIM4,&TIM_TimeBaseInitStructure);// ¨²?????? TIM3
000016  4c10              LDR      r4,|L4.88|
000018  f8ad0002          STRH     r0,[sp,#2]            ;43
00001c  f8ad0008          STRH     r0,[sp,#8]            ;44
000020  4669              MOV      r1,sp
000022  4620              MOV      r0,r4
000024  f7fffffe          BL       TIM_TimeBaseInit
;;;46         TIM_ITConfig(TIM4,TIM_IT_Update,ENABLE); //?????? 3 ?§ä??
000028  2201              MOVS     r2,#1
00002a  4611              MOV      r1,r2
00002c  4620              MOV      r0,r4
00002e  f7fffffe          BL       TIM_ITConfig
;;;47         NVIC_InitStructure.NVIC_IRQChannel=TIM4_IRQn; //??? 3 ??
000032  201e              MOVS     r0,#0x1e
000034  f88d000c          STRB     r0,[sp,#0xc]
;;;48         NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=0x01; //????? 1
000038  2101              MOVS     r1,#1
00003a  f88d100d          STRB     r1,[sp,#0xd]
;;;49         NVIC_InitStructure.NVIC_IRQChannelSubPriority=0x03; //§¾???? 3
00003e  2203              MOVS     r2,#3
000040  f88d200e          STRB     r2,[sp,#0xe]
;;;50         NVIC_InitStructure.NVIC_IRQChannelCmd=ENABLE;
000044  f88d100f          STRB     r1,[sp,#0xf]
;;;51         NVIC_Init(&NVIC_InitStructure);// ¨¹??? NVIC
000048  a803              ADD      r0,sp,#0xc
00004a  f7fffffe          BL       NVIC_Init
;;;52         TIM_Cmd(TIM4,ENABLE); //Y????? 3
00004e  2101              MOVS     r1,#1
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       TIM_Cmd
;;;53     }
000056  bd7f              POP      {r0-r6,pc}
;;;54     //??? 3 ??????
                          ENDP

                  |L4.88|
                          DCD      0x40000800

                          AREA ||i.TIM6_Config||, CODE, READONLY, ALIGN=2

                  TIM6_Config PROC
;;;128    
;;;129    void TIM6_Config(void)
000000  b51f              PUSH     {r0-r4,lr}
;;;130    {
;;;131    	TIM_TimeBaseInitTypeDef  TIM_TimeBaseStructure;
;;;132    	/* TIM3 ??? ---------------------------------------------------
;;;133       TIM3 ????(TIM3CLK) ??? APB2 ?? (PCLK2)    
;;;134        => TIM3CLK = PCLK2 = SystemCoreClock
;;;135       TIM3CLK = SystemCoreClock, Prescaler = 0, TIM3 counter clock = SystemCoreClock
;;;136       SystemCoreClock ?48 MHz */
;;;137      /* TIM16 ???? */
;;;138      RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM6,ENABLE);
000002  2101              MOVS     r1,#1
000004  2010              MOVS     r0,#0x10
000006  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;139    	
;;;140      /* Time ??????*/
;;;141      TIM_TimeBaseStructure.TIM_Prescaler = 4800-1;//?????
00000a  f24120bf          MOV      r0,#0x12bf
00000e  f8ad0000          STRH     r0,[sp,#0]
;;;142      TIM_TimeBaseStructure.TIM_CounterMode = TIM_CounterMode_Up;  /* Time ????????????*/
000012  2000              MOVS     r0,#0
;;;143      TIM_TimeBaseStructure.TIM_Period = 5000;
000014  f2413188          MOV      r1,#0x1388
;;;144      TIM_TimeBaseStructure.TIM_ClockDivision = TIM_CKD_DIV1;
;;;145    //  TIM_TimeBaseStructure.TIM_RepetitionCounter = 0;
;;;146    
;;;147      TIM_TimeBaseInit(TIM6,&TIM_TimeBaseStructure);
000018  4c12              LDR      r4,|L5.100|
00001a  f8ad0002          STRH     r0,[sp,#2]            ;142
00001e  9101              STR      r1,[sp,#4]            ;144
000020  f8ad0008          STRH     r0,[sp,#8]            ;144
000024  4669              MOV      r1,sp
000026  4620              MOV      r0,r4
000028  f7fffffe          BL       TIM_TimeBaseInit
;;;148    	TIM_ITConfig(TIM6,TIM_IT_Update,ENABLE);//??????§ä??
00002c  2201              MOVS     r2,#1
00002e  4611              MOV      r1,r2
000030  4620              MOV      r0,r4
000032  f7fffffe          BL       TIM_ITConfig
;;;149    	TIM_SetAutoreload(TIM6, 0xFF);//??PWM??¨º
000036  21ff              MOVS     r1,#0xff
000038  4620              MOV      r0,r4
00003a  f7fffffe          BL       TIM_SetAutoreload
00003e  2036              MOVS     r0,#0x36
000040  f88d000c          STRB     r0,[sp,#0xc]
000044  2101              MOVS     r1,#1
000046  f88d100d          STRB     r1,[sp,#0xd]
00004a  2203              MOVS     r2,#3
00004c  f88d200e          STRB     r2,[sp,#0xe]
000050  f88d100f          STRB     r1,[sp,#0xf]
000054  a803              ADD      r0,sp,#0xc
000056  f7fffffe          BL       NVIC_Init
;;;150    	TIM6_NVIC_Config();
;;;151      /* TIM3 ?????*/
;;;152      TIM_Cmd(TIM6, ENABLE);
00005a  2101              MOVS     r1,#1
00005c  4620              MOV      r0,r4
00005e  f7fffffe          BL       TIM_Cmd
;;;153    }
000062  bd1f              POP      {r0-r4,pc}
;;;154    /***********************************************************************/
                          ENDP

                  |L5.100|
                          DCD      0x40001000

                          AREA ||.data||, DATA, ALIGN=2

                  calert
000000  00                DCB      0x00
                  resetflag
000001  00                DCB      0x00
                  resetcount
000002  0000              DCB      0x00,0x00
                  bc_raw
                          DCD      0x00000000

                          AREA ||area_number.9||, DATA, ALIGN=1

                          EXPORTAS ||area_number.9||, ||.data||
                  battery_c
000000  0000              DCB      0x00,0x00

                          AREA ||area_number.10||, DATA, ALIGN=0

                          EXPORTAS ||area_number.10||, ||.data||
                  resdone
000000  00                DCB      0x00

                          AREA ||area_number.11||, DATA, ALIGN=2

                          EXPORTAS ||area_number.11||, ||.data||
                  watch
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\drive\\TIM6.c"
	AREA ||.rev16_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_TIM6_c_3a0b03ec____REV16|
#line 114 "D:\\Keil\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_TIM6_c_3a0b03ec____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___6_TIM6_c_3a0b03ec____REVSH|
#line 128
|__asm___6_TIM6_c_3a0b03ec____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
